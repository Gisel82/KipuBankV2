{
	"id": "8f603329ba93ef76f177ae923677d157",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/KipuBankV2.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.30; \r\n\r\n/// @title KipuBank - It is a deposit vault contract with a transaction limit and total capacity, and also allows users to deposit and withdraw ETH with restrictions.\r\n///@dev Use standard security practices such as custom errors, checks-effects-interactions patterns, and events.\r\n\r\n// =================\r\n//      IMPORT\r\n// =================\r\n\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\n\r\ncontract KipuBank is AccessControl, ReentrancyGuard{\r\n    using SafeERC20 for IERC20;\r\n  \r\n    // ==============\r\n    //     ROLES\r\n    // ==============\r\n\r\n    bytes32 public constant BANK_MANAGER_ROLE = keccak256(\"BANK_MANAGER_ROLE\");\r\n    \r\n    // ====================\r\n    // IMMUTABLE VARIABLES\r\n    // ====================\r\n    \r\n\r\n    /// @notice Máximo permitido por transacción de retiro.\r\n    uint256 public immutable maxWithdrawal;\r\n\r\n    /// @notice Capacidad total del banco en ETH.\r\n    uint256 public immutable totalBankCapacity;\r\n\r\n    \r\n    // ==================\r\n    // STORAGE VARIABLES\r\n    // ==================\r\n\r\n    /// @notice Total actual de todos los depósitos en el contrato.\r\n    uint256 public totalDeposits;\r\n\r\n   \r\n    // ==============================\r\n    // MAPPINGS\r\n    // ==============================\r\n\r\n\r\n    /// @notice User balances stored in the vault.\r\n    mapping(address => uint256) private vaultBalance;\r\n\r\n    /// @notice Number of deposits made by each user.\r\n    mapping(address => uint256) public depositCount;\r\n\r\n    /// @notice Number of withdrawals made by each user.\r\n    mapping(address => uint256) public withdrawalCount;\r\n\r\n\r\n    // =======\r\n    // EVENTS\r\n    // =======\r\n\r\n\r\n    /// @notice It is issued when the user makes a successful deposit.\r\n    /// @param user is the user's address \r\n    ///@param  amount Amount of ETH deposited.\r\n\r\n    event DepositMade(address indexed user, uint256 amount);\r\n    \r\n    /// @notice It is issued when the user makes a successful withdrawal.\r\n    /// @param user the user's address \r\n   ///@param amount Amount of ETH withdrawn.\r\n    \r\n\r\n    event WithdrawalMade(address indexed user, uint256 amount);\r\n\r\n\r\n    // ==============================\r\n    // CUSTOM ERRORS\r\n    // ==============================\r\n\r\n    /// @notice It is launched when a deposit exceeds the global banking capacity.\r\n    error MaxDepositExceeded();\r\n\r\n    /// @notice When a withdrawal exceeds the transaction limit.\r\n    error MaxWithdrawalExceeded();\r\n\r\n    /// @notice When a user tries to withdraw more than their balance\r\n    error InsufficientBalance();\r\n\r\n    /// @notice When trying to deposit 0 ETH.\r\n    error ZeroDepositNotAllowed();\r\n\r\n    /// @notice Thrown if you try to send ETH directly to the contract.\r\n    error DirectTransferNotAllowed();\r\n\r\n    /// @notice Thrown if the maxRetiro value in the constructor is invalid.\r\n    error MaximumWithdrawalInvalid();\r\n\r\n    /// @notice Thrown if the bank capacity in the constructor is invalid.\r\n    error InvalidBankCapacity();\r\n\r\n   \r\n    // ==============================\r\n    // CONSTRUCTOR\r\n    // ==============================\r\n\r\n    /// @notice Initializes the contract with the specified limits.\r\n    /// @param _maxWithdrawal Maximum withdrawal limit per transaction.\r\n    /// @param _totalCapacity Total ETH capacity of the bank.\r\n    \r\n    constructor(uint256 _maxWithdrawal, uint256 _totalCapacity) {\r\n        if (_maxWithdrawal == 0) revert MaximumWithdrawalInvalid();\r\n        if (_totalCapacity == 0) revert InvalidBankCapacity();\r\n\r\n        maxWithdrawal = _maxWithdrawal;\r\n        totalBankCapacity = _totalCapacity;\r\n    }\r\n\r\n    // ==============================\r\n    // MODIFIERS\r\n    // ==============================\r\n\r\n\r\n    /// @notice Verify that the amount sent is greater than 0.\r\n      \r\n    modifier nonZeroDeposit() {\r\n        if (msg.value == 0) revert ZeroDepositNotAllowed();\r\n        _;\r\n    }\r\n    \r\n    /// @notice Check that the withdrawal is within the maximum allowed.\r\n    /// @param amount Amount to withdraw.\r\n    \r\n    modifier withinWithdrawalLimit(uint256 amount) {\r\n        if (amount > maxWithdrawal) revert MaxWithdrawalExceeded();\r\n        _;\r\n    }\r\n\r\n    // ==============================\r\n    //  EXTERNAL PAYABLE FUNCTIONS\r\n    // ==============================\r\n\r\n    /// @notice Deposits ETH into the user's personal vault.\r\n    /// @dev Check global limit and record deposit.\r\n    \r\n    function deposit() external payable nonZeroDeposit {\r\n        if (totalDeposits + msg.value > totalBankCapacity) {\r\n            revert MaxDepositExceeded();\r\n        }\r\n\r\n        vaultBalance[msg.sender] += msg.value;\r\n        totalDeposits += msg.value;\r\n        depositCount[msg.sender]++;\r\n\r\n        emit DepositMade(msg.sender, msg.value);\r\n    }\r\n\r\n    /// @notice Withdraws a specified amount of ETH from the user's vault.\r\n    /// @param amount The amount of ETH to withdraw and uses secure transfers and custom errors.\r\n   \r\n   function withdraw(uint256 amount) external withinWithdrawalLimit(amount) {\r\n        uint256 balance = vaultBalance[msg.sender];\r\n        if (balance < amount) revert InsufficientBalance();\r\n\r\n        unchecked {\r\n            vaultBalance[msg.sender] = balance - amount;\r\n            totalDeposits -= amount;\r\n        }\r\n\r\n        withdrawalCount[msg.sender]++;\r\n        _safeTransfer(msg.sender, amount);\r\n\r\n        emit WithdrawalMade(msg.sender, amount);\r\n    }\r\n\r\n    //===========================\r\n    // EXTERNAL  VIEW FUNCTIONS\r\n    //===========================\r\n    \r\n    /// @notice Returns the current vault balance of a given user.\r\n    /// @param user Address of the user to query.\r\n    /// @return The ETH balance of the user in the vault.\r\n\r\n      \r\n    function getBalance(address user) external view returns (uint256) {\r\n        return vaultBalance[user];\r\n    }\r\n\r\n    // ==================\r\n    // PRIVATE FUNCTIONS\r\n    // ==================\r\n\r\n\r\n    /// @dev Handles secure ETH transfer.\r\n    /// @param recipient Address to which the ETH will be sent \r\n    ///@param amount Amount of ETH to be transferred.\r\n\r\n    function _safeTransfer(address recipient, uint256 amount) private {\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        if (!success) revert();\r\n    }\r\n\r\n    // ==================\r\n    // RECEIVE FUNCTION\r\n    // ==================\r\n\r\n    /// @notice Rejects direct ETH transfers.\r\n    receive() external payable {\r\n        revert DirectTransferNotAllowed();\r\n    }\r\n}"
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity >=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 73,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)68_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)68_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)68_storage"
							},
							"t_struct(RoleData)68_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 65,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 67,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 526,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x9870605E8F38FC4A69034310 SWAP3 0xB7 0xB8 PUSH9 0xBC6456AB2E01DF7BCE 0xB2 OR 0xCD DUP7 PUSH21 0xD764736F6C634300081E0033000000000000000000 ",
							"sourceMap": "698:9376:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x9870605E8F38FC4A69034310 SWAP3 0xB7 0xB8 PUSH9 0xBC6456AB2E01DF7BCE 0xB2 OR 0xCD DUP7 PUSH21 0xD764736F6C634300081E0033000000000000000000 ",
							"sourceMap": "698:9376:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/KipuBankV2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/KipuBankV2.sol": {
				"KipuBank": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_maxWithdrawal",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_totalCapacity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DirectTransferNotAllowed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidBankCapacity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MaxDepositExceeded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MaxWithdrawalExceeded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MaximumWithdrawalInvalid",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroDepositNotAllowed",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "DepositMade",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "WithdrawalMade",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BANK_MANAGER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "depositCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxWithdrawal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalBankCapacity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalDeposits",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "withdrawalCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"DepositMade(address,uint256)": {
								"params": {
									"amount": "Amount of ETH deposited.",
									"user": "is the user's address "
								}
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"WithdrawalMade(address,uint256)": {
								"params": {
									"amount": "Amount of ETH withdrawn.",
									"user": "the user's address "
								}
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"_maxWithdrawal": "Maximum withdrawal limit per transaction.",
									"_totalCapacity": "Total ETH capacity of the bank."
								}
							},
							"deposit()": {
								"details": "Check global limit and record deposit."
							},
							"getBalance(address)": {
								"params": {
									"user": "Address of the user to query."
								},
								"returns": {
									"_0": "The ETH balance of the user in the vault."
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"withdraw(uint256)": {
								"params": {
									"amount": "The amount of ETH to withdraw and uses secure transfers and custom errors."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/KipuBankV2.sol\":737:6782  contract KipuBank is AccessControl, ReentrancyGuard{... */\n  mstore(0x40, 0xc0)\n    /* \"src/KipuBankV2.sol\":3631:3920  constructor(uint256 _maxWithdrawal, uint256 _totalCapacity) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"src/KipuBankV2.sol\":3724:3725  0 */\n  0x00\n    /* \"src/KipuBankV2.sol\":3706:3720  _maxWithdrawal */\n  dup3\n    /* \"src/KipuBankV2.sol\":3706:3725  _maxWithdrawal == 0 */\n  sub\n    /* \"src/KipuBankV2.sol\":3702:3760  if (_maxWithdrawal == 0) revert MaximumWithdrawalInvalid() */\n  tag_8\n  jumpi\n    /* \"src/KipuBankV2.sol\":3734:3760  MaximumWithdrawalInvalid() */\n  mload(0x40)\n  0xf1f13a3800000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"src/KipuBankV2.sol\":3702:3760  if (_maxWithdrawal == 0) revert MaximumWithdrawalInvalid() */\ntag_8:\n    /* \"src/KipuBankV2.sol\":3793:3794  0 */\n  0x00\n    /* \"src/KipuBankV2.sol\":3775:3789  _totalCapacity */\n  dup2\n    /* \"src/KipuBankV2.sol\":3775:3794  _totalCapacity == 0 */\n  sub\n    /* \"src/KipuBankV2.sol\":3771:3824  if (_totalCapacity == 0) revert InvalidBankCapacity() */\n  tag_9\n  jumpi\n    /* \"src/KipuBankV2.sol\":3803:3824  InvalidBankCapacity() */\n  mload(0x40)\n  0xafea1c5700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"src/KipuBankV2.sol\":3771:3824  if (_totalCapacity == 0) revert InvalidBankCapacity() */\ntag_9:\n    /* \"src/KipuBankV2.sol\":3853:3867  _maxWithdrawal */\n  dup2\n    /* \"src/KipuBankV2.sol\":3837:3867  maxWithdrawal = _maxWithdrawal */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"src/KipuBankV2.sol\":3898:3912  _totalCapacity */\n  dup1\n    /* \"src/KipuBankV2.sol\":3878:3912  totalBankCapacity = _totalCapacity */\n  0xa0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"src/KipuBankV2.sol\":3631:3920  constructor(uint256 _maxWithdrawal, uint256 _totalCapacity) {... */\n  pop\n  pop\n    /* \"src/KipuBankV2.sol\":737:6782  contract KipuBank is AccessControl, ReentrancyGuard{... */\n  jump(tag_10)\n    /* \"#utility.yul\":88:205   */\ntag_12:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_14:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_15:\n    /* \"#utility.yul\":490:514   */\n  tag_23\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_14\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  0x00\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_24:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_16:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_26\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_15\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1201   */\ntag_3:\n    /* \"#utility.yul\":773:779   */\n  0x00\n    /* \"#utility.yul\":781:787   */\n  0x00\n    /* \"#utility.yul\":830:832   */\n  0x40\n    /* \"#utility.yul\":818:827   */\n  dup4\n    /* \"#utility.yul\":809:816   */\n  dup6\n    /* \"#utility.yul\":805:828   */\n  sub\n    /* \"#utility.yul\":801:833   */\n  slt\n    /* \"#utility.yul\":798:917   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":836:915   */\n  tag_29\n  tag_12\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":798:917   */\ntag_28:\n    /* \"#utility.yul\":956:957   */\n  0x00\n    /* \"#utility.yul\":981:1045   */\n  tag_30\n    /* \"#utility.yul\":1037:1044   */\n  dup6\n    /* \"#utility.yul\":1028:1034   */\n  dup3\n    /* \"#utility.yul\":1017:1026   */\n  dup7\n    /* \"#utility.yul\":1013:1035   */\n  add\n    /* \"#utility.yul\":981:1045   */\n  tag_16\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":971:1045   */\n  swap3\n  pop\n    /* \"#utility.yul\":927:1055   */\n  pop\n    /* \"#utility.yul\":1094:1096   */\n  0x20\n    /* \"#utility.yul\":1120:1184   */\n  tag_31\n    /* \"#utility.yul\":1176:1183   */\n  dup6\n    /* \"#utility.yul\":1167:1173   */\n  dup3\n    /* \"#utility.yul\":1156:1165   */\n  dup7\n    /* \"#utility.yul\":1152:1174   */\n  add\n    /* \"#utility.yul\":1120:1184   */\n  tag_16\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1110:1184   */\n  swap2\n  pop\n    /* \"#utility.yul\":1065:1194   */\n  pop\n    /* \"#utility.yul\":694:1201   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"src/KipuBankV2.sol\":737:6782  contract KipuBank is AccessControl, ReentrancyGuard{... */\ntag_10:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x33cc19d79febe2413fb9e204aeb684d47982ef5754538b90a83e403603eda384\")\n  0x00\n  assignImmutable(\"0x665815f06199f799aa9c8465bf48731e4a71da710cd1bae12047781b4c666aed\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/KipuBankV2.sol\":737:6782  contract KipuBank is AccessControl, ReentrancyGuard{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa217fddf\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xd547741f\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2157052\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf4443d9a\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf8b2cb4f\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0xa217fddf\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xb3d8bcdc\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xc16ec037\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x36568abe\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x7d882097\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8c0ff5b7\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"src/KipuBankV2.sol\":6745:6771  DirectTransferNotAllowed() */\n      mload(0x40)\n      0x3ee6509d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":737:6782  contract KipuBank is AccessControl, ReentrancyGuard{... */\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      revert(0x00, 0x00)\n    tag_24:\n      pop\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      revert(0x00, 0x00)\n    tag_31:\n      pop\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/KipuBankV2.sol\":5259:5722  function withdraw(uint256 amount) external withinWithdrawalLimit(amount) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      revert(0x00, 0x00)\n    tag_38:\n      pop\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      revert(0x00, 0x00)\n    tag_43:\n      pop\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      revert(0x00, 0x00)\n    tag_48:\n      pop\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      stop\n        /* \"src/KipuBankV2.sol\":1449:1477  uint256 public totalDeposits */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      revert(0x00, 0x00)\n    tag_52:\n      pop\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/KipuBankV2.sol\":1142:1180  uint256 public immutable maxWithdrawal */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      revert(0x00, 0x00)\n    tag_57:\n      pop\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      revert(0x00, 0x00)\n    tag_61:\n      pop\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      revert(0x00, 0x00)\n    tag_66:\n      pop\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/KipuBankV2.sol\":1868:1918  mapping(address => uint256) public withdrawalCount */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      revert(0x00, 0x00)\n    tag_70:\n      pop\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/KipuBankV2.sol\":1240:1282  uint256 public immutable totalBankCapacity */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      revert(0x00, 0x00)\n    tag_76:\n      pop\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/KipuBankV2.sol\":4723:5073  function deposit() external payable nonZeroDeposit {... */\n    tag_14:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      revert(0x00, 0x00)\n    tag_82:\n      pop\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      stop\n        /* \"src/KipuBankV2.sol\":898:972  bytes32 public constant BANK_MANAGER_ROLE = keccak256(\"BANK_MANAGER_ROLE\") */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      revert(0x00, 0x00)\n    tag_86:\n      pop\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/KipuBankV2.sol\":1754:1801  mapping(address => uint256) public depositCount */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      revert(0x00, 0x00)\n    tag_90:\n      pop\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/KipuBankV2.sol\":6027:6137  function getBalance(address user) external view returns (uint256) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      revert(0x00, 0x00)\n    tag_95:\n      pop\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2626:2630  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2664:2696  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2660  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_101\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2736  super.supportsInterface(interfaceId) */\n      tag_102\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2735  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2723  super.supportsInterface */\n      tag_103\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2736  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_101:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2642:2736  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3851:3858  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3884:3888  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3870:3899  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":5259:5722  function withdraw(uint256 amount) external withinWithdrawalLimit(amount) {... */\n    tag_42:\n        /* \"src/KipuBankV2.sol\":5324:5330  amount */\n      dup1\n        /* \"src/KipuBankV2.sol\":4413:4426  maxWithdrawal */\n      immutable(\"0x665815f06199f799aa9c8465bf48731e4a71da710cd1bae12047781b4c666aed\")\n        /* \"src/KipuBankV2.sol\":4404:4410  amount */\n      dup2\n        /* \"src/KipuBankV2.sol\":4404:4426  amount > maxWithdrawal */\n      gt\n        /* \"src/KipuBankV2.sol\":4400:4458  if (amount > maxWithdrawal) revert MaxWithdrawalExceeded() */\n      iszero\n      tag_106\n      jumpi\n        /* \"src/KipuBankV2.sol\":4435:4458  MaxWithdrawalExceeded() */\n      mload(0x40)\n      0x73a7c91000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":4400:4458  if (amount > maxWithdrawal) revert MaxWithdrawalExceeded() */\n    tag_106:\n        /* \"src/KipuBankV2.sol\":5343:5358  uint256 balance */\n      0x00\n        /* \"src/KipuBankV2.sol\":5361:5373  vaultBalance */\n      0x03\n        /* \"src/KipuBankV2.sol\":5361:5385  vaultBalance[msg.sender] */\n      0x00\n        /* \"src/KipuBankV2.sol\":5374:5384  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":5361:5385  vaultBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/KipuBankV2.sol\":5343:5385  uint256 balance = vaultBalance[msg.sender] */\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":5410:5416  amount */\n      dup3\n        /* \"src/KipuBankV2.sol\":5400:5407  balance */\n      dup2\n        /* \"src/KipuBankV2.sol\":5400:5416  balance < amount */\n      lt\n        /* \"src/KipuBankV2.sol\":5396:5446  if (balance < amount) revert InsufficientBalance() */\n      iszero\n      tag_108\n      jumpi\n        /* \"src/KipuBankV2.sol\":5425:5446  InsufficientBalance() */\n      mload(0x40)\n      0xf4d678b800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":5396:5446  if (balance < amount) revert InsufficientBalance() */\n    tag_108:\n        /* \"src/KipuBankV2.sol\":5521:5527  amount */\n      dup3\n        /* \"src/KipuBankV2.sol\":5511:5518  balance */\n      dup2\n        /* \"src/KipuBankV2.sol\":5511:5527  balance - amount */\n      sub\n        /* \"src/KipuBankV2.sol\":5484:5496  vaultBalance */\n      0x03\n        /* \"src/KipuBankV2.sol\":5484:5508  vaultBalance[msg.sender] */\n      0x00\n        /* \"src/KipuBankV2.sol\":5497:5507  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":5484:5508  vaultBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV2.sol\":5484:5527  vaultBalance[msg.sender] = balance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV2.sol\":5559:5565  amount */\n      dup3\n        /* \"src/KipuBankV2.sol\":5542:5555  totalDeposits */\n      0x02\n      0x00\n        /* \"src/KipuBankV2.sol\":5542:5565  totalDeposits -= amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV2.sol\":5589:5604  withdrawalCount */\n      0x05\n        /* \"src/KipuBankV2.sol\":5589:5616  withdrawalCount[msg.sender] */\n      0x00\n        /* \"src/KipuBankV2.sol\":5605:5615  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":5589:5616  withdrawalCount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/KipuBankV2.sol\":5589:5618  withdrawalCount[msg.sender]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"src/KipuBankV2.sol\":5629:5662  _safeTransfer(msg.sender, amount) */\n      tag_111\n        /* \"src/KipuBankV2.sol\":5643:5653  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":5655:5661  amount */\n      dup5\n        /* \"src/KipuBankV2.sol\":5629:5642  _safeTransfer */\n      tag_112\n        /* \"src/KipuBankV2.sol\":5629:5662  _safeTransfer(msg.sender, amount) */\n      jump\t// in\n    tag_111:\n        /* \"src/KipuBankV2.sol\":5695:5705  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":5680:5714  WithdrawalMade(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc158bb64f05d6383aea69bbb0b20c1bbf4b7a18f63359c5649b7c39e29d3884\n        /* \"src/KipuBankV2.sol\":5707:5713  amount */\n      dup5\n        /* \"src/KipuBankV2.sol\":5680:5714  WithdrawalMade(msg.sender, amount) */\n      mload(0x40)\n      tag_113\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/KipuBankV2.sol\":5332:5722  {... */\n      pop\n        /* \"src/KipuBankV2.sol\":5259:5722  function withdraw(uint256 amount) external withinWithdrawalLimit(amount) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      tag_114\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4289:4293  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4288  getRoleAdmin */\n      tag_35\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_116\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_117\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      tag_119\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4317:4321  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4323:4330  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4316  _grantRole */\n      tag_120\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      jump\t// in\n    tag_119:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5431  _msgSender() */\n      tag_122\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5429  _msgSender */\n      tag_123\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5431  _msgSender() */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5415  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n      tag_124\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5454:5484  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      tag_125\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5517:5521  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5523:5541  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5516  _revokeRole */\n      tag_126\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_125:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":1449:1477  uint256 public totalDeposits */\n    tag_54:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":1142:1180  uint256 public immutable maxWithdrawal */\n    tag_59:\n      immutable(\"0x665815f06199f799aa9c8465bf48731e4a71da710cd1bae12047781b4c666aed\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2907:2911  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2937:2941  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2950  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2951:2958  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2923:2959  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":1868:1918  mapping(address => uint256) public withdrawalCount */\n    tag_74:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":1240:1282  uint256 public immutable totalBankCapacity */\n    tag_78:\n      immutable(\"0x33cc19d79febe2413fb9e204aeb684d47982ef5754538b90a83e403603eda384\")\n      dup2\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":4723:5073  function deposit() external payable nonZeroDeposit {... */\n    tag_81:\n        /* \"src/KipuBankV2.sol\":4154:4155  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":4141:4150  msg.value */\n      callvalue\n        /* \"src/KipuBankV2.sol\":4141:4155  msg.value == 0 */\n      sub\n        /* \"src/KipuBankV2.sol\":4137:4187  if (msg.value == 0) revert ZeroDepositNotAllowed() */\n      tag_129\n      jumpi\n        /* \"src/KipuBankV2.sol\":4164:4187  ZeroDepositNotAllowed() */\n      mload(0x40)\n      0x8615019900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":4137:4187  if (msg.value == 0) revert ZeroDepositNotAllowed() */\n    tag_129:\n        /* \"src/KipuBankV2.sol\":4817:4834  totalBankCapacity */\n      immutable(\"0x33cc19d79febe2413fb9e204aeb684d47982ef5754538b90a83e403603eda384\")\n        /* \"src/KipuBankV2.sol\":4805:4814  msg.value */\n      callvalue\n        /* \"src/KipuBankV2.sol\":4789:4802  totalDeposits */\n      sload(0x02)\n        /* \"src/KipuBankV2.sol\":4789:4814  totalDeposits + msg.value */\n      tag_131\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n        /* \"src/KipuBankV2.sol\":4789:4834  totalDeposits + msg.value > totalBankCapacity */\n      gt\n        /* \"src/KipuBankV2.sol\":4785:4890  if (totalDeposits + msg.value > totalBankCapacity) {... */\n      iszero\n      tag_133\n      jumpi\n        /* \"src/KipuBankV2.sol\":4858:4878  MaxDepositExceeded() */\n      mload(0x40)\n      0xdef6daf200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":4785:4890  if (totalDeposits + msg.value > totalBankCapacity) {... */\n    tag_133:\n        /* \"src/KipuBankV2.sol\":4930:4939  msg.value */\n      callvalue\n        /* \"src/KipuBankV2.sol\":4902:4914  vaultBalance */\n      0x03\n        /* \"src/KipuBankV2.sol\":4902:4926  vaultBalance[msg.sender] */\n      0x00\n        /* \"src/KipuBankV2.sol\":4915:4925  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":4902:4926  vaultBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/KipuBankV2.sol\":4902:4939  vaultBalance[msg.sender] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_134\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_134:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV2.sol\":4967:4976  msg.value */\n      callvalue\n        /* \"src/KipuBankV2.sol\":4950:4963  totalDeposits */\n      0x02\n      0x00\n        /* \"src/KipuBankV2.sol\":4950:4976  totalDeposits += msg.value */\n      dup3\n      dup3\n      sload\n      tag_135\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV2.sol\":4987:4999  depositCount */\n      0x04\n        /* \"src/KipuBankV2.sol\":4987:5011  depositCount[msg.sender] */\n      0x00\n        /* \"src/KipuBankV2.sol\":5000:5010  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":4987:5011  depositCount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/KipuBankV2.sol\":4987:5013  depositCount[msg.sender]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_136\n      swap1\n      tag_110\n      jump\t// in\n    tag_136:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"src/KipuBankV2.sol\":5043:5053  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":5031:5065  DepositMade(msg.sender, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd15c9547ea5c06670c0010ce19bc32d54682a4b3801ece7f3ab0c3f17106b4bb\n        /* \"src/KipuBankV2.sol\":5055:5064  msg.value */\n      callvalue\n        /* \"src/KipuBankV2.sol\":5031:5065  DepositMade(msg.sender, msg.value) */\n      mload(0x40)\n      tag_137\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/KipuBankV2.sol\":4723:5073  function deposit() external payable nonZeroDeposit {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      tag_138\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4706:4710  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4705  getRoleAdmin */\n      tag_35\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_140\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_117\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      tag_142\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4735:4739  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4741:4748  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4734  _revokeRole */\n      tag_126\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      jump\t// in\n    tag_142:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":898:972  bytes32 public constant BANK_MANAGER_ROLE = keccak256(\"BANK_MANAGER_ROLE\") */\n    tag_88:\n        /* \"src/KipuBankV2.sol\":942:972  keccak256(\"BANK_MANAGER_ROLE\") */\n      0x2d95a8186db49da8bd2356c70cf02038f7de0d6ed39f6766fe2d93d5e7785616\n        /* \"src/KipuBankV2.sol\":898:972  bytes32 public constant BANK_MANAGER_ROLE = keccak256(\"BANK_MANAGER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":1754:1801  mapping(address => uint256) public depositCount */\n    tag_93:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":6027:6137  function getBalance(address user) external view returns (uint256) {... */\n    tag_98:\n        /* \"src/KipuBankV2.sol\":6084:6091  uint256 */\n      0x00\n        /* \"src/KipuBankV2.sol\":6111:6123  vaultBalance */\n      0x03\n        /* \"src/KipuBankV2.sol\":6111:6129  vaultBalance[user] */\n      0x00\n        /* \"src/KipuBankV2.sol\":6124:6128  user */\n      dup4\n        /* \"src/KipuBankV2.sol\":6111:6129  vaultBalance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/KipuBankV2.sol\":6104:6129  return vaultBalance[user] */\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":6027:6137  function getBalance(address user) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":730:876  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":806:810  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":844:869  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:840  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":822:869  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":730:876  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":6394:6564  function _safeTransfer(address recipient, uint256 amount) private {... */\n    tag_112:\n        /* \"src/KipuBankV2.sol\":6472:6484  bool success */\n      0x00\n        /* \"src/KipuBankV2.sol\":6490:6499  recipient */\n      dup3\n        /* \"src/KipuBankV2.sol\":6490:6504  recipient.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/KipuBankV2.sol\":6512:6518  amount */\n      dup3\n        /* \"src/KipuBankV2.sol\":6490:6523  recipient.call{value: amount}(\"\") */\n      mload(0x40)\n      tag_146\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_150\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_149)\n    tag_150:\n      0x60\n      swap2\n      pop\n    tag_149:\n      pop\n        /* \"src/KipuBankV2.sol\":6471:6523  (bool success, ) = recipient.call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":6539:6546  success */\n      dup1\n        /* \"src/KipuBankV2.sol\":6534:6556  if (!success) revert() */\n      tag_151\n      jumpi\n        /* \"src/KipuBankV2.sol\":6548:6556  revert() */\n      revert(0x00, 0x00)\n        /* \"src/KipuBankV2.sol\":6534:6556  if (!success) revert() */\n    tag_151:\n        /* \"src/KipuBankV2.sol\":6460:6564  {... */\n      pop\n        /* \"src/KipuBankV2.sol\":6394:6564  function _safeTransfer(address recipient, uint256 amount) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      tag_153\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3252:3256  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3270  _msgSender() */\n      tag_154\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3268  _msgSender */\n      tag_123\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3270  _msgSender() */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3251  _checkRole */\n      tag_155\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6232:6236  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      tag_157\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6261:6265  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6267:6274  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6260  hasRole */\n      tag_64\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n      tag_158\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6297  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6298:6302  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6311  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6312:6319  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n      tag_159\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6383  _msgSender */\n      tag_123\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6364:6371  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6358:6362  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6407:6411  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n      swap1\n      pop\n      jump(tag_156)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6449:6454  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_156:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6786:6790  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      tag_163\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6814:6818  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6820:6827  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6813  hasRole */\n      tag_64\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n      iszero\n      tag_164\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6876:6881  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6850  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6851:6855  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6864  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6873  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6865:6872  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6873  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6881  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6939  _msgSender() */\n      tag_165\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6937  _msgSender */\n      tag_123\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6939  _msgSender() */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6918:6925  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6912:6916  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6961:6965  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6954:6965  return true */\n      swap1\n      pop\n      jump(tag_162)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7003:7008  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6996:7008  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_162:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      tag_168\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3504:3508  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3510:3517  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3503  hasRole */\n      tag_64\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n      tag_169\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3574:3581  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3583:3587  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap3\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_173:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_175:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_176:\n        /* \"#utility.yul\":561:584   */\n      tag_203\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_175\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_204\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      0x00\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_204:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_177:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_206\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_176\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_27:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_208\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_209\n      tag_173\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":833:952   */\n    tag_208:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_210\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_177\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_178:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_179:\n        /* \"#utility.yul\":1268:1289   */\n      tag_213\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_178\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_30:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_215\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_179\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_180:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1723   */\n    tag_181:\n        /* \"#utility.yul\":1674:1698   */\n      tag_218\n        /* \"#utility.yul\":1692:1697   */\n      dup2\n        /* \"#utility.yul\":1674:1698   */\n      tag_180\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":1667:1672   */\n      dup2\n        /* \"#utility.yul\":1664:1699   */\n      eq\n        /* \"#utility.yul\":1654:1717   */\n      tag_219\n      jumpi\n        /* \"#utility.yul\":1713:1714   */\n      0x00\n        /* \"#utility.yul\":1710:1711   */\n      0x00\n        /* \"#utility.yul\":1703:1715   */\n      revert\n        /* \"#utility.yul\":1654:1717   */\n    tag_219:\n        /* \"#utility.yul\":1601:1723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1729:1868   */\n    tag_182:\n        /* \"#utility.yul\":1775:1780   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup2\n        /* \"#utility.yul\":1800:1820   */\n      calldataload\n        /* \"#utility.yul\":1791:1820   */\n      swap1\n      pop\n        /* \"#utility.yul\":1829:1862   */\n      tag_221\n        /* \"#utility.yul\":1856:1861   */\n      dup2\n        /* \"#utility.yul\":1829:1862   */\n      tag_181\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":1729:1868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1874:2203   */\n    tag_34:\n        /* \"#utility.yul\":1933:1939   */\n      0x00\n        /* \"#utility.yul\":1982:1984   */\n      0x20\n        /* \"#utility.yul\":1970:1979   */\n      dup3\n        /* \"#utility.yul\":1961:1968   */\n      dup5\n        /* \"#utility.yul\":1957:1980   */\n      sub\n        /* \"#utility.yul\":1953:1985   */\n      slt\n        /* \"#utility.yul\":1950:2069   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":1988:2067   */\n      tag_224\n      tag_173\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":1950:2069   */\n    tag_223:\n        /* \"#utility.yul\":2108:2109   */\n      0x00\n        /* \"#utility.yul\":2133:2186   */\n      tag_225\n        /* \"#utility.yul\":2178:2185   */\n      dup5\n        /* \"#utility.yul\":2169:2175   */\n      dup3\n        /* \"#utility.yul\":2158:2167   */\n      dup6\n        /* \"#utility.yul\":2154:2176   */\n      add\n        /* \"#utility.yul\":2133:2186   */\n      tag_182\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":2123:2186   */\n      swap2\n      pop\n        /* \"#utility.yul\":2079:2196   */\n      pop\n        /* \"#utility.yul\":1874:2203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2209:2327   */\n    tag_183:\n        /* \"#utility.yul\":2296:2320   */\n      tag_227\n        /* \"#utility.yul\":2314:2319   */\n      dup2\n        /* \"#utility.yul\":2296:2320   */\n      tag_180\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":2291:2294   */\n      dup3\n        /* \"#utility.yul\":2284:2321   */\n      mstore\n        /* \"#utility.yul\":2209:2327   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2333:2555   */\n    tag_37:\n        /* \"#utility.yul\":2426:2430   */\n      0x00\n        /* \"#utility.yul\":2464:2466   */\n      0x20\n        /* \"#utility.yul\":2453:2462   */\n      dup3\n        /* \"#utility.yul\":2449:2467   */\n      add\n        /* \"#utility.yul\":2441:2467   */\n      swap1\n      pop\n        /* \"#utility.yul\":2477:2548   */\n      tag_229\n        /* \"#utility.yul\":2545:2546   */\n      0x00\n        /* \"#utility.yul\":2534:2543   */\n      dup4\n        /* \"#utility.yul\":2530:2547   */\n      add\n        /* \"#utility.yul\":2521:2527   */\n      dup5\n        /* \"#utility.yul\":2477:2548   */\n      tag_183\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":2333:2555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2561:2638   */\n    tag_184:\n        /* \"#utility.yul\":2598:2605   */\n      0x00\n        /* \"#utility.yul\":2627:2632   */\n      dup2\n        /* \"#utility.yul\":2616:2632   */\n      swap1\n      pop\n        /* \"#utility.yul\":2561:2638   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2644:2766   */\n    tag_185:\n        /* \"#utility.yul\":2717:2741   */\n      tag_232\n        /* \"#utility.yul\":2735:2740   */\n      dup2\n        /* \"#utility.yul\":2717:2741   */\n      tag_184\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":2710:2715   */\n      dup2\n        /* \"#utility.yul\":2707:2742   */\n      eq\n        /* \"#utility.yul\":2697:2760   */\n      tag_233\n      jumpi\n        /* \"#utility.yul\":2756:2757   */\n      0x00\n        /* \"#utility.yul\":2753:2754   */\n      0x00\n        /* \"#utility.yul\":2746:2758   */\n      revert\n        /* \"#utility.yul\":2697:2760   */\n    tag_233:\n        /* \"#utility.yul\":2644:2766   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2772:2911   */\n    tag_186:\n        /* \"#utility.yul\":2818:2823   */\n      0x00\n        /* \"#utility.yul\":2856:2862   */\n      dup2\n        /* \"#utility.yul\":2843:2863   */\n      calldataload\n        /* \"#utility.yul\":2834:2863   */\n      swap1\n      pop\n        /* \"#utility.yul\":2872:2905   */\n      tag_235\n        /* \"#utility.yul\":2899:2904   */\n      dup2\n        /* \"#utility.yul\":2872:2905   */\n      tag_185\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":2772:2911   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2917:3246   */\n    tag_41:\n        /* \"#utility.yul\":2976:2982   */\n      0x00\n        /* \"#utility.yul\":3025:3027   */\n      0x20\n        /* \"#utility.yul\":3013:3022   */\n      dup3\n        /* \"#utility.yul\":3004:3011   */\n      dup5\n        /* \"#utility.yul\":3000:3023   */\n      sub\n        /* \"#utility.yul\":2996:3028   */\n      slt\n        /* \"#utility.yul\":2993:3112   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":3031:3110   */\n      tag_238\n      tag_173\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":2993:3112   */\n    tag_237:\n        /* \"#utility.yul\":3151:3152   */\n      0x00\n        /* \"#utility.yul\":3176:3229   */\n      tag_239\n        /* \"#utility.yul\":3221:3228   */\n      dup5\n        /* \"#utility.yul\":3212:3218   */\n      dup3\n        /* \"#utility.yul\":3201:3210   */\n      dup6\n        /* \"#utility.yul\":3197:3219   */\n      add\n        /* \"#utility.yul\":3176:3229   */\n      tag_186\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":3166:3229   */\n      swap2\n      pop\n        /* \"#utility.yul\":3122:3239   */\n      pop\n        /* \"#utility.yul\":2917:3246   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3252:3378   */\n    tag_187:\n        /* \"#utility.yul\":3289:3296   */\n      0x00\n        /* \"#utility.yul\":3329:3371   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3322:3327   */\n      dup3\n        /* \"#utility.yul\":3318:3372   */\n      and\n        /* \"#utility.yul\":3307:3372   */\n      swap1\n      pop\n        /* \"#utility.yul\":3252:3378   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3384:3480   */\n    tag_188:\n        /* \"#utility.yul\":3421:3428   */\n      0x00\n        /* \"#utility.yul\":3450:3474   */\n      tag_242\n        /* \"#utility.yul\":3468:3473   */\n      dup3\n        /* \"#utility.yul\":3450:3474   */\n      tag_187\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":3439:3474   */\n      swap1\n      pop\n        /* \"#utility.yul\":3384:3480   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3486:3608   */\n    tag_189:\n        /* \"#utility.yul\":3559:3583   */\n      tag_244\n        /* \"#utility.yul\":3577:3582   */\n      dup2\n        /* \"#utility.yul\":3559:3583   */\n      tag_188\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":3552:3557   */\n      dup2\n        /* \"#utility.yul\":3549:3584   */\n      eq\n        /* \"#utility.yul\":3539:3602   */\n      tag_245\n      jumpi\n        /* \"#utility.yul\":3598:3599   */\n      0x00\n        /* \"#utility.yul\":3595:3596   */\n      0x00\n        /* \"#utility.yul\":3588:3600   */\n      revert\n        /* \"#utility.yul\":3539:3602   */\n    tag_245:\n        /* \"#utility.yul\":3486:3608   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3614:3753   */\n    tag_190:\n        /* \"#utility.yul\":3660:3665   */\n      0x00\n        /* \"#utility.yul\":3698:3704   */\n      dup2\n        /* \"#utility.yul\":3685:3705   */\n      calldataload\n        /* \"#utility.yul\":3676:3705   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3747   */\n      tag_247\n        /* \"#utility.yul\":3741:3746   */\n      dup2\n        /* \"#utility.yul\":3714:3747   */\n      tag_189\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":3614:3753   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3759:4233   */\n    tag_46:\n        /* \"#utility.yul\":3827:3833   */\n      0x00\n        /* \"#utility.yul\":3835:3841   */\n      0x00\n        /* \"#utility.yul\":3884:3886   */\n      0x40\n        /* \"#utility.yul\":3872:3881   */\n      dup4\n        /* \"#utility.yul\":3863:3870   */\n      dup6\n        /* \"#utility.yul\":3859:3882   */\n      sub\n        /* \"#utility.yul\":3855:3887   */\n      slt\n        /* \"#utility.yul\":3852:3971   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":3890:3969   */\n      tag_250\n      tag_173\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":3852:3971   */\n    tag_249:\n        /* \"#utility.yul\":4010:4011   */\n      0x00\n        /* \"#utility.yul\":4035:4088   */\n      tag_251\n        /* \"#utility.yul\":4080:4087   */\n      dup6\n        /* \"#utility.yul\":4071:4077   */\n      dup3\n        /* \"#utility.yul\":4060:4069   */\n      dup7\n        /* \"#utility.yul\":4056:4078   */\n      add\n        /* \"#utility.yul\":4035:4088   */\n      tag_182\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":4025:4088   */\n      swap3\n      pop\n        /* \"#utility.yul\":3981:4098   */\n      pop\n        /* \"#utility.yul\":4137:4139   */\n      0x20\n        /* \"#utility.yul\":4163:4216   */\n      tag_252\n        /* \"#utility.yul\":4208:4215   */\n      dup6\n        /* \"#utility.yul\":4199:4205   */\n      dup3\n        /* \"#utility.yul\":4188:4197   */\n      dup7\n        /* \"#utility.yul\":4184:4206   */\n      add\n        /* \"#utility.yul\":4163:4216   */\n      tag_190\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":4153:4216   */\n      swap2\n      pop\n        /* \"#utility.yul\":4108:4226   */\n      pop\n        /* \"#utility.yul\":3759:4233   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4239:4357   */\n    tag_191:\n        /* \"#utility.yul\":4326:4350   */\n      tag_254\n        /* \"#utility.yul\":4344:4349   */\n      dup2\n        /* \"#utility.yul\":4326:4350   */\n      tag_184\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":4321:4324   */\n      dup3\n        /* \"#utility.yul\":4314:4351   */\n      mstore\n        /* \"#utility.yul\":4239:4357   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4363:4585   */\n    tag_56:\n        /* \"#utility.yul\":4456:4460   */\n      0x00\n        /* \"#utility.yul\":4494:4496   */\n      0x20\n        /* \"#utility.yul\":4483:4492   */\n      dup3\n        /* \"#utility.yul\":4479:4497   */\n      add\n        /* \"#utility.yul\":4471:4497   */\n      swap1\n      pop\n        /* \"#utility.yul\":4507:4578   */\n      tag_256\n        /* \"#utility.yul\":4575:4576   */\n      0x00\n        /* \"#utility.yul\":4564:4573   */\n      dup4\n        /* \"#utility.yul\":4560:4577   */\n      add\n        /* \"#utility.yul\":4551:4557   */\n      dup5\n        /* \"#utility.yul\":4507:4578   */\n      tag_191\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":4363:4585   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4591:4920   */\n    tag_73:\n        /* \"#utility.yul\":4650:4656   */\n      0x00\n        /* \"#utility.yul\":4699:4701   */\n      0x20\n        /* \"#utility.yul\":4687:4696   */\n      dup3\n        /* \"#utility.yul\":4678:4685   */\n      dup5\n        /* \"#utility.yul\":4674:4697   */\n      sub\n        /* \"#utility.yul\":4670:4702   */\n      slt\n        /* \"#utility.yul\":4667:4786   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":4705:4784   */\n      tag_259\n      tag_173\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":4667:4786   */\n    tag_258:\n        /* \"#utility.yul\":4825:4826   */\n      0x00\n        /* \"#utility.yul\":4850:4903   */\n      tag_260\n        /* \"#utility.yul\":4895:4902   */\n      dup5\n        /* \"#utility.yul\":4886:4892   */\n      dup3\n        /* \"#utility.yul\":4875:4884   */\n      dup6\n        /* \"#utility.yul\":4871:4893   */\n      add\n        /* \"#utility.yul\":4850:4903   */\n      tag_190\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":4840:4903   */\n      swap2\n      pop\n        /* \"#utility.yul\":4796:4913   */\n      pop\n        /* \"#utility.yul\":4591:4920   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4926:5106   */\n    tag_192:\n        /* \"#utility.yul\":4974:5051   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4971:4972   */\n      0x00\n        /* \"#utility.yul\":4964:5052   */\n      mstore\n        /* \"#utility.yul\":5071:5075   */\n      0x11\n        /* \"#utility.yul\":5068:5069   */\n      0x04\n        /* \"#utility.yul\":5061:5076   */\n      mstore\n        /* \"#utility.yul\":5095:5099   */\n      0x24\n        /* \"#utility.yul\":5092:5093   */\n      0x00\n        /* \"#utility.yul\":5085:5100   */\n      revert\n        /* \"#utility.yul\":5112:5345   */\n    tag_110:\n        /* \"#utility.yul\":5151:5154   */\n      0x00\n        /* \"#utility.yul\":5174:5198   */\n      tag_263\n        /* \"#utility.yul\":5192:5197   */\n      dup3\n        /* \"#utility.yul\":5174:5198   */\n      tag_184\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":5165:5198   */\n      swap2\n      pop\n        /* \"#utility.yul\":5220:5286   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5213:5218   */\n      dup3\n        /* \"#utility.yul\":5210:5287   */\n      sub\n        /* \"#utility.yul\":5207:5310   */\n      tag_264\n      jumpi\n        /* \"#utility.yul\":5290:5308   */\n      tag_265\n      tag_192\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":5207:5310   */\n    tag_264:\n        /* \"#utility.yul\":5337:5338   */\n      0x01\n        /* \"#utility.yul\":5330:5335   */\n      dup3\n        /* \"#utility.yul\":5326:5339   */\n      add\n        /* \"#utility.yul\":5319:5339   */\n      swap1\n      pop\n        /* \"#utility.yul\":5112:5345   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5351:5542   */\n    tag_132:\n        /* \"#utility.yul\":5391:5394   */\n      0x00\n        /* \"#utility.yul\":5410:5430   */\n      tag_267\n        /* \"#utility.yul\":5428:5429   */\n      dup3\n        /* \"#utility.yul\":5410:5430   */\n      tag_184\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":5405:5430   */\n      swap2\n      pop\n        /* \"#utility.yul\":5444:5464   */\n      tag_268\n        /* \"#utility.yul\":5462:5463   */\n      dup4\n        /* \"#utility.yul\":5444:5464   */\n      tag_184\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":5439:5464   */\n      swap3\n      pop\n        /* \"#utility.yul\":5487:5488   */\n      dup3\n        /* \"#utility.yul\":5484:5485   */\n      dup3\n        /* \"#utility.yul\":5480:5489   */\n      add\n        /* \"#utility.yul\":5473:5489   */\n      swap1\n      pop\n        /* \"#utility.yul\":5508:5511   */\n      dup1\n        /* \"#utility.yul\":5505:5506   */\n      dup3\n        /* \"#utility.yul\":5502:5512   */\n      gt\n        /* \"#utility.yul\":5499:5535   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":5515:5533   */\n      tag_270\n      tag_192\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":5499:5535   */\n    tag_269:\n        /* \"#utility.yul\":5351:5542   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5548:5695   */\n    tag_193:\n        /* \"#utility.yul\":5649:5660   */\n      0x00\n        /* \"#utility.yul\":5686:5689   */\n      dup2\n        /* \"#utility.yul\":5671:5689   */\n      swap1\n      pop\n        /* \"#utility.yul\":5548:5695   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5701:5815   */\n    tag_194:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5821:6219   */\n    tag_195:\n        /* \"#utility.yul\":5980:5983   */\n      0x00\n        /* \"#utility.yul\":6001:6084   */\n      tag_274\n        /* \"#utility.yul\":6082:6083   */\n      0x00\n        /* \"#utility.yul\":6077:6080   */\n      dup4\n        /* \"#utility.yul\":6001:6084   */\n      tag_193\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":5994:6084   */\n      swap2\n      pop\n        /* \"#utility.yul\":6093:6186   */\n      tag_275\n        /* \"#utility.yul\":6182:6185   */\n      dup3\n        /* \"#utility.yul\":6093:6186   */\n      tag_194\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":6211:6212   */\n      0x00\n        /* \"#utility.yul\":6206:6209   */\n      dup3\n        /* \"#utility.yul\":6202:6213   */\n      add\n        /* \"#utility.yul\":6195:6213   */\n      swap1\n      pop\n        /* \"#utility.yul\":5821:6219   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6225:6604   */\n    tag_147:\n        /* \"#utility.yul\":6409:6412   */\n      0x00\n        /* \"#utility.yul\":6431:6578   */\n      tag_277\n        /* \"#utility.yul\":6574:6577   */\n      dup3\n        /* \"#utility.yul\":6431:6578   */\n      tag_195\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":6424:6578   */\n      swap2\n      pop\n        /* \"#utility.yul\":6595:6598   */\n      dup2\n        /* \"#utility.yul\":6588:6598   */\n      swap1\n      pop\n        /* \"#utility.yul\":6225:6604   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6610:6728   */\n    tag_196:\n        /* \"#utility.yul\":6697:6721   */\n      tag_279\n        /* \"#utility.yul\":6715:6720   */\n      dup2\n        /* \"#utility.yul\":6697:6721   */\n      tag_188\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":6692:6695   */\n      dup3\n        /* \"#utility.yul\":6685:6722   */\n      mstore\n        /* \"#utility.yul\":6610:6728   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6734:7066   */\n    tag_171:\n        /* \"#utility.yul\":6855:6859   */\n      0x00\n        /* \"#utility.yul\":6893:6895   */\n      0x40\n        /* \"#utility.yul\":6882:6891   */\n      dup3\n        /* \"#utility.yul\":6878:6896   */\n      add\n        /* \"#utility.yul\":6870:6896   */\n      swap1\n      pop\n        /* \"#utility.yul\":6906:6977   */\n      tag_281\n        /* \"#utility.yul\":6974:6975   */\n      0x00\n        /* \"#utility.yul\":6963:6972   */\n      dup4\n        /* \"#utility.yul\":6959:6976   */\n      add\n        /* \"#utility.yul\":6950:6956   */\n      dup6\n        /* \"#utility.yul\":6906:6977   */\n      tag_196\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":6987:7059   */\n      tag_282\n        /* \"#utility.yul\":7055:7057   */\n      0x20\n        /* \"#utility.yul\":7044:7053   */\n      dup4\n        /* \"#utility.yul\":7040:7058   */\n      add\n        /* \"#utility.yul\":7031:7037   */\n      dup5\n        /* \"#utility.yul\":6987:7059   */\n      tag_183\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":6734:7066   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220cb7763def440d4f939c1661e6ba44988145bfb3eb5690cb16fa605d11adedc7164736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1298": {
									"entryPoint": null,
									"id": 1298,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_534": {
									"entryPoint": null,
									"id": 534,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256_fromMemory": {
									"entryPoint": 248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 193,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1204:13",
										"nodeType": "YulBlock",
										"src": "0:1204:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:32:13",
													"nodeType": "YulBlock",
													"src": "379:32:13",
													"statements": [
														{
															"nativeSrc": "389:16:13",
															"nodeType": "YulAssignment",
															"src": "389:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:13",
																"nodeType": "YulIdentifier",
																"src": "400:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:77:13"
											},
											{
												"body": {
													"nativeSrc": "460:79:13",
													"nodeType": "YulBlock",
													"src": "460:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:13",
																"nodeType": "YulBlock",
																"src": "517:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:13",
																					"nodeType": "YulLiteral",
																					"src": "526:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:13",
																					"nodeType": "YulLiteral",
																					"src": "529:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:13"
																			},
																			"nativeSrc": "519:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:13"
																		},
																		"nativeSrc": "519:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:13"
																				},
																				"nativeSrc": "490:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:13"
																		},
																		"nativeSrc": "480:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:13"
																},
																"nativeSrc": "473:43:13",
																"nodeType": "YulFunctionCall",
																"src": "473:43:13"
															},
															"nativeSrc": "470:63:13",
															"nodeType": "YulIf",
															"src": "470:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:13",
														"nodeType": "YulTypedName",
														"src": "453:5:13",
														"type": ""
													}
												],
												"src": "417:122:13"
											},
											{
												"body": {
													"nativeSrc": "608:80:13",
													"nodeType": "YulBlock",
													"src": "608:80:13",
													"statements": [
														{
															"nativeSrc": "618:22:13",
															"nodeType": "YulAssignment",
															"src": "618:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:13"
																},
																"nativeSrc": "627:13:13",
																"nodeType": "YulFunctionCall",
																"src": "627:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:13"
																},
																"nativeSrc": "649:33:13",
																"nodeType": "YulFunctionCall",
																"src": "649:33:13"
															},
															"nativeSrc": "649:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:13",
														"nodeType": "YulTypedName",
														"src": "586:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:13",
														"nodeType": "YulTypedName",
														"src": "594:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:13",
														"nodeType": "YulTypedName",
														"src": "602:5:13",
														"type": ""
													}
												],
												"src": "545:143:13"
											},
											{
												"body": {
													"nativeSrc": "788:413:13",
													"nodeType": "YulBlock",
													"src": "788:413:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "834:83:13",
																"nodeType": "YulBlock",
																"src": "834:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "836:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "836:77:13"
																			},
																			"nativeSrc": "836:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "836:79:13"
																		},
																		"nativeSrc": "836:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "836:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "809:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "809:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "818:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "818:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "805:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "805:3:13"
																		},
																		"nativeSrc": "805:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "805:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "830:2:13",
																		"nodeType": "YulLiteral",
																		"src": "830:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "801:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "801:3:13"
																},
																"nativeSrc": "801:32:13",
																"nodeType": "YulFunctionCall",
																"src": "801:32:13"
															},
															"nativeSrc": "798:119:13",
															"nodeType": "YulIf",
															"src": "798:119:13"
														},
														{
															"nativeSrc": "927:128:13",
															"nodeType": "YulBlock",
															"src": "927:128:13",
															"statements": [
																{
																	"nativeSrc": "942:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "942:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "956:1:13",
																		"nodeType": "YulLiteral",
																		"src": "956:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "946:6:13",
																			"nodeType": "YulTypedName",
																			"src": "946:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "971:74:13",
																	"nodeType": "YulAssignment",
																	"src": "971:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1017:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1017:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1028:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1028:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1013:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1013:3:13"
																				},
																				"nativeSrc": "1013:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1013:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1037:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1037:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "981:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "981:31:13"
																		},
																		"nativeSrc": "981:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "981:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "971:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "971:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1065:129:13",
															"nodeType": "YulBlock",
															"src": "1065:129:13",
															"statements": [
																{
																	"nativeSrc": "1080:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1080:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1094:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1094:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1084:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1084:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1110:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1110:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1156:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1156:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1167:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1167:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1152:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1152:3:13"
																				},
																				"nativeSrc": "1152:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1152:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1176:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1176:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1120:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1120:31:13"
																		},
																		"nativeSrc": "1120:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1120:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1110:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1110:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
												"nativeSrc": "694:507:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "750:9:13",
														"nodeType": "YulTypedName",
														"src": "750:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "761:7:13",
														"nodeType": "YulTypedName",
														"src": "761:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "773:6:13",
														"nodeType": "YulTypedName",
														"src": "773:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "781:6:13",
														"nodeType": "YulTypedName",
														"src": "781:6:13",
														"type": ""
													}
												],
												"src": "694:507:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f5ffd5b50604051611295380380611295833981810160405281019061003191906100f8565b600180819055505f8203610071576040517ff1f13a3800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f81036100aa576040517fafea1c5700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81608081815250508060a081815250505050610136565b5f5ffd5b5f819050919050565b6100d7816100c5565b81146100e1575f5ffd5b50565b5f815190506100f2816100ce565b92915050565b5f5f6040838503121561010e5761010d6100c1565b5b5f61011b858286016100e4565b925050602061012c858286016100e4565b9150509250929050565b60805160a0516111306101655f395f81816107c9015261082601525f81816104ad015261072701526111305ff3fe6080604052600436106100f6575f3560e01c8063a217fddf11610089578063d547741f11610058578063d547741f1461034b578063f215705214610373578063f4443d9a1461039d578063f8b2cb4f146103d95761012d565b8063a217fddf146102b1578063b3d8bcdc146102db578063c16ec03714610317578063d0e30db0146103415761012d565b806336568abe116100c557806336568abe146101f95780637d882097146102215780638c0ff5b71461024b57806391d14854146102755761012d565b806301ffc9a714610131578063248a9ca31461016d5780632e1a7d4d146101a95780632f2ff15d146101d15761012d565b3661012d576040517f3ee6509d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f5ffd5b34801561013c575f5ffd5b5061015760048036038101906101529190610daf565b610415565b6040516101649190610df4565b60405180910390f35b348015610178575f5ffd5b50610193600480360381019061018e9190610e40565b61048e565b6040516101a09190610e7a565b60405180910390f35b3480156101b4575f5ffd5b506101cf60048036038101906101ca9190610ec6565b6104aa565b005b3480156101dc575f5ffd5b506101f760048036038101906101f29190610f4b565b610682565b005b348015610204575f5ffd5b5061021f600480360381019061021a9190610f4b565b6106a4565b005b34801561022c575f5ffd5b5061023561071f565b6040516102429190610f98565b60405180910390f35b348015610256575f5ffd5b5061025f610725565b60405161026c9190610f98565b60405180910390f35b348015610280575f5ffd5b5061029b60048036038101906102969190610f4b565b610749565b6040516102a89190610df4565b60405180910390f35b3480156102bc575f5ffd5b506102c56107ac565b6040516102d29190610e7a565b60405180910390f35b3480156102e6575f5ffd5b5061030160048036038101906102fc9190610fb1565b6107b2565b60405161030e9190610f98565b60405180910390f35b348015610322575f5ffd5b5061032b6107c7565b6040516103389190610f98565b60405180910390f35b6103496107eb565b005b348015610356575f5ffd5b50610371600480360381019061036c9190610f4b565b610998565b005b34801561037e575f5ffd5b506103876109ba565b6040516103949190610e7a565b60405180910390f35b3480156103a8575f5ffd5b506103c360048036038101906103be9190610fb1565b6109de565b6040516103d09190610f98565b60405180910390f35b3480156103e4575f5ffd5b506103ff60048036038101906103fa9190610fb1565b6109f3565b60405161040c9190610f98565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610487575061048682610a39565b5b9050919050565b5f5f5f8381526020019081526020015f20600101549050919050565b807f0000000000000000000000000000000000000000000000000000000000000000811115610505576040517f73a7c91000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905082811015610580576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82810360035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508260025f828254039250508190555060055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f81548092919061062090611009565b919050555061062f3384610aa2565b3373ffffffffffffffffffffffffffffffffffffffff167fbc158bb64f05d6383aea69bbb0b20c1bbf4b7a18f63359c5649b7c39e29d3884846040516106759190610f98565b60405180910390a2505050565b61068b8261048e565b61069481610b18565b61069e8383610b2c565b50505050565b6106ac610c15565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610710576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61071a8282610c1c565b505050565b60025481565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f5f5f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f5f1b81565b6005602052805f5260405f205f915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f3403610824576040517f8615019900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000346002546108539190611050565b111561088b576040517fdef6daf200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3460035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546108d79190611050565b925050819055503460025f8282546108ef9190611050565b9250508190555060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f81548092919061094390611009565b91905055503373ffffffffffffffffffffffffffffffffffffffff167fd15c9547ea5c06670c0010ce19bc32d54682a4b3801ece7f3ab0c3f17106b4bb3460405161098e9190610f98565b60405180910390a2565b6109a18261048e565b6109aa81610b18565b6109b48383610c1c565b50505050565b7f2d95a8186db49da8bd2356c70cf02038f7de0d6ed39f6766fe2d93d5e778561681565b6004602052805f5260405f205f915090505481565b5f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f8273ffffffffffffffffffffffffffffffffffffffff1682604051610ac7906110b0565b5f6040518083038185875af1925050503d805f8114610b01576040519150601f19603f3d011682016040523d82523d5f602084013e610b06565b606091505b5050905080610b13575f5ffd5b505050565b610b2981610b24610c15565b610d05565b50565b5f610b378383610749565b610c0b5760015f5f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610ba8610c15565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610c0f565b5f90505b92915050565b5f33905090565b5f610c278383610749565b15610cfb575f5f5f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610c98610c15565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610cff565b5f90505b92915050565b610d0f8282610749565b610d525780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401610d499291906110d3565b60405180910390fd5b5050565b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610d8e81610d5a565b8114610d98575f5ffd5b50565b5f81359050610da981610d85565b92915050565b5f60208284031215610dc457610dc3610d56565b5b5f610dd184828501610d9b565b91505092915050565b5f8115159050919050565b610dee81610dda565b82525050565b5f602082019050610e075f830184610de5565b92915050565b5f819050919050565b610e1f81610e0d565b8114610e29575f5ffd5b50565b5f81359050610e3a81610e16565b92915050565b5f60208284031215610e5557610e54610d56565b5b5f610e6284828501610e2c565b91505092915050565b610e7481610e0d565b82525050565b5f602082019050610e8d5f830184610e6b565b92915050565b5f819050919050565b610ea581610e93565b8114610eaf575f5ffd5b50565b5f81359050610ec081610e9c565b92915050565b5f60208284031215610edb57610eda610d56565b5b5f610ee884828501610eb2565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610f1a82610ef1565b9050919050565b610f2a81610f10565b8114610f34575f5ffd5b50565b5f81359050610f4581610f21565b92915050565b5f5f60408385031215610f6157610f60610d56565b5b5f610f6e85828601610e2c565b9250506020610f7f85828601610f37565b9150509250929050565b610f9281610e93565b82525050565b5f602082019050610fab5f830184610f89565b92915050565b5f60208284031215610fc657610fc5610d56565b5b5f610fd384828501610f37565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61101382610e93565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361104557611044610fdc565b5b600182019050919050565b5f61105a82610e93565b915061106583610e93565b925082820190508082111561107d5761107c610fdc565b5b92915050565b5f81905092915050565b50565b5f61109b5f83611083565b91506110a68261108d565b5f82019050919050565b5f6110ba82611090565b9150819050919050565b6110cd81610f10565b82525050565b5f6040820190506110e65f8301856110c4565b6110f36020830184610e6b565b939250505056fea2646970667358221220cb7763def440d4f939c1661e6ba44988145bfb3eb5690cb16fa605d11adedc7164736f6c634300081e0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1295 CODESIZE SUB DUP1 PUSH2 0x1295 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0xF8 JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH0 DUP3 SUB PUSH2 0x71 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF1F13A3800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0xAA JUMPI PUSH1 0x40 MLOAD PUSH32 0xAFEA1C5700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x80 DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP POP POP PUSH2 0x136 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD7 DUP2 PUSH2 0xC5 JUMP JUMPDEST DUP2 EQ PUSH2 0xE1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xF2 DUP2 PUSH2 0xCE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10E JUMPI PUSH2 0x10D PUSH2 0xC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11B DUP6 DUP3 DUP7 ADD PUSH2 0xE4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12C DUP6 DUP3 DUP7 ADD PUSH2 0xE4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x1130 PUSH2 0x165 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x7C9 ADD MSTORE PUSH2 0x826 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x4AD ADD MSTORE PUSH2 0x727 ADD MSTORE PUSH2 0x1130 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA217FDDF GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0xF2157052 EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0xF4443D9A EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x3D9 JUMPI PUSH2 0x12D JUMP JUMPDEST DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xB3D8BCDC EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0xC16EC037 EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x341 JUMPI PUSH2 0x12D JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x7D882097 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x8C0FF5B7 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x275 JUMPI PUSH2 0x12D JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1D1 JUMPI PUSH2 0x12D JUMP JUMPDEST CALLDATASIZE PUSH2 0x12D JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE6509D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x178 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0xE40 JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0xE7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0xEC6 JUMP JUMPDEST PUSH2 0x4AA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0xF4B JUMP JUMPDEST PUSH2 0x682 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x204 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0xF4B JUMP JUMPDEST PUSH2 0x6A4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x235 PUSH2 0x71F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x725 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x280 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x29B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x296 SWAP2 SWAP1 PUSH2 0xF4B JUMP JUMPDEST PUSH2 0x749 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C5 PUSH2 0x7AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0xE7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x301 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x7B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP2 SWAP1 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x322 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x32B PUSH2 0x7C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x338 SWAP2 SWAP1 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x349 PUSH2 0x7EB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x371 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36C SWAP2 SWAP1 PUSH2 0xF4B JUMP JUMPDEST PUSH2 0x998 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x387 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xE7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x9DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FA SWAP2 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x9F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40C SWAP2 SWAP1 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x487 JUMPI POP PUSH2 0x486 DUP3 PUSH2 0xA39 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH32 0x0 DUP2 GT ISZERO PUSH2 0x505 JUMPI PUSH1 0x40 MLOAD PUSH32 0x73A7C91000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x580 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x620 SWAP1 PUSH2 0x1009 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x62F CALLER DUP5 PUSH2 0xAA2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC158BB64F05D6383AEA69BBB0B20C1BBF4B7A18F63359C5649B7C39E29D3884 DUP5 PUSH1 0x40 MLOAD PUSH2 0x675 SWAP2 SWAP1 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x68B DUP3 PUSH2 0x48E JUMP JUMPDEST PUSH2 0x694 DUP2 PUSH2 0xB18 JUMP JUMPDEST PUSH2 0x69E DUP4 DUP4 PUSH2 0xB2C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x6AC PUSH2 0xC15 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x710 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x71A DUP3 DUP3 PUSH2 0xC1C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 CALLVALUE SUB PUSH2 0x824 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8615019900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 CALLVALUE PUSH1 0x2 SLOAD PUSH2 0x853 SWAP2 SWAP1 PUSH2 0x1050 JUMP JUMPDEST GT ISZERO PUSH2 0x88B JUMPI PUSH1 0x40 MLOAD PUSH32 0xDEF6DAF200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8D7 SWAP2 SWAP1 PUSH2 0x1050 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8EF SWAP2 SWAP1 PUSH2 0x1050 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x943 SWAP1 PUSH2 0x1009 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD15C9547EA5C06670C0010CE19BC32D54682A4B3801ECE7F3AB0C3F17106B4BB CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x98E SWAP2 SWAP1 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x9A1 DUP3 PUSH2 0x48E JUMP JUMPDEST PUSH2 0x9AA DUP2 PUSH2 0xB18 JUMP JUMPDEST PUSH2 0x9B4 DUP4 DUP4 PUSH2 0xC1C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x2D95A8186DB49DA8BD2356C70CF02038F7DE0D6ED39F6766FE2D93D5E7785616 DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xAC7 SWAP1 PUSH2 0x10B0 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xB01 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB06 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xB13 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB29 DUP2 PUSH2 0xB24 PUSH2 0xC15 JUMP JUMPDEST PUSH2 0xD05 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xB37 DUP4 DUP4 PUSH2 0x749 JUMP JUMPDEST PUSH2 0xC0B JUMPI PUSH1 0x1 PUSH0 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xBA8 PUSH2 0xC15 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xC0F JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xC27 DUP4 DUP4 PUSH2 0x749 JUMP JUMPDEST ISZERO PUSH2 0xCFB JUMPI PUSH0 PUSH0 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xC98 PUSH2 0xC15 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xCFF JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD0F DUP3 DUP3 PUSH2 0x749 JUMP JUMPDEST PUSH2 0xD52 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD49 SWAP3 SWAP2 SWAP1 PUSH2 0x10D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD8E DUP2 PUSH2 0xD5A JUMP JUMPDEST DUP2 EQ PUSH2 0xD98 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDA9 DUP2 PUSH2 0xD85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDC4 JUMPI PUSH2 0xDC3 PUSH2 0xD56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDD1 DUP5 DUP3 DUP6 ADD PUSH2 0xD9B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDEE DUP2 PUSH2 0xDDA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE07 PUSH0 DUP4 ADD DUP5 PUSH2 0xDE5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE1F DUP2 PUSH2 0xE0D JUMP JUMPDEST DUP2 EQ PUSH2 0xE29 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE3A DUP2 PUSH2 0xE16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE55 JUMPI PUSH2 0xE54 PUSH2 0xD56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE62 DUP5 DUP3 DUP6 ADD PUSH2 0xE2C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE74 DUP2 PUSH2 0xE0D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE8D PUSH0 DUP4 ADD DUP5 PUSH2 0xE6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEA5 DUP2 PUSH2 0xE93 JUMP JUMPDEST DUP2 EQ PUSH2 0xEAF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEC0 DUP2 PUSH2 0xE9C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEDB JUMPI PUSH2 0xEDA PUSH2 0xD56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEE8 DUP5 DUP3 DUP6 ADD PUSH2 0xEB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF1A DUP3 PUSH2 0xEF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF2A DUP2 PUSH2 0xF10 JUMP JUMPDEST DUP2 EQ PUSH2 0xF34 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF45 DUP2 PUSH2 0xF21 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF61 JUMPI PUSH2 0xF60 PUSH2 0xD56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF6E DUP6 DUP3 DUP7 ADD PUSH2 0xE2C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF7F DUP6 DUP3 DUP7 ADD PUSH2 0xF37 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xF92 DUP2 PUSH2 0xE93 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFAB PUSH0 DUP4 ADD DUP5 PUSH2 0xF89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFC6 JUMPI PUSH2 0xFC5 PUSH2 0xD56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFD3 DUP5 DUP3 DUP6 ADD PUSH2 0xF37 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1013 DUP3 PUSH2 0xE93 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1045 JUMPI PUSH2 0x1044 PUSH2 0xFDC JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x105A DUP3 PUSH2 0xE93 JUMP JUMPDEST SWAP2 POP PUSH2 0x1065 DUP4 PUSH2 0xE93 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x107D JUMPI PUSH2 0x107C PUSH2 0xFDC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x109B PUSH0 DUP4 PUSH2 0x1083 JUMP JUMPDEST SWAP2 POP PUSH2 0x10A6 DUP3 PUSH2 0x108D JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10BA DUP3 PUSH2 0x1090 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10CD DUP2 PUSH2 0xF10 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x10E6 PUSH0 DUP4 ADD DUP6 PUSH2 0x10C4 JUMP JUMPDEST PUSH2 0x10F3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE6B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB PUSH24 0x63DEF440D4F939C1661E6BA44988145BFB3EB5690CB16FA6 SDIV DATALOADN 0x1ADE 0xDC PUSH18 0x64736F6C634300081E003300000000000000 ",
							"sourceMap": "737:6045:12:-:0;;;3631:289;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:6;1821:7;:22;;;;3724:1:12;3706:14;:19;3702:58;;3734:26;;;;;;;;;;;;;;3702:58;3793:1;3775:14;:19;3771:53;;3803:21;;;;;;;;;;;;;;3771:53;3853:14;3837:30;;;;;;3898:14;3878:34;;;;;;3631:289;;737:6045;;88:117:13;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:507::-;773:6;781;830:2;818:9;809:7;805:23;801:32;798:119;;;836:79;;:::i;:::-;798:119;956:1;981:64;1037:7;1028:6;1017:9;1013:22;981:64;:::i;:::-;971:74;;927:128;1094:2;1120:64;1176:7;1167:6;1156:9;1152:22;1120:64;:::i;:::-;1110:74;;1065:129;694:507;;;;;:::o;737:6045:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BANK_MANAGER_ROLE_1208": {
									"entryPoint": 2490,
									"id": 1208,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_76": {
									"entryPoint": 1964,
									"id": 76,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1470": {
									"entryPoint": null,
									"id": 1470,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_140": {
									"entryPoint": 2840,
									"id": 140,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_161": {
									"entryPoint": 3333,
									"id": 161,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_303": {
									"entryPoint": 2860,
									"id": 303,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1134": {
									"entryPoint": 3093,
									"id": 1134,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_341": {
									"entryPoint": 3100,
									"id": 341,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_safeTransfer_1462": {
									"entryPoint": 2722,
									"id": 1462,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@depositCount_1227": {
									"entryPoint": 2526,
									"id": 1227,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_1369": {
									"entryPoint": 2027,
									"id": 1369,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getBalance_1438": {
									"entryPoint": 2547,
									"id": 1438,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRoleAdmin_175": {
									"entryPoint": 1166,
									"id": 175,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_194": {
									"entryPoint": 1666,
									"id": 194,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_127": {
									"entryPoint": 1865,
									"id": 127,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@maxWithdrawal_1211": {
									"entryPoint": 1829,
									"id": 1211,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceRole_236": {
									"entryPoint": 1700,
									"id": 236,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_213": {
									"entryPoint": 2456,
									"id": 213,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_109": {
									"entryPoint": 1045,
									"id": 109,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1175": {
									"entryPoint": 2617,
									"id": 1175,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalBankCapacity_1214": {
									"entryPoint": 1991,
									"id": 1214,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalDeposits_1217": {
									"entryPoint": 1823,
									"id": 1217,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_1425": {
									"entryPoint": 1194,
									"id": 1425,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawalCount_1232": {
									"entryPoint": 1970,
									"id": 1232,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 3628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 3483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 3648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 3915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 3691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 4307,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 3706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 3597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 3418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 4105,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4060,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3414,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 4237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3873,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 3606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 3461,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7069:13",
										"nodeType": "YulBlock",
										"src": "0:7069:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "378:105:13",
													"nodeType": "YulBlock",
													"src": "378:105:13",
													"statements": [
														{
															"nativeSrc": "388:89:13",
															"nodeType": "YulAssignment",
															"src": "388:89:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:13",
																		"nodeType": "YulLiteral",
																		"src": "410:66:13",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:13"
																},
																"nativeSrc": "399:78:13",
																"nodeType": "YulFunctionCall",
																"src": "399:78:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:13",
														"nodeType": "YulTypedName",
														"src": "360:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:13",
														"nodeType": "YulTypedName",
														"src": "370:7:13",
														"type": ""
													}
												],
												"src": "334:149:13"
											},
											{
												"body": {
													"nativeSrc": "531:78:13",
													"nodeType": "YulBlock",
													"src": "531:78:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:13",
																"nodeType": "YulBlock",
																"src": "587:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:13",
																					"nodeType": "YulLiteral",
																					"src": "596:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:13",
																					"nodeType": "YulLiteral",
																					"src": "599:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:13"
																			},
																			"nativeSrc": "589:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:13"
																		},
																		"nativeSrc": "589:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:13",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:13"
																				},
																				"nativeSrc": "561:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:13"
																		},
																		"nativeSrc": "551:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:13"
																},
																"nativeSrc": "544:42:13",
																"nodeType": "YulFunctionCall",
																"src": "544:42:13"
															},
															"nativeSrc": "541:62:13",
															"nodeType": "YulIf",
															"src": "541:62:13"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:13",
														"nodeType": "YulTypedName",
														"src": "524:5:13",
														"type": ""
													}
												],
												"src": "489:120:13"
											},
											{
												"body": {
													"nativeSrc": "666:86:13",
													"nodeType": "YulBlock",
													"src": "666:86:13",
													"statements": [
														{
															"nativeSrc": "676:29:13",
															"nodeType": "YulAssignment",
															"src": "676:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:13"
																},
																"nativeSrc": "685:20:13",
																"nodeType": "YulFunctionCall",
																"src": "685:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:13"
																},
																"nativeSrc": "714:32:13",
																"nodeType": "YulFunctionCall",
																"src": "714:32:13"
															},
															"nativeSrc": "714:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:13",
														"nodeType": "YulTypedName",
														"src": "644:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:13",
														"nodeType": "YulTypedName",
														"src": "652:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:13",
														"nodeType": "YulTypedName",
														"src": "660:5:13",
														"type": ""
													}
												],
												"src": "615:137:13"
											},
											{
												"body": {
													"nativeSrc": "823:262:13",
													"nodeType": "YulBlock",
													"src": "823:262:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:13",
																"nodeType": "YulBlock",
																"src": "869:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:13"
																			},
																			"nativeSrc": "871:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:13"
																		},
																		"nativeSrc": "871:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:13"
																		},
																		"nativeSrc": "840:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:13",
																		"nodeType": "YulLiteral",
																		"src": "865:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:13"
																},
																"nativeSrc": "836:32:13",
																"nodeType": "YulFunctionCall",
																"src": "836:32:13"
															},
															"nativeSrc": "833:119:13",
															"nodeType": "YulIf",
															"src": "833:119:13"
														},
														{
															"nativeSrc": "962:116:13",
															"nodeType": "YulBlock",
															"src": "962:116:13",
															"statements": [
																{
																	"nativeSrc": "977:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:13",
																		"nodeType": "YulLiteral",
																		"src": "991:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:13",
																			"nodeType": "YulTypedName",
																			"src": "981:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:13",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:13"
																				},
																				"nativeSrc": "1036:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:13",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:13"
																		},
																		"nativeSrc": "1016:52:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:13",
														"nodeType": "YulTypedName",
														"src": "793:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:13",
														"nodeType": "YulTypedName",
														"src": "804:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:13",
														"nodeType": "YulTypedName",
														"src": "816:6:13",
														"type": ""
													}
												],
												"src": "758:327:13"
											},
											{
												"body": {
													"nativeSrc": "1133:48:13",
													"nodeType": "YulBlock",
													"src": "1133:48:13",
													"statements": [
														{
															"nativeSrc": "1143:32:13",
															"nodeType": "YulAssignment",
															"src": "1143:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:13"
																		},
																		"nativeSrc": "1161:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:13"
																},
																"nativeSrc": "1154:21:13",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:13",
														"nodeType": "YulTypedName",
														"src": "1115:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:13",
														"nodeType": "YulTypedName",
														"src": "1125:7:13",
														"type": ""
													}
												],
												"src": "1091:90:13"
											},
											{
												"body": {
													"nativeSrc": "1246:50:13",
													"nodeType": "YulBlock",
													"src": "1246:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:13",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:13"
																		},
																		"nativeSrc": "1268:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:13"
																},
																"nativeSrc": "1256:34:13",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:13"
															},
															"nativeSrc": "1256:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:13",
														"nodeType": "YulTypedName",
														"src": "1234:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:13",
														"nodeType": "YulTypedName",
														"src": "1241:3:13",
														"type": ""
													}
												],
												"src": "1187:109:13"
											},
											{
												"body": {
													"nativeSrc": "1394:118:13",
													"nodeType": "YulBlock",
													"src": "1394:118:13",
													"statements": [
														{
															"nativeSrc": "1404:26:13",
															"nodeType": "YulAssignment",
															"src": "1404:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:13"
																},
																"nativeSrc": "1412:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:13"
																		},
																		"nativeSrc": "1487:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:13",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:13"
																},
																"nativeSrc": "1440:65:13",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:13"
															},
															"nativeSrc": "1440:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:13",
														"nodeType": "YulTypedName",
														"src": "1366:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:13",
														"nodeType": "YulTypedName",
														"src": "1378:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:13",
														"nodeType": "YulTypedName",
														"src": "1389:4:13",
														"type": ""
													}
												],
												"src": "1302:210:13"
											},
											{
												"body": {
													"nativeSrc": "1563:32:13",
													"nodeType": "YulBlock",
													"src": "1563:32:13",
													"statements": [
														{
															"nativeSrc": "1573:16:13",
															"nodeType": "YulAssignment",
															"src": "1573:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "1584:5:13",
																"nodeType": "YulIdentifier",
																"src": "1584:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "1518:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:13",
														"nodeType": "YulTypedName",
														"src": "1545:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:13",
														"nodeType": "YulTypedName",
														"src": "1555:7:13",
														"type": ""
													}
												],
												"src": "1518:77:13"
											},
											{
												"body": {
													"nativeSrc": "1644:79:13",
													"nodeType": "YulBlock",
													"src": "1644:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1701:16:13",
																"nodeType": "YulBlock",
																"src": "1701:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1710:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1710:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1713:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1703:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1703:6:13"
																			},
																			"nativeSrc": "1703:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1703:12:13"
																		},
																		"nativeSrc": "1703:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1703:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1667:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1667:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1692:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1692:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "1674:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "1674:17:13"
																				},
																				"nativeSrc": "1674:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1674:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1664:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1664:2:13"
																		},
																		"nativeSrc": "1664:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1664:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1657:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:13"
																},
																"nativeSrc": "1657:43:13",
																"nodeType": "YulFunctionCall",
																"src": "1657:43:13"
															},
															"nativeSrc": "1654:63:13",
															"nodeType": "YulIf",
															"src": "1654:63:13"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "1601:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1637:5:13",
														"nodeType": "YulTypedName",
														"src": "1637:5:13",
														"type": ""
													}
												],
												"src": "1601:122:13"
											},
											{
												"body": {
													"nativeSrc": "1781:87:13",
													"nodeType": "YulBlock",
													"src": "1781:87:13",
													"statements": [
														{
															"nativeSrc": "1791:29:13",
															"nodeType": "YulAssignment",
															"src": "1791:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1813:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1813:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1800:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1800:12:13"
																},
																"nativeSrc": "1800:20:13",
																"nodeType": "YulFunctionCall",
																"src": "1800:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1791:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1791:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1856:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1856:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "1829:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "1829:26:13"
																},
																"nativeSrc": "1829:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1829:33:13"
															},
															"nativeSrc": "1829:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "1829:33:13"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "1729:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1759:6:13",
														"nodeType": "YulTypedName",
														"src": "1759:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1767:3:13",
														"nodeType": "YulTypedName",
														"src": "1767:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1775:5:13",
														"nodeType": "YulTypedName",
														"src": "1775:5:13",
														"type": ""
													}
												],
												"src": "1729:139:13"
											},
											{
												"body": {
													"nativeSrc": "1940:263:13",
													"nodeType": "YulBlock",
													"src": "1940:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1986:83:13",
																"nodeType": "YulBlock",
																"src": "1986:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1988:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "1988:77:13"
																			},
																			"nativeSrc": "1988:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1988:79:13"
																		},
																		"nativeSrc": "1988:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1988:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1961:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1961:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1970:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1970:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1957:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1957:3:13"
																		},
																		"nativeSrc": "1957:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1957:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1982:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1982:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1953:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:13"
																},
																"nativeSrc": "1953:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1953:32:13"
															},
															"nativeSrc": "1950:119:13",
															"nodeType": "YulIf",
															"src": "1950:119:13"
														},
														{
															"nativeSrc": "2079:117:13",
															"nodeType": "YulBlock",
															"src": "2079:117:13",
															"statements": [
																{
																	"nativeSrc": "2094:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2094:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2108:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2108:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2098:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2098:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2123:63:13",
																	"nodeType": "YulAssignment",
																	"src": "2123:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2158:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2158:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2169:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2169:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2154:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:13"
																				},
																				"nativeSrc": "2154:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2154:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2178:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "2133:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "2133:20:13"
																		},
																		"nativeSrc": "2133:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2133:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2123:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2123:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "1874:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1910:9:13",
														"nodeType": "YulTypedName",
														"src": "1910:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1921:7:13",
														"nodeType": "YulTypedName",
														"src": "1921:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1933:6:13",
														"nodeType": "YulTypedName",
														"src": "1933:6:13",
														"type": ""
													}
												],
												"src": "1874:329:13"
											},
											{
												"body": {
													"nativeSrc": "2274:53:13",
													"nodeType": "YulBlock",
													"src": "2274:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2291:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2291:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2314:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2314:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "2296:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "2296:17:13"
																		},
																		"nativeSrc": "2296:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2296:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2284:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2284:6:13"
																},
																"nativeSrc": "2284:37:13",
																"nodeType": "YulFunctionCall",
																"src": "2284:37:13"
															},
															"nativeSrc": "2284:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "2284:37:13"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "2209:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2262:5:13",
														"nodeType": "YulTypedName",
														"src": "2262:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2269:3:13",
														"nodeType": "YulTypedName",
														"src": "2269:3:13",
														"type": ""
													}
												],
												"src": "2209:118:13"
											},
											{
												"body": {
													"nativeSrc": "2431:124:13",
													"nodeType": "YulBlock",
													"src": "2431:124:13",
													"statements": [
														{
															"nativeSrc": "2441:26:13",
															"nodeType": "YulAssignment",
															"src": "2441:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2453:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2453:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2464:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2464:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2449:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2449:3:13"
																},
																"nativeSrc": "2449:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2449:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2441:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2441:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2521:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2521:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2534:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2534:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2545:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2545:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2530:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2530:3:13"
																		},
																		"nativeSrc": "2530:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2530:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "2477:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "2477:43:13"
																},
																"nativeSrc": "2477:71:13",
																"nodeType": "YulFunctionCall",
																"src": "2477:71:13"
															},
															"nativeSrc": "2477:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "2477:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "2333:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2403:9:13",
														"nodeType": "YulTypedName",
														"src": "2403:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2415:6:13",
														"nodeType": "YulTypedName",
														"src": "2415:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2426:4:13",
														"nodeType": "YulTypedName",
														"src": "2426:4:13",
														"type": ""
													}
												],
												"src": "2333:222:13"
											},
											{
												"body": {
													"nativeSrc": "2606:32:13",
													"nodeType": "YulBlock",
													"src": "2606:32:13",
													"statements": [
														{
															"nativeSrc": "2616:16:13",
															"nodeType": "YulAssignment",
															"src": "2616:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "2627:5:13",
																"nodeType": "YulIdentifier",
																"src": "2627:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2616:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2616:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2561:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2588:5:13",
														"nodeType": "YulTypedName",
														"src": "2588:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2598:7:13",
														"nodeType": "YulTypedName",
														"src": "2598:7:13",
														"type": ""
													}
												],
												"src": "2561:77:13"
											},
											{
												"body": {
													"nativeSrc": "2687:79:13",
													"nodeType": "YulBlock",
													"src": "2687:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2744:16:13",
																"nodeType": "YulBlock",
																"src": "2744:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2753:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2753:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2756:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2756:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2746:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2746:6:13"
																			},
																			"nativeSrc": "2746:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2746:12:13"
																		},
																		"nativeSrc": "2746:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2746:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2710:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2710:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2735:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2735:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2717:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "2717:17:13"
																				},
																				"nativeSrc": "2717:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2717:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2707:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2707:2:13"
																		},
																		"nativeSrc": "2707:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2707:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2700:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2700:6:13"
																},
																"nativeSrc": "2700:43:13",
																"nodeType": "YulFunctionCall",
																"src": "2700:43:13"
															},
															"nativeSrc": "2697:63:13",
															"nodeType": "YulIf",
															"src": "2697:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2644:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2680:5:13",
														"nodeType": "YulTypedName",
														"src": "2680:5:13",
														"type": ""
													}
												],
												"src": "2644:122:13"
											},
											{
												"body": {
													"nativeSrc": "2824:87:13",
													"nodeType": "YulBlock",
													"src": "2824:87:13",
													"statements": [
														{
															"nativeSrc": "2834:29:13",
															"nodeType": "YulAssignment",
															"src": "2834:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2856:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2856:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2843:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2843:12:13"
																},
																"nativeSrc": "2843:20:13",
																"nodeType": "YulFunctionCall",
																"src": "2843:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2834:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2834:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2899:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2899:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2872:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "2872:26:13"
																},
																"nativeSrc": "2872:33:13",
																"nodeType": "YulFunctionCall",
																"src": "2872:33:13"
															},
															"nativeSrc": "2872:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "2872:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2772:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2802:6:13",
														"nodeType": "YulTypedName",
														"src": "2802:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2810:3:13",
														"nodeType": "YulTypedName",
														"src": "2810:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2818:5:13",
														"nodeType": "YulTypedName",
														"src": "2818:5:13",
														"type": ""
													}
												],
												"src": "2772:139:13"
											},
											{
												"body": {
													"nativeSrc": "2983:263:13",
													"nodeType": "YulBlock",
													"src": "2983:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3029:83:13",
																"nodeType": "YulBlock",
																"src": "3029:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3031:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3031:77:13"
																			},
																			"nativeSrc": "3031:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3031:79:13"
																		},
																		"nativeSrc": "3031:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3031:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3004:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3004:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3013:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3013:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3000:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3000:3:13"
																		},
																		"nativeSrc": "3000:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3000:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3025:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3025:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2996:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2996:3:13"
																},
																"nativeSrc": "2996:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2996:32:13"
															},
															"nativeSrc": "2993:119:13",
															"nodeType": "YulIf",
															"src": "2993:119:13"
														},
														{
															"nativeSrc": "3122:117:13",
															"nodeType": "YulBlock",
															"src": "3122:117:13",
															"statements": [
																{
																	"nativeSrc": "3137:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3137:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3151:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3151:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3141:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3141:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3166:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3166:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3201:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3201:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3212:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3212:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3197:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3197:3:13"
																				},
																				"nativeSrc": "3197:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3197:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3221:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3221:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3176:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3176:20:13"
																		},
																		"nativeSrc": "3176:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3176:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3166:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3166:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2917:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2953:9:13",
														"nodeType": "YulTypedName",
														"src": "2953:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2964:7:13",
														"nodeType": "YulTypedName",
														"src": "2964:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2976:6:13",
														"nodeType": "YulTypedName",
														"src": "2976:6:13",
														"type": ""
													}
												],
												"src": "2917:329:13"
											},
											{
												"body": {
													"nativeSrc": "3297:81:13",
													"nodeType": "YulBlock",
													"src": "3297:81:13",
													"statements": [
														{
															"nativeSrc": "3307:65:13",
															"nodeType": "YulAssignment",
															"src": "3307:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3322:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3322:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3329:42:13",
																		"nodeType": "YulLiteral",
																		"src": "3329:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3318:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3318:3:13"
																},
																"nativeSrc": "3318:54:13",
																"nodeType": "YulFunctionCall",
																"src": "3318:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3307:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "3307:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3252:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3279:5:13",
														"nodeType": "YulTypedName",
														"src": "3279:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3289:7:13",
														"nodeType": "YulTypedName",
														"src": "3289:7:13",
														"type": ""
													}
												],
												"src": "3252:126:13"
											},
											{
												"body": {
													"nativeSrc": "3429:51:13",
													"nodeType": "YulBlock",
													"src": "3429:51:13",
													"statements": [
														{
															"nativeSrc": "3439:35:13",
															"nodeType": "YulAssignment",
															"src": "3439:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3468:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3468:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3450:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "3450:17:13"
																},
																"nativeSrc": "3450:24:13",
																"nodeType": "YulFunctionCall",
																"src": "3450:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3439:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "3439:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3384:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3411:5:13",
														"nodeType": "YulTypedName",
														"src": "3411:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3421:7:13",
														"nodeType": "YulTypedName",
														"src": "3421:7:13",
														"type": ""
													}
												],
												"src": "3384:96:13"
											},
											{
												"body": {
													"nativeSrc": "3529:79:13",
													"nodeType": "YulBlock",
													"src": "3529:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3586:16:13",
																"nodeType": "YulBlock",
																"src": "3586:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3595:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3595:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3598:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3598:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3588:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3588:6:13"
																			},
																			"nativeSrc": "3588:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3588:12:13"
																		},
																		"nativeSrc": "3588:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3588:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3552:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3552:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3577:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3577:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3559:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "3559:17:13"
																				},
																				"nativeSrc": "3559:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3559:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3549:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3549:2:13"
																		},
																		"nativeSrc": "3549:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3549:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3542:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3542:6:13"
																},
																"nativeSrc": "3542:43:13",
																"nodeType": "YulFunctionCall",
																"src": "3542:43:13"
															},
															"nativeSrc": "3539:63:13",
															"nodeType": "YulIf",
															"src": "3539:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3486:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3522:5:13",
														"nodeType": "YulTypedName",
														"src": "3522:5:13",
														"type": ""
													}
												],
												"src": "3486:122:13"
											},
											{
												"body": {
													"nativeSrc": "3666:87:13",
													"nodeType": "YulBlock",
													"src": "3666:87:13",
													"statements": [
														{
															"nativeSrc": "3676:29:13",
															"nodeType": "YulAssignment",
															"src": "3676:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3698:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3698:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3685:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3685:12:13"
																},
																"nativeSrc": "3685:20:13",
																"nodeType": "YulFunctionCall",
																"src": "3685:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3676:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3676:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3741:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3741:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3714:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "3714:26:13"
																},
																"nativeSrc": "3714:33:13",
																"nodeType": "YulFunctionCall",
																"src": "3714:33:13"
															},
															"nativeSrc": "3714:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "3714:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3614:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3644:6:13",
														"nodeType": "YulTypedName",
														"src": "3644:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3652:3:13",
														"nodeType": "YulTypedName",
														"src": "3652:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3660:5:13",
														"nodeType": "YulTypedName",
														"src": "3660:5:13",
														"type": ""
													}
												],
												"src": "3614:139:13"
											},
											{
												"body": {
													"nativeSrc": "3842:391:13",
													"nodeType": "YulBlock",
													"src": "3842:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3888:83:13",
																"nodeType": "YulBlock",
																"src": "3888:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3890:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3890:77:13"
																			},
																			"nativeSrc": "3890:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3890:79:13"
																		},
																		"nativeSrc": "3890:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3890:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3863:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3863:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3872:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3872:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3859:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3859:3:13"
																		},
																		"nativeSrc": "3859:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3859:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3884:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3884:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3855:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3855:3:13"
																},
																"nativeSrc": "3855:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3855:32:13"
															},
															"nativeSrc": "3852:119:13",
															"nodeType": "YulIf",
															"src": "3852:119:13"
														},
														{
															"nativeSrc": "3981:117:13",
															"nodeType": "YulBlock",
															"src": "3981:117:13",
															"statements": [
																{
																	"nativeSrc": "3996:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3996:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4010:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4010:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4000:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4000:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4025:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4025:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4060:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4060:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4071:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4071:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4056:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4056:3:13"
																				},
																				"nativeSrc": "4056:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4056:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4080:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4080:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "4035:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4035:20:13"
																		},
																		"nativeSrc": "4035:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4035:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4025:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4025:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4108:118:13",
															"nodeType": "YulBlock",
															"src": "4108:118:13",
															"statements": [
																{
																	"nativeSrc": "4123:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4123:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4137:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4137:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4127:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4127:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4153:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4153:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4188:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4188:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4199:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4199:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4184:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4184:3:13"
																				},
																				"nativeSrc": "4184:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4184:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4208:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4208:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4163:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4163:20:13"
																		},
																		"nativeSrc": "4163:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4163:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4153:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4153:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "3759:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3804:9:13",
														"nodeType": "YulTypedName",
														"src": "3804:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3815:7:13",
														"nodeType": "YulTypedName",
														"src": "3815:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3827:6:13",
														"nodeType": "YulTypedName",
														"src": "3827:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3835:6:13",
														"nodeType": "YulTypedName",
														"src": "3835:6:13",
														"type": ""
													}
												],
												"src": "3759:474:13"
											},
											{
												"body": {
													"nativeSrc": "4304:53:13",
													"nodeType": "YulBlock",
													"src": "4304:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4321:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4321:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4344:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4344:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4326:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "4326:17:13"
																		},
																		"nativeSrc": "4326:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4326:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4314:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4314:6:13"
																},
																"nativeSrc": "4314:37:13",
																"nodeType": "YulFunctionCall",
																"src": "4314:37:13"
															},
															"nativeSrc": "4314:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "4314:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4239:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4292:5:13",
														"nodeType": "YulTypedName",
														"src": "4292:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4299:3:13",
														"nodeType": "YulTypedName",
														"src": "4299:3:13",
														"type": ""
													}
												],
												"src": "4239:118:13"
											},
											{
												"body": {
													"nativeSrc": "4461:124:13",
													"nodeType": "YulBlock",
													"src": "4461:124:13",
													"statements": [
														{
															"nativeSrc": "4471:26:13",
															"nodeType": "YulAssignment",
															"src": "4471:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4483:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4483:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4494:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4494:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4479:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4479:3:13"
																},
																"nativeSrc": "4479:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4479:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4471:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4471:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4551:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4551:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4564:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4564:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4575:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4575:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4560:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4560:3:13"
																		},
																		"nativeSrc": "4560:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4560:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4507:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "4507:43:13"
																},
																"nativeSrc": "4507:71:13",
																"nodeType": "YulFunctionCall",
																"src": "4507:71:13"
															},
															"nativeSrc": "4507:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "4507:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4363:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4433:9:13",
														"nodeType": "YulTypedName",
														"src": "4433:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4445:6:13",
														"nodeType": "YulTypedName",
														"src": "4445:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4456:4:13",
														"nodeType": "YulTypedName",
														"src": "4456:4:13",
														"type": ""
													}
												],
												"src": "4363:222:13"
											},
											{
												"body": {
													"nativeSrc": "4657:263:13",
													"nodeType": "YulBlock",
													"src": "4657:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4703:83:13",
																"nodeType": "YulBlock",
																"src": "4703:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4705:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4705:77:13"
																			},
																			"nativeSrc": "4705:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4705:79:13"
																		},
																		"nativeSrc": "4705:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4705:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4678:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4678:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4687:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4687:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4674:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4674:3:13"
																		},
																		"nativeSrc": "4674:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4674:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4699:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4699:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4670:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4670:3:13"
																},
																"nativeSrc": "4670:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4670:32:13"
															},
															"nativeSrc": "4667:119:13",
															"nodeType": "YulIf",
															"src": "4667:119:13"
														},
														{
															"nativeSrc": "4796:117:13",
															"nodeType": "YulBlock",
															"src": "4796:117:13",
															"statements": [
																{
																	"nativeSrc": "4811:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4811:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4825:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4825:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4815:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4815:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4840:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4840:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4875:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4875:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4886:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4886:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4871:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4871:3:13"
																				},
																				"nativeSrc": "4871:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4871:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4895:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4895:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4850:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4850:20:13"
																		},
																		"nativeSrc": "4850:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4850:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4840:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4840:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4591:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4627:9:13",
														"nodeType": "YulTypedName",
														"src": "4627:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4638:7:13",
														"nodeType": "YulTypedName",
														"src": "4638:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4650:6:13",
														"nodeType": "YulTypedName",
														"src": "4650:6:13",
														"type": ""
													}
												],
												"src": "4591:329:13"
											},
											{
												"body": {
													"nativeSrc": "4954:152:13",
													"nodeType": "YulBlock",
													"src": "4954:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4971:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4971:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4974:77:13",
																		"nodeType": "YulLiteral",
																		"src": "4974:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4964:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4964:6:13"
																},
																"nativeSrc": "4964:88:13",
																"nodeType": "YulFunctionCall",
																"src": "4964:88:13"
															},
															"nativeSrc": "4964:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "4964:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5068:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5068:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5071:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5071:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5061:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5061:6:13"
																},
																"nativeSrc": "5061:15:13",
																"nodeType": "YulFunctionCall",
																"src": "5061:15:13"
															},
															"nativeSrc": "5061:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "5061:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5092:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5092:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5095:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5095:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5085:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5085:6:13"
																},
																"nativeSrc": "5085:15:13",
																"nodeType": "YulFunctionCall",
																"src": "5085:15:13"
															},
															"nativeSrc": "5085:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "5085:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4926:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "4926:180:13"
											},
											{
												"body": {
													"nativeSrc": "5155:190:13",
													"nodeType": "YulBlock",
													"src": "5155:190:13",
													"statements": [
														{
															"nativeSrc": "5165:33:13",
															"nodeType": "YulAssignment",
															"src": "5165:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5192:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5192:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5174:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "5174:17:13"
																},
																"nativeSrc": "5174:24:13",
																"nodeType": "YulFunctionCall",
																"src": "5174:24:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5165:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "5165:5:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5288:22:13",
																"nodeType": "YulBlock",
																"src": "5288:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5290:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "5290:16:13"
																			},
																			"nativeSrc": "5290:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5290:18:13"
																		},
																		"nativeSrc": "5290:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5290:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5213:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5213:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5220:66:13",
																		"nodeType": "YulLiteral",
																		"src": "5220:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5210:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5210:2:13"
																},
																"nativeSrc": "5210:77:13",
																"nodeType": "YulFunctionCall",
																"src": "5210:77:13"
															},
															"nativeSrc": "5207:103:13",
															"nodeType": "YulIf",
															"src": "5207:103:13"
														},
														{
															"nativeSrc": "5319:20:13",
															"nodeType": "YulAssignment",
															"src": "5319:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5330:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5330:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5337:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5337:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5326:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5326:3:13"
																},
																"nativeSrc": "5326:13:13",
																"nodeType": "YulFunctionCall",
																"src": "5326:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5319:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5319:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "5112:233:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5141:5:13",
														"nodeType": "YulTypedName",
														"src": "5141:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5151:3:13",
														"nodeType": "YulTypedName",
														"src": "5151:3:13",
														"type": ""
													}
												],
												"src": "5112:233:13"
											},
											{
												"body": {
													"nativeSrc": "5395:147:13",
													"nodeType": "YulBlock",
													"src": "5395:147:13",
													"statements": [
														{
															"nativeSrc": "5405:25:13",
															"nodeType": "YulAssignment",
															"src": "5405:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5428:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5428:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5410:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "5410:17:13"
																},
																"nativeSrc": "5410:20:13",
																"nodeType": "YulFunctionCall",
																"src": "5410:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5405:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "5405:1:13"
																}
															]
														},
														{
															"nativeSrc": "5439:25:13",
															"nodeType": "YulAssignment",
															"src": "5439:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5462:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5462:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5444:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "5444:17:13"
																},
																"nativeSrc": "5444:20:13",
																"nodeType": "YulFunctionCall",
																"src": "5444:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5439:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "5439:1:13"
																}
															]
														},
														{
															"nativeSrc": "5473:16:13",
															"nodeType": "YulAssignment",
															"src": "5473:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5484:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5484:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5487:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5487:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5480:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5480:3:13"
																},
																"nativeSrc": "5480:9:13",
																"nodeType": "YulFunctionCall",
																"src": "5480:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5473:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5473:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5513:22:13",
																"nodeType": "YulBlock",
																"src": "5513:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5515:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "5515:16:13"
																			},
																			"nativeSrc": "5515:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5515:18:13"
																		},
																		"nativeSrc": "5515:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5515:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5505:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5505:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5508:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5508:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5502:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5502:2:13"
																},
																"nativeSrc": "5502:10:13",
																"nodeType": "YulFunctionCall",
																"src": "5502:10:13"
															},
															"nativeSrc": "5499:36:13",
															"nodeType": "YulIf",
															"src": "5499:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5351:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5382:1:13",
														"nodeType": "YulTypedName",
														"src": "5382:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5385:1:13",
														"nodeType": "YulTypedName",
														"src": "5385:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5391:3:13",
														"nodeType": "YulTypedName",
														"src": "5391:3:13",
														"type": ""
													}
												],
												"src": "5351:191:13"
											},
											{
												"body": {
													"nativeSrc": "5661:34:13",
													"nodeType": "YulBlock",
													"src": "5661:34:13",
													"statements": [
														{
															"nativeSrc": "5671:18:13",
															"nodeType": "YulAssignment",
															"src": "5671:18:13",
															"value": {
																"name": "pos",
																"nativeSrc": "5686:3:13",
																"nodeType": "YulIdentifier",
																"src": "5686:3:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5671:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "5671:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "5548:147:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5633:3:13",
														"nodeType": "YulTypedName",
														"src": "5633:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5638:6:13",
														"nodeType": "YulTypedName",
														"src": "5638:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5649:11:13",
														"nodeType": "YulTypedName",
														"src": "5649:11:13",
														"type": ""
													}
												],
												"src": "5548:147:13"
											},
											{
												"body": {
													"nativeSrc": "5807:8:13",
													"nodeType": "YulBlock",
													"src": "5807:8:13",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "5701:114:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5799:6:13",
														"nodeType": "YulTypedName",
														"src": "5799:6:13",
														"type": ""
													}
												],
												"src": "5701:114:13"
											},
											{
												"body": {
													"nativeSrc": "5984:235:13",
													"nodeType": "YulBlock",
													"src": "5984:235:13",
													"statements": [
														{
															"nativeSrc": "5994:90:13",
															"nodeType": "YulAssignment",
															"src": "5994:90:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6077:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6077:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6082:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6082:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "6001:75:13",
																	"nodeType": "YulIdentifier",
																	"src": "6001:75:13"
																},
																"nativeSrc": "6001:83:13",
																"nodeType": "YulFunctionCall",
																"src": "6001:83:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5994:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5994:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6182:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6182:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "6093:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "6093:88:13"
																},
																"nativeSrc": "6093:93:13",
																"nodeType": "YulFunctionCall",
																"src": "6093:93:13"
															},
															"nativeSrc": "6093:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "6093:93:13"
														},
														{
															"nativeSrc": "6195:18:13",
															"nodeType": "YulAssignment",
															"src": "6195:18:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6206:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6206:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6211:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6211:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6202:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6202:3:13"
																},
																"nativeSrc": "6202:11:13",
																"nodeType": "YulFunctionCall",
																"src": "6202:11:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6195:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6195:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "5821:398:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5972:3:13",
														"nodeType": "YulTypedName",
														"src": "5972:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5980:3:13",
														"nodeType": "YulTypedName",
														"src": "5980:3:13",
														"type": ""
													}
												],
												"src": "5821:398:13"
											},
											{
												"body": {
													"nativeSrc": "6413:191:13",
													"nodeType": "YulBlock",
													"src": "6413:191:13",
													"statements": [
														{
															"nativeSrc": "6424:154:13",
															"nodeType": "YulAssignment",
															"src": "6424:154:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6574:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6574:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "6431:141:13",
																	"nodeType": "YulIdentifier",
																	"src": "6431:141:13"
																},
																"nativeSrc": "6431:147:13",
																"nodeType": "YulFunctionCall",
																"src": "6431:147:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6424:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6424:3:13"
																}
															]
														},
														{
															"nativeSrc": "6588:10:13",
															"nodeType": "YulAssignment",
															"src": "6588:10:13",
															"value": {
																"name": "pos",
																"nativeSrc": "6595:3:13",
																"nodeType": "YulIdentifier",
																"src": "6595:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6588:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6588:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "6225:379:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6400:3:13",
														"nodeType": "YulTypedName",
														"src": "6400:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6409:3:13",
														"nodeType": "YulTypedName",
														"src": "6409:3:13",
														"type": ""
													}
												],
												"src": "6225:379:13"
											},
											{
												"body": {
													"nativeSrc": "6675:53:13",
													"nodeType": "YulBlock",
													"src": "6675:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6692:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6692:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6715:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6715:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6697:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "6697:17:13"
																		},
																		"nativeSrc": "6697:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6697:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6685:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6685:6:13"
																},
																"nativeSrc": "6685:37:13",
																"nodeType": "YulFunctionCall",
																"src": "6685:37:13"
															},
															"nativeSrc": "6685:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "6685:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6610:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6663:5:13",
														"nodeType": "YulTypedName",
														"src": "6663:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6670:3:13",
														"nodeType": "YulTypedName",
														"src": "6670:3:13",
														"type": ""
													}
												],
												"src": "6610:118:13"
											},
											{
												"body": {
													"nativeSrc": "6860:206:13",
													"nodeType": "YulBlock",
													"src": "6860:206:13",
													"statements": [
														{
															"nativeSrc": "6870:26:13",
															"nodeType": "YulAssignment",
															"src": "6870:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6882:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6882:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6893:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6893:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6878:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6878:3:13"
																},
																"nativeSrc": "6878:18:13",
																"nodeType": "YulFunctionCall",
																"src": "6878:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6870:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6870:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6950:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6950:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6963:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6963:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6974:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6974:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6959:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6959:3:13"
																		},
																		"nativeSrc": "6959:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6959:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6906:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6906:43:13"
																},
																"nativeSrc": "6906:71:13",
																"nodeType": "YulFunctionCall",
																"src": "6906:71:13"
															},
															"nativeSrc": "6906:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "6906:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7031:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7031:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7044:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7044:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7055:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7055:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7040:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7040:3:13"
																		},
																		"nativeSrc": "7040:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7040:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6987:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6987:43:13"
																},
																"nativeSrc": "6987:72:13",
																"nodeType": "YulFunctionCall",
																"src": "6987:72:13"
															},
															"nativeSrc": "6987:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "6987:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "6734:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6824:9:13",
														"nodeType": "YulTypedName",
														"src": "6824:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6836:6:13",
														"nodeType": "YulTypedName",
														"src": "6836:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6844:6:13",
														"nodeType": "YulTypedName",
														"src": "6844:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6855:4:13",
														"nodeType": "YulTypedName",
														"src": "6855:4:13",
														"type": ""
													}
												],
												"src": "6734:332:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1211": [
									{
										"length": 32,
										"start": 1197
									},
									{
										"length": 32,
										"start": 1831
									}
								],
								"1214": [
									{
										"length": 32,
										"start": 1993
									},
									{
										"length": 32,
										"start": 2086
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100f6575f3560e01c8063a217fddf11610089578063d547741f11610058578063d547741f1461034b578063f215705214610373578063f4443d9a1461039d578063f8b2cb4f146103d95761012d565b8063a217fddf146102b1578063b3d8bcdc146102db578063c16ec03714610317578063d0e30db0146103415761012d565b806336568abe116100c557806336568abe146101f95780637d882097146102215780638c0ff5b71461024b57806391d14854146102755761012d565b806301ffc9a714610131578063248a9ca31461016d5780632e1a7d4d146101a95780632f2ff15d146101d15761012d565b3661012d576040517f3ee6509d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f5ffd5b34801561013c575f5ffd5b5061015760048036038101906101529190610daf565b610415565b6040516101649190610df4565b60405180910390f35b348015610178575f5ffd5b50610193600480360381019061018e9190610e40565b61048e565b6040516101a09190610e7a565b60405180910390f35b3480156101b4575f5ffd5b506101cf60048036038101906101ca9190610ec6565b6104aa565b005b3480156101dc575f5ffd5b506101f760048036038101906101f29190610f4b565b610682565b005b348015610204575f5ffd5b5061021f600480360381019061021a9190610f4b565b6106a4565b005b34801561022c575f5ffd5b5061023561071f565b6040516102429190610f98565b60405180910390f35b348015610256575f5ffd5b5061025f610725565b60405161026c9190610f98565b60405180910390f35b348015610280575f5ffd5b5061029b60048036038101906102969190610f4b565b610749565b6040516102a89190610df4565b60405180910390f35b3480156102bc575f5ffd5b506102c56107ac565b6040516102d29190610e7a565b60405180910390f35b3480156102e6575f5ffd5b5061030160048036038101906102fc9190610fb1565b6107b2565b60405161030e9190610f98565b60405180910390f35b348015610322575f5ffd5b5061032b6107c7565b6040516103389190610f98565b60405180910390f35b6103496107eb565b005b348015610356575f5ffd5b50610371600480360381019061036c9190610f4b565b610998565b005b34801561037e575f5ffd5b506103876109ba565b6040516103949190610e7a565b60405180910390f35b3480156103a8575f5ffd5b506103c360048036038101906103be9190610fb1565b6109de565b6040516103d09190610f98565b60405180910390f35b3480156103e4575f5ffd5b506103ff60048036038101906103fa9190610fb1565b6109f3565b60405161040c9190610f98565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610487575061048682610a39565b5b9050919050565b5f5f5f8381526020019081526020015f20600101549050919050565b807f0000000000000000000000000000000000000000000000000000000000000000811115610505576040517f73a7c91000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905082811015610580576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82810360035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508260025f828254039250508190555060055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f81548092919061062090611009565b919050555061062f3384610aa2565b3373ffffffffffffffffffffffffffffffffffffffff167fbc158bb64f05d6383aea69bbb0b20c1bbf4b7a18f63359c5649b7c39e29d3884846040516106759190610f98565b60405180910390a2505050565b61068b8261048e565b61069481610b18565b61069e8383610b2c565b50505050565b6106ac610c15565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610710576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61071a8282610c1c565b505050565b60025481565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f5f5f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f5f1b81565b6005602052805f5260405f205f915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f3403610824576040517f8615019900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000346002546108539190611050565b111561088b576040517fdef6daf200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3460035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546108d79190611050565b925050819055503460025f8282546108ef9190611050565b9250508190555060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f81548092919061094390611009565b91905055503373ffffffffffffffffffffffffffffffffffffffff167fd15c9547ea5c06670c0010ce19bc32d54682a4b3801ece7f3ab0c3f17106b4bb3460405161098e9190610f98565b60405180910390a2565b6109a18261048e565b6109aa81610b18565b6109b48383610c1c565b50505050565b7f2d95a8186db49da8bd2356c70cf02038f7de0d6ed39f6766fe2d93d5e778561681565b6004602052805f5260405f205f915090505481565b5f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f8273ffffffffffffffffffffffffffffffffffffffff1682604051610ac7906110b0565b5f6040518083038185875af1925050503d805f8114610b01576040519150601f19603f3d011682016040523d82523d5f602084013e610b06565b606091505b5050905080610b13575f5ffd5b505050565b610b2981610b24610c15565b610d05565b50565b5f610b378383610749565b610c0b5760015f5f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610ba8610c15565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610c0f565b5f90505b92915050565b5f33905090565b5f610c278383610749565b15610cfb575f5f5f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610c98610c15565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610cff565b5f90505b92915050565b610d0f8282610749565b610d525780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401610d499291906110d3565b60405180910390fd5b5050565b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610d8e81610d5a565b8114610d98575f5ffd5b50565b5f81359050610da981610d85565b92915050565b5f60208284031215610dc457610dc3610d56565b5b5f610dd184828501610d9b565b91505092915050565b5f8115159050919050565b610dee81610dda565b82525050565b5f602082019050610e075f830184610de5565b92915050565b5f819050919050565b610e1f81610e0d565b8114610e29575f5ffd5b50565b5f81359050610e3a81610e16565b92915050565b5f60208284031215610e5557610e54610d56565b5b5f610e6284828501610e2c565b91505092915050565b610e7481610e0d565b82525050565b5f602082019050610e8d5f830184610e6b565b92915050565b5f819050919050565b610ea581610e93565b8114610eaf575f5ffd5b50565b5f81359050610ec081610e9c565b92915050565b5f60208284031215610edb57610eda610d56565b5b5f610ee884828501610eb2565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610f1a82610ef1565b9050919050565b610f2a81610f10565b8114610f34575f5ffd5b50565b5f81359050610f4581610f21565b92915050565b5f5f60408385031215610f6157610f60610d56565b5b5f610f6e85828601610e2c565b9250506020610f7f85828601610f37565b9150509250929050565b610f9281610e93565b82525050565b5f602082019050610fab5f830184610f89565b92915050565b5f60208284031215610fc657610fc5610d56565b5b5f610fd384828501610f37565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61101382610e93565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361104557611044610fdc565b5b600182019050919050565b5f61105a82610e93565b915061106583610e93565b925082820190508082111561107d5761107c610fdc565b5b92915050565b5f81905092915050565b50565b5f61109b5f83611083565b91506110a68261108d565b5f82019050919050565b5f6110ba82611090565b9150819050919050565b6110cd81610f10565b82525050565b5f6040820190506110e65f8301856110c4565b6110f36020830184610e6b565b939250505056fea2646970667358221220cb7763def440d4f939c1661e6ba44988145bfb3eb5690cb16fa605d11adedc7164736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA217FDDF GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0xF2157052 EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0xF4443D9A EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x3D9 JUMPI PUSH2 0x12D JUMP JUMPDEST DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xB3D8BCDC EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0xC16EC037 EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x341 JUMPI PUSH2 0x12D JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x7D882097 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x8C0FF5B7 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x275 JUMPI PUSH2 0x12D JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1D1 JUMPI PUSH2 0x12D JUMP JUMPDEST CALLDATASIZE PUSH2 0x12D JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE6509D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x178 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0xE40 JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0xE7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0xEC6 JUMP JUMPDEST PUSH2 0x4AA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0xF4B JUMP JUMPDEST PUSH2 0x682 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x204 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0xF4B JUMP JUMPDEST PUSH2 0x6A4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x235 PUSH2 0x71F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x725 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x280 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x29B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x296 SWAP2 SWAP1 PUSH2 0xF4B JUMP JUMPDEST PUSH2 0x749 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C5 PUSH2 0x7AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0xE7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x301 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x7B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP2 SWAP1 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x322 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x32B PUSH2 0x7C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x338 SWAP2 SWAP1 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x349 PUSH2 0x7EB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x371 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36C SWAP2 SWAP1 PUSH2 0xF4B JUMP JUMPDEST PUSH2 0x998 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x387 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xE7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x9DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FA SWAP2 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x9F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40C SWAP2 SWAP1 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x487 JUMPI POP PUSH2 0x486 DUP3 PUSH2 0xA39 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH32 0x0 DUP2 GT ISZERO PUSH2 0x505 JUMPI PUSH1 0x40 MLOAD PUSH32 0x73A7C91000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x580 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x620 SWAP1 PUSH2 0x1009 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x62F CALLER DUP5 PUSH2 0xAA2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC158BB64F05D6383AEA69BBB0B20C1BBF4B7A18F63359C5649B7C39E29D3884 DUP5 PUSH1 0x40 MLOAD PUSH2 0x675 SWAP2 SWAP1 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x68B DUP3 PUSH2 0x48E JUMP JUMPDEST PUSH2 0x694 DUP2 PUSH2 0xB18 JUMP JUMPDEST PUSH2 0x69E DUP4 DUP4 PUSH2 0xB2C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x6AC PUSH2 0xC15 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x710 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x71A DUP3 DUP3 PUSH2 0xC1C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 CALLVALUE SUB PUSH2 0x824 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8615019900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 CALLVALUE PUSH1 0x2 SLOAD PUSH2 0x853 SWAP2 SWAP1 PUSH2 0x1050 JUMP JUMPDEST GT ISZERO PUSH2 0x88B JUMPI PUSH1 0x40 MLOAD PUSH32 0xDEF6DAF200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8D7 SWAP2 SWAP1 PUSH2 0x1050 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8EF SWAP2 SWAP1 PUSH2 0x1050 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x943 SWAP1 PUSH2 0x1009 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD15C9547EA5C06670C0010CE19BC32D54682A4B3801ECE7F3AB0C3F17106B4BB CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x98E SWAP2 SWAP1 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x9A1 DUP3 PUSH2 0x48E JUMP JUMPDEST PUSH2 0x9AA DUP2 PUSH2 0xB18 JUMP JUMPDEST PUSH2 0x9B4 DUP4 DUP4 PUSH2 0xC1C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x2D95A8186DB49DA8BD2356C70CF02038F7DE0D6ED39F6766FE2D93D5E7785616 DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xAC7 SWAP1 PUSH2 0x10B0 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xB01 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB06 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xB13 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB29 DUP2 PUSH2 0xB24 PUSH2 0xC15 JUMP JUMPDEST PUSH2 0xD05 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xB37 DUP4 DUP4 PUSH2 0x749 JUMP JUMPDEST PUSH2 0xC0B JUMPI PUSH1 0x1 PUSH0 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xBA8 PUSH2 0xC15 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xC0F JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xC27 DUP4 DUP4 PUSH2 0x749 JUMP JUMPDEST ISZERO PUSH2 0xCFB JUMPI PUSH0 PUSH0 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xC98 PUSH2 0xC15 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xCFF JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD0F DUP3 DUP3 PUSH2 0x749 JUMP JUMPDEST PUSH2 0xD52 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD49 SWAP3 SWAP2 SWAP1 PUSH2 0x10D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD8E DUP2 PUSH2 0xD5A JUMP JUMPDEST DUP2 EQ PUSH2 0xD98 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDA9 DUP2 PUSH2 0xD85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDC4 JUMPI PUSH2 0xDC3 PUSH2 0xD56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDD1 DUP5 DUP3 DUP6 ADD PUSH2 0xD9B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDEE DUP2 PUSH2 0xDDA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE07 PUSH0 DUP4 ADD DUP5 PUSH2 0xDE5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE1F DUP2 PUSH2 0xE0D JUMP JUMPDEST DUP2 EQ PUSH2 0xE29 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE3A DUP2 PUSH2 0xE16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE55 JUMPI PUSH2 0xE54 PUSH2 0xD56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE62 DUP5 DUP3 DUP6 ADD PUSH2 0xE2C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE74 DUP2 PUSH2 0xE0D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE8D PUSH0 DUP4 ADD DUP5 PUSH2 0xE6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEA5 DUP2 PUSH2 0xE93 JUMP JUMPDEST DUP2 EQ PUSH2 0xEAF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEC0 DUP2 PUSH2 0xE9C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEDB JUMPI PUSH2 0xEDA PUSH2 0xD56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEE8 DUP5 DUP3 DUP6 ADD PUSH2 0xEB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF1A DUP3 PUSH2 0xEF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF2A DUP2 PUSH2 0xF10 JUMP JUMPDEST DUP2 EQ PUSH2 0xF34 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF45 DUP2 PUSH2 0xF21 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF61 JUMPI PUSH2 0xF60 PUSH2 0xD56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF6E DUP6 DUP3 DUP7 ADD PUSH2 0xE2C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF7F DUP6 DUP3 DUP7 ADD PUSH2 0xF37 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xF92 DUP2 PUSH2 0xE93 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFAB PUSH0 DUP4 ADD DUP5 PUSH2 0xF89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFC6 JUMPI PUSH2 0xFC5 PUSH2 0xD56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFD3 DUP5 DUP3 DUP6 ADD PUSH2 0xF37 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1013 DUP3 PUSH2 0xE93 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1045 JUMPI PUSH2 0x1044 PUSH2 0xFDC JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x105A DUP3 PUSH2 0xE93 JUMP JUMPDEST SWAP2 POP PUSH2 0x1065 DUP4 PUSH2 0xE93 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x107D JUMPI PUSH2 0x107C PUSH2 0xFDC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x109B PUSH0 DUP4 PUSH2 0x1083 JUMP JUMPDEST SWAP2 POP PUSH2 0x10A6 DUP3 PUSH2 0x108D JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10BA DUP3 PUSH2 0x1090 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10CD DUP2 PUSH2 0xF10 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x10E6 PUSH0 DUP4 ADD DUP6 PUSH2 0x10C4 JUMP JUMPDEST PUSH2 0x10F3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE6B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB PUSH24 0x63DEF440D4F939C1661E6BA44988145BFB3EB5690CB16FA6 SDIV DATALOADN 0x1ADE 0xDC PUSH18 0x64736F6C634300081E003300000000000000 ",
							"sourceMap": "737:6045:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6745:26;;;;;;;;;;;;;;737:6045;;;;2541:202:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3786:120;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5259:463:12;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4202:136:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5304:245;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1449:28:12;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1142:38;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:136:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2196:49;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1868:50:12;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1240:42;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4723:350;;;:::i;:::-;;4618:138:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;898:74:12;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1754:47;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6027:110;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2541:202:1;2626:4;2664:32;2649:47;;;:11;:47;;;;:87;;;;2700:36;2724:11;2700:23;:36::i;:::-;2649:87;2642:94;;2541:202;;;:::o;3786:120::-;3851:7;3877:6;:12;3884:4;3877:12;;;;;;;;;;;:22;;;3870:29;;3786:120;;;:::o;5259:463:12:-;5324:6;4413:13;4404:6;:22;4400:58;;;4435:23;;;;;;;;;;;;;;4400:58;5343:15:::1;5361:12;:24;5374:10;5361:24;;;;;;;;;;;;;;;;5343:42;;5410:6;5400:7;:16;5396:50;;;5425:21;;;;;;;;;;;;;;5396:50;5521:6;5511:7;:16;5484:12;:24;5497:10;5484:24;;;;;;;;;;;;;;;:43;;;;5559:6;5542:13;;:23;;;;;;;;;;;5589:15;:27;5605:10;5589:27;;;;;;;;;;;;;;;;:29;;;;;;;;;:::i;:::-;;;;;;5629:33;5643:10;5655:6;5629:13;:33::i;:::-;5695:10;5680:34;;;5707:6;5680:34;;;;;;:::i;:::-;;;;;;;;5332:390;5259:463:::0;;:::o;4202:136:1:-;4276:18;4289:4;4276:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4306:25:::1;4317:4;4323:7;4306:10;:25::i;:::-;;4202:136:::0;;;:::o;5304:245::-;5419:12;:10;:12::i;:::-;5397:34;;:18;:34;;;5393:102;;5454:30;;;;;;;;;;;;;;5393:102;5505:37;5517:4;5523:18;5505:11;:37::i;:::-;;5304:245;;:::o;1449:28:12:-;;;;:::o;1142:38::-;;;:::o;2830:136:1:-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;2196:49::-;2241:4;2196:49;;;:::o;1868:50:12:-;;;;;;;;;;;;;;;;;:::o;1240:42::-;;;:::o;4723:350::-;4154:1;4141:9;:14;4137:50;;4164:23;;;;;;;;;;;;;;4137:50;4817:17:::1;4805:9;4789:13;;:25;;;;:::i;:::-;:45;4785:105;;;4858:20;;;;;;;;;;;;;;4785:105;4930:9;4902:12;:24;4915:10;4902:24;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;4967:9;4950:13;;:26;;;;;;;:::i;:::-;;;;;;;;4987:12;:24;5000:10;4987:24;;;;;;;;;;;;;;;;:26;;;;;;;;;:::i;:::-;;;;;;5043:10;5031:34;;;5055:9;5031:34;;;;;;:::i;:::-;;;;;;;;4723:350::o:0;4618:138:1:-;4693:18;4706:4;4693:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4723:26:::1;4735:4;4741:7;4723:11;:26::i;:::-;;4618:138:::0;;;:::o;898:74:12:-;942:30;898:74;:::o;1754:47::-;;;;;;;;;;;;;;;;;:::o;6027:110::-;6084:7;6111:12;:18;6124:4;6111:18;;;;;;;;;;;;;;;;6104:25;;6027:110;;;:::o;730:146:10:-;806:4;844:25;829:40;;;:11;:40;;;;822:47;;730:146;;;:::o;6394:170:12:-;6472:12;6490:9;:14;;6512:6;6490:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6471:52;;;6539:7;6534:22;;6548:8;;;6534:22;6460:104;6394:170;;:::o;3175:103:1:-;3241:30;3252:4;3258:12;:10;:12::i;:::-;3241:10;:30::i;:::-;3175:103;:::o;6155:316::-;6232:4;6253:22;6261:4;6267:7;6253;:22::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;:12::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;656:96:9:-;709:7;735:10;728:17;;656:96;:::o;6708:317:1:-;6786:4;6806:22;6814:4;6820:7;6806;:22::i;:::-;6802:217;;;6876:5;6844:6;:12;6851:4;6844:12;;;;;;;;;;;:20;;:29;6865:7;6844:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6927:12;:10;:12::i;:::-;6900:40;;6918:7;6900:40;;6912:4;6900:40;;;;;;;;;;6961:4;6954:11;;;;6802:217;7003:5;6996:12;;6708:317;;;;;:::o;3408:197::-;3496:22;3504:4;3510:7;3496;:22::i;:::-;3491:108;;3574:7;3583:4;3541:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3491:108;3408:197;;:::o;88:117:13:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:329::-;1933:6;1982:2;1970:9;1961:7;1957:23;1953:32;1950:119;;;1988:79;;:::i;:::-;1950:119;2108:1;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2079:117;1874:329;;;;:::o;2209:118::-;2296:24;2314:5;2296:24;:::i;:::-;2291:3;2284:37;2209:118;;:::o;2333:222::-;2426:4;2464:2;2453:9;2449:18;2441:26;;2477:71;2545:1;2534:9;2530:17;2521:6;2477:71;:::i;:::-;2333:222;;;;:::o;2561:77::-;2598:7;2627:5;2616:16;;2561:77;;;:::o;2644:122::-;2717:24;2735:5;2717:24;:::i;:::-;2710:5;2707:35;2697:63;;2756:1;2753;2746:12;2697:63;2644:122;:::o;2772:139::-;2818:5;2856:6;2843:20;2834:29;;2872:33;2899:5;2872:33;:::i;:::-;2772:139;;;;:::o;2917:329::-;2976:6;3025:2;3013:9;3004:7;3000:23;2996:32;2993:119;;;3031:79;;:::i;:::-;2993:119;3151:1;3176:53;3221:7;3212:6;3201:9;3197:22;3176:53;:::i;:::-;3166:63;;3122:117;2917:329;;;;:::o;3252:126::-;3289:7;3329:42;3322:5;3318:54;3307:65;;3252:126;;;:::o;3384:96::-;3421:7;3450:24;3468:5;3450:24;:::i;:::-;3439:35;;3384:96;;;:::o;3486:122::-;3559:24;3577:5;3559:24;:::i;:::-;3552:5;3549:35;3539:63;;3598:1;3595;3588:12;3539:63;3486:122;:::o;3614:139::-;3660:5;3698:6;3685:20;3676:29;;3714:33;3741:5;3714:33;:::i;:::-;3614:139;;;;:::o;3759:474::-;3827:6;3835;3884:2;3872:9;3863:7;3859:23;3855:32;3852:119;;;3890:79;;:::i;:::-;3852:119;4010:1;4035:53;4080:7;4071:6;4060:9;4056:22;4035:53;:::i;:::-;4025:63;;3981:117;4137:2;4163:53;4208:7;4199:6;4188:9;4184:22;4163:53;:::i;:::-;4153:63;;4108:118;3759:474;;;;;:::o;4239:118::-;4326:24;4344:5;4326:24;:::i;:::-;4321:3;4314:37;4239:118;;:::o;4363:222::-;4456:4;4494:2;4483:9;4479:18;4471:26;;4507:71;4575:1;4564:9;4560:17;4551:6;4507:71;:::i;:::-;4363:222;;;;:::o;4591:329::-;4650:6;4699:2;4687:9;4678:7;4674:23;4670:32;4667:119;;;4705:79;;:::i;:::-;4667:119;4825:1;4850:53;4895:7;4886:6;4875:9;4871:22;4850:53;:::i;:::-;4840:63;;4796:117;4591:329;;;;:::o;4926:180::-;4974:77;4971:1;4964:88;5071:4;5068:1;5061:15;5095:4;5092:1;5085:15;5112:233;5151:3;5174:24;5192:5;5174:24;:::i;:::-;5165:33;;5220:66;5213:5;5210:77;5207:103;;5290:18;;:::i;:::-;5207:103;5337:1;5330:5;5326:13;5319:20;;5112:233;;;:::o;5351:191::-;5391:3;5410:20;5428:1;5410:20;:::i;:::-;5405:25;;5444:20;5462:1;5444:20;:::i;:::-;5439:25;;5487:1;5484;5480:9;5473:16;;5508:3;5505:1;5502:10;5499:36;;;5515:18;;:::i;:::-;5499:36;5351:191;;;;:::o;5548:147::-;5649:11;5686:3;5671:18;;5548:147;;;;:::o;5701:114::-;;:::o;5821:398::-;5980:3;6001:83;6082:1;6077:3;6001:83;:::i;:::-;5994:90;;6093:93;6182:3;6093:93;:::i;:::-;6211:1;6206:3;6202:11;6195:18;;5821:398;;;:::o;6225:379::-;6409:3;6431:147;6574:3;6431:147;:::i;:::-;6424:154;;6595:3;6588:10;;6225:379;;;:::o;6610:118::-;6697:24;6715:5;6697:24;:::i;:::-;6692:3;6685:37;6610:118;;:::o;6734:332::-;6855:4;6893:2;6882:9;6878:18;6870:26;;6906:71;6974:1;6963:9;6959:17;6950:6;6906:71;:::i;:::-;6987:72;7055:2;7044:9;7040:18;7031:6;6987:72;:::i;:::-;6734:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "880000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BANK_MANAGER_ROLE()": "369",
								"DEFAULT_ADMIN_ROLE()": "352",
								"deposit()": "infinite",
								"depositCount(address)": "2868",
								"getBalance(address)": "2917",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3209",
								"maxWithdrawal()": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "741",
								"totalBankCapacity()": "infinite",
								"totalDeposits()": "2470",
								"withdraw(uint256)": "infinite",
								"withdrawalCount(address)": "2847"
							},
							"internal": {
								"_safeTransfer(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 737,
									"end": 6782,
									"name": "PUSH",
									"source": 12,
									"value": "C0"
								},
								{
									"begin": 737,
									"end": 6782,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 737,
									"end": 6782,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3631,
									"end": 3920,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 3631,
									"end": 3920,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3631,
									"end": 3920,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3631,
									"end": 3920,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3631,
									"end": 3920,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3631,
									"end": 3920,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3631,
									"end": 3920,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3631,
									"end": 3920,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3631,
									"end": 3920,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3631,
									"end": 3920,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3631,
									"end": 3920,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3631,
									"end": 3920,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3631,
									"end": 3920,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3631,
									"end": 3920,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 3631,
									"end": 3920,
									"name": "CODESIZE",
									"source": 12
								},
								{
									"begin": 3631,
									"end": 3920,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3631,
									"end": 3920,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3631,
									"end": 3920,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 3631,
									"end": 3920,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3631,
									"end": 3920,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 3631,
									"end": 3920,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3631,
									"end": 3920,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3631,
									"end": 3920,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3631,
									"end": 3920,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3631,
									"end": 3920,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3631,
									"end": 3920,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3631,
									"end": 3920,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3631,
									"end": 3920,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3631,
									"end": 3920,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 3631,
									"end": 3920,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3631,
									"end": 3920,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3631,
									"end": 3920,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 3631,
									"end": 3920,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3631,
									"end": 3920,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 3631,
									"end": 3920,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3724,
									"end": 3725,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3706,
									"end": 3720,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3706,
									"end": 3725,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3702,
									"end": 3760,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 3702,
									"end": 3760,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3734,
									"end": 3760,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3734,
									"end": 3760,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3734,
									"end": 3760,
									"name": "PUSH",
									"source": 12,
									"value": "F1F13A3800000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3734,
									"end": 3760,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3734,
									"end": 3760,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3734,
									"end": 3760,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 3734,
									"end": 3760,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3734,
									"end": 3760,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3734,
									"end": 3760,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3734,
									"end": 3760,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3734,
									"end": 3760,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3734,
									"end": 3760,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3734,
									"end": 3760,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3734,
									"end": 3760,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3702,
									"end": 3760,
									"name": "tag",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 3702,
									"end": 3760,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3793,
									"end": 3794,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3775,
									"end": 3789,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3775,
									"end": 3794,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3771,
									"end": 3824,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 3771,
									"end": 3824,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3803,
									"end": 3824,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3803,
									"end": 3824,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3803,
									"end": 3824,
									"name": "PUSH",
									"source": 12,
									"value": "AFEA1C5700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3803,
									"end": 3824,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3803,
									"end": 3824,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3803,
									"end": 3824,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 3803,
									"end": 3824,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3803,
									"end": 3824,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3803,
									"end": 3824,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3803,
									"end": 3824,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3803,
									"end": 3824,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3803,
									"end": 3824,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3803,
									"end": 3824,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3803,
									"end": 3824,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3771,
									"end": 3824,
									"name": "tag",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 3771,
									"end": 3824,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3853,
									"end": 3867,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3837,
									"end": 3867,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 3837,
									"end": 3867,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3837,
									"end": 3867,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3837,
									"end": 3867,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3837,
									"end": 3867,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3837,
									"end": 3867,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3898,
									"end": 3912,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3878,
									"end": 3912,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 3878,
									"end": 3912,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3878,
									"end": 3912,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3878,
									"end": 3912,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3878,
									"end": 3912,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3878,
									"end": 3912,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3631,
									"end": 3920,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3631,
									"end": 3920,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 737,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 737,
									"end": 6782,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 773,
									"end": 779,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 781,
									"end": 787,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 830,
									"end": 832,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 818,
									"end": 827,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 809,
									"end": 816,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 805,
									"end": 828,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 801,
									"end": 833,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 798,
									"end": 917,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 798,
									"end": 917,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 798,
									"end": 917,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 836,
									"end": 915,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 836,
									"end": 915,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 836,
									"end": 915,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 836,
									"end": 915,
									"name": "tag",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 836,
									"end": 915,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 798,
									"end": 917,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 798,
									"end": 917,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 956,
									"end": 957,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 1037,
									"end": 1044,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1028,
									"end": 1034,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1017,
									"end": 1026,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1013,
									"end": 1035,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 981,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 981,
									"end": 1045,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 981,
									"end": 1045,
									"name": "tag",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 981,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 971,
									"end": 1045,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 971,
									"end": 1045,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 927,
									"end": 1055,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1094,
									"end": 1096,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1120,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 1176,
									"end": 1183,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1167,
									"end": 1173,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1156,
									"end": 1165,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1152,
									"end": 1174,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1120,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 1120,
									"end": 1184,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1120,
									"end": 1184,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 1120,
									"end": 1184,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1110,
									"end": 1184,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1110,
									"end": 1184,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1065,
									"end": 1194,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 694,
									"end": 1201,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 737,
									"end": 6782,
									"name": "tag",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 737,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 737,
									"end": 6782,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 737,
									"end": 6782,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 737,
									"end": 6782,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 737,
									"end": 6782,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 737,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 737,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 737,
									"end": 6782,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 737,
									"end": 6782,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 737,
									"end": 6782,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 737,
									"end": 6782,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "1214"
								},
								{
									"begin": 737,
									"end": 6782,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 737,
									"end": 6782,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "1211"
								},
								{
									"begin": 737,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 737,
									"end": 6782,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 737,
									"end": 6782,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cb7763def440d4f939c1661e6ba44988145bfb3eb5690cb16fa605d11adedc7164736f6c634300081e0033",
									".code": [
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH",
											"source": 12,
											"value": "A217FDDF"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH",
											"source": 12,
											"value": "D547741F"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH",
											"source": 12,
											"value": "D547741F"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH",
											"source": 12,
											"value": "F2157052"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH",
											"source": 12,
											"value": "F4443D9A"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH",
											"source": 12,
											"value": "F8B2CB4F"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH",
											"source": 12,
											"value": "A217FDDF"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH",
											"source": 12,
											"value": "B3D8BCDC"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH",
											"source": 12,
											"value": "C16EC037"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH",
											"source": 12,
											"value": "D0E30DB0"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH",
											"source": 12,
											"value": "36568ABE"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH",
											"source": 12,
											"value": "36568ABE"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH",
											"source": 12,
											"value": "7D882097"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH",
											"source": 12,
											"value": "8C0FF5B7"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH",
											"source": 12,
											"value": "91D14854"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A7"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH",
											"source": 12,
											"value": "248A9CA3"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH",
											"source": 12,
											"value": "2E1A7D4D"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH",
											"source": 12,
											"value": "2F2FF15D"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6745,
											"end": 6771,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6745,
											"end": 6771,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6745,
											"end": 6771,
											"name": "PUSH",
											"source": 12,
											"value": "3EE6509D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6745,
											"end": 6771,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6745,
											"end": 6771,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6745,
											"end": 6771,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6745,
											"end": 6771,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6745,
											"end": 6771,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6745,
											"end": 6771,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6745,
											"end": 6771,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6745,
											"end": 6771,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6745,
											"end": 6771,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6745,
											"end": 6771,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6745,
											"end": 6771,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 6782,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5259,
											"end": 5722,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 5259,
											"end": 5722,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5259,
											"end": 5722,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 5259,
											"end": 5722,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5259,
											"end": 5722,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5259,
											"end": 5722,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 5259,
											"end": 5722,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5259,
											"end": 5722,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5259,
											"end": 5722,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5259,
											"end": 5722,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5259,
											"end": 5722,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 5259,
											"end": 5722,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5259,
											"end": 5722,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5259,
											"end": 5722,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 5259,
											"end": 5722,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5259,
											"end": 5722,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5259,
											"end": 5722,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 5259,
											"end": 5722,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5259,
											"end": 5722,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5259,
											"end": 5722,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5259,
											"end": 5722,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5259,
											"end": 5722,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5259,
											"end": 5722,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5259,
											"end": 5722,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5259,
											"end": 5722,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 5259,
											"end": 5722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5259,
											"end": 5722,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5259,
											"end": 5722,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5259,
											"end": 5722,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 5259,
											"end": 5722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5259,
											"end": 5722,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 5259,
											"end": 5722,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5259,
											"end": 5722,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "tag",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 1449,
											"end": 1477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 1449,
											"end": 1477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1180,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 1142,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1180,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1180,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1180,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 1142,
											"end": 1180,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1180,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1142,
											"end": 1180,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1142,
											"end": 1180,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1180,
											"name": "tag",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 1142,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1180,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 1142,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 1142,
											"end": 1180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1180,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 1142,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1180,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1142,
											"end": 1180,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1142,
											"end": 1180,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1180,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 1142,
											"end": 1180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1180,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1142,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1180,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1142,
											"end": 1180,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1180,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1180,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1180,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1180,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1180,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "tag",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "tag",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 1868,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 1868,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "tag",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 1868,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "tag",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1240,
											"end": 1282,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 1240,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1240,
											"end": 1282,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1240,
											"end": 1282,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1240,
											"end": 1282,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1240,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 1240,
											"end": 1282,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1240,
											"end": 1282,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1240,
											"end": 1282,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1240,
											"end": 1282,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1240,
											"end": 1282,
											"name": "tag",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 1240,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1240,
											"end": 1282,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1240,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 1240,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 1240,
											"end": 1282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1240,
											"end": 1282,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 1240,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1240,
											"end": 1282,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1282,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1240,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 1240,
											"end": 1282,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1240,
											"end": 1282,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1240,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 1240,
											"end": 1282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1240,
											"end": 1282,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 1240,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1240,
											"end": 1282,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1282,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1240,
											"end": 1282,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1240,
											"end": 1282,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1240,
											"end": 1282,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1240,
											"end": 1282,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1240,
											"end": 1282,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 4723,
											"end": 5073,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 4723,
											"end": 5073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4723,
											"end": 5073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 4723,
											"end": 5073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 4723,
											"end": 5073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4723,
											"end": 5073,
											"name": "tag",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 4723,
											"end": 5073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4723,
											"end": 5073,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 972,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 898,
											"end": 972,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 898,
											"end": 972,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 898,
											"end": 972,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 898,
											"end": 972,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 898,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 898,
											"end": 972,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 898,
											"end": 972,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 898,
											"end": 972,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 898,
											"end": 972,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 898,
											"end": 972,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 898,
											"end": 972,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 898,
											"end": 972,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 898,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 898,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 898,
											"end": 972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 898,
											"end": 972,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 898,
											"end": 972,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 898,
											"end": 972,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 898,
											"end": 972,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 898,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 898,
											"end": 972,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 898,
											"end": 972,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 898,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 898,
											"end": 972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 898,
											"end": 972,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 898,
											"end": 972,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 898,
											"end": 972,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 898,
											"end": 972,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 898,
											"end": 972,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 898,
											"end": 972,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 898,
											"end": 972,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 898,
											"end": 972,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 898,
											"end": 972,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 1754,
											"end": 1801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "tag",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 1754,
											"end": 1801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "tag",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 1754,
											"end": 1801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "tag",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 6027,
											"end": 6137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "tag",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 6027,
											"end": 6137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "tag",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 6027,
											"end": 6137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "tag",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2630,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2664,
											"end": 2696,
											"name": "PUSH",
											"source": 1,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2724,
											"end": 2735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2700,
											"end": 2736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2642,
											"end": 2736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2642,
											"end": 2736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3884,
											"end": 3888,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3870,
											"end": 3899,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3870,
											"end": 3899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5259,
											"end": 5722,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 5259,
											"end": 5722,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5324,
											"end": 5330,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4413,
											"end": 4426,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1211"
										},
										{
											"begin": 4404,
											"end": 4410,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4404,
											"end": 4426,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4400,
											"end": 4458,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4400,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 4400,
											"end": 4458,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4435,
											"end": 4458,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4435,
											"end": 4458,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4435,
											"end": 4458,
											"name": "PUSH",
											"source": 12,
											"value": "73A7C91000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4435,
											"end": 4458,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4435,
											"end": 4458,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4435,
											"end": 4458,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4435,
											"end": 4458,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4435,
											"end": 4458,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4435,
											"end": 4458,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4435,
											"end": 4458,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4435,
											"end": 4458,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4435,
											"end": 4458,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4435,
											"end": 4458,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4435,
											"end": 4458,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4400,
											"end": 4458,
											"name": "tag",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 4400,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5343,
											"end": 5358,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5361,
											"end": 5373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 5361,
											"end": 5385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5384,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5361,
											"end": 5385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5361,
											"end": 5385,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5361,
											"end": 5385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5361,
											"end": 5385,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5361,
											"end": 5385,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5361,
											"end": 5385,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5361,
											"end": 5385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5361,
											"end": 5385,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5361,
											"end": 5385,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5361,
											"end": 5385,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5361,
											"end": 5385,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5361,
											"end": 5385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5361,
											"end": 5385,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5361,
											"end": 5385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5361,
											"end": 5385,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5361,
											"end": 5385,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5343,
											"end": 5385,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5343,
											"end": 5385,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5410,
											"end": 5416,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5400,
											"end": 5407,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5400,
											"end": 5416,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5396,
											"end": 5446,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5396,
											"end": 5446,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 5396,
											"end": 5446,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5425,
											"end": 5446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5425,
											"end": 5446,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5425,
											"end": 5446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "F4D678B800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5425,
											"end": 5446,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5425,
											"end": 5446,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5425,
											"end": 5446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5425,
											"end": 5446,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5425,
											"end": 5446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5425,
											"end": 5446,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5425,
											"end": 5446,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5425,
											"end": 5446,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5425,
											"end": 5446,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5425,
											"end": 5446,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5425,
											"end": 5446,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5396,
											"end": 5446,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 5396,
											"end": 5446,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5521,
											"end": 5527,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5511,
											"end": 5518,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5511,
											"end": 5527,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5484,
											"end": 5496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 5484,
											"end": 5508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5497,
											"end": 5507,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5484,
											"end": 5508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5484,
											"end": 5508,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5484,
											"end": 5508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5484,
											"end": 5508,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5484,
											"end": 5508,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5484,
											"end": 5508,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5484,
											"end": 5508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5484,
											"end": 5508,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5484,
											"end": 5508,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5484,
											"end": 5508,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5484,
											"end": 5508,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5484,
											"end": 5508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5484,
											"end": 5508,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5484,
											"end": 5508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5484,
											"end": 5508,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5484,
											"end": 5527,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5484,
											"end": 5527,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5484,
											"end": 5527,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5484,
											"end": 5527,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5559,
											"end": 5565,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5542,
											"end": 5555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 5542,
											"end": 5555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5542,
											"end": 5565,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5542,
											"end": 5565,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5542,
											"end": 5565,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5542,
											"end": 5565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5542,
											"end": 5565,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5542,
											"end": 5565,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5542,
											"end": 5565,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5542,
											"end": 5565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5542,
											"end": 5565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5542,
											"end": 5565,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5542,
											"end": 5565,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5589,
											"end": 5604,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 5589,
											"end": 5616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5605,
											"end": 5615,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5589,
											"end": 5616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5589,
											"end": 5616,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5589,
											"end": 5616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5589,
											"end": 5616,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5589,
											"end": 5616,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5589,
											"end": 5616,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5589,
											"end": 5616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5616,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5589,
											"end": 5616,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5589,
											"end": 5616,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5589,
											"end": 5616,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5589,
											"end": 5616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5616,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5589,
											"end": 5616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5589,
											"end": 5616,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5589,
											"end": 5616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5589,
											"end": 5618,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5589,
											"end": 5618,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5589,
											"end": 5618,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5589,
											"end": 5618,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5589,
											"end": 5618,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5589,
											"end": 5618,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5589,
											"end": 5618,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 5589,
											"end": 5618,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5589,
											"end": 5618,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 5589,
											"end": 5618,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5589,
											"end": 5618,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 5589,
											"end": 5618,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5589,
											"end": 5618,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5589,
											"end": 5618,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5589,
											"end": 5618,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5589,
											"end": 5618,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5589,
											"end": 5618,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5629,
											"end": 5662,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 5643,
											"end": 5653,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5655,
											"end": 5661,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5629,
											"end": 5642,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 5629,
											"end": 5662,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5629,
											"end": 5662,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 5629,
											"end": 5662,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5695,
											"end": 5705,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5680,
											"end": 5714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5680,
											"end": 5714,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5680,
											"end": 5714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "BC158BB64F05D6383AEA69BBB0B20C1BBF4B7A18F63359C5649B7C39E29D3884"
										},
										{
											"begin": 5707,
											"end": 5713,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5680,
											"end": 5714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5680,
											"end": 5714,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5680,
											"end": 5714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 5680,
											"end": 5714,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5680,
											"end": 5714,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5680,
											"end": 5714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 5680,
											"end": 5714,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5680,
											"end": 5714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 5680,
											"end": 5714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5680,
											"end": 5714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5680,
											"end": 5714,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5680,
											"end": 5714,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5680,
											"end": 5714,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5680,
											"end": 5714,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5680,
											"end": 5714,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5680,
											"end": 5714,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 5332,
											"end": 5722,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5259,
											"end": 5722,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5259,
											"end": 5722,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5259,
											"end": 5722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 4289,
											"end": 4293,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4276,
											"end": 4294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 4317,
											"end": 4321,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4330,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4316,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 4306,
											"end": 4331,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 5419,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 5419,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5397,
											"end": 5415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 1,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 5517,
											"end": 5521,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 5505,
											"end": 5542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1449,
											"end": 1477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1180,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 1142,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1180,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1211"
										},
										{
											"begin": 1142,
											"end": 1180,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2907,
											"end": 2911,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2941,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2958,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2923,
											"end": 2959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2923,
											"end": 2959,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "tag",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1868,
											"end": 1918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1240,
											"end": 1282,
											"name": "tag",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 1240,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1240,
											"end": 1282,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1214"
										},
										{
											"begin": 1240,
											"end": 1282,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1240,
											"end": 1282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4723,
											"end": 5073,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 4723,
											"end": 5073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4154,
											"end": 4155,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4141,
											"end": 4150,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 4141,
											"end": 4155,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4137,
											"end": 4187,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 4137,
											"end": 4187,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4164,
											"end": 4187,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4164,
											"end": 4187,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4164,
											"end": 4187,
											"name": "PUSH",
											"source": 12,
											"value": "8615019900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4164,
											"end": 4187,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4164,
											"end": 4187,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4164,
											"end": 4187,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4164,
											"end": 4187,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4164,
											"end": 4187,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4164,
											"end": 4187,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4164,
											"end": 4187,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4164,
											"end": 4187,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4164,
											"end": 4187,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4164,
											"end": 4187,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4164,
											"end": 4187,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4137,
											"end": 4187,
											"name": "tag",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 4137,
											"end": 4187,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4817,
											"end": 4834,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1214"
										},
										{
											"begin": 4805,
											"end": 4814,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 4789,
											"end": 4802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 4789,
											"end": 4802,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4789,
											"end": 4814,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 4789,
											"end": 4814,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4789,
											"end": 4814,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4789,
											"end": 4814,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 4789,
											"end": 4814,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4789,
											"end": 4814,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 4789,
											"end": 4814,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4789,
											"end": 4834,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4785,
											"end": 4890,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4785,
											"end": 4890,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 4785,
											"end": 4890,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4858,
											"end": 4878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4858,
											"end": 4878,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4858,
											"end": 4878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "DEF6DAF200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4858,
											"end": 4878,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4858,
											"end": 4878,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4858,
											"end": 4878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4858,
											"end": 4878,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4858,
											"end": 4878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4858,
											"end": 4878,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4858,
											"end": 4878,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4858,
											"end": 4878,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4858,
											"end": 4878,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4858,
											"end": 4878,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4858,
											"end": 4878,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4785,
											"end": 4890,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 4785,
											"end": 4890,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4930,
											"end": 4939,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 4902,
											"end": 4914,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 4902,
											"end": 4926,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4915,
											"end": 4925,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 4902,
											"end": 4926,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4902,
											"end": 4926,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4902,
											"end": 4926,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4902,
											"end": 4926,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4902,
											"end": 4926,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4902,
											"end": 4926,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4902,
											"end": 4926,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4902,
											"end": 4926,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4902,
											"end": 4926,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4902,
											"end": 4926,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4902,
											"end": 4926,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4902,
											"end": 4926,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4902,
											"end": 4926,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4902,
											"end": 4926,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4902,
											"end": 4926,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4902,
											"end": 4926,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4902,
											"end": 4939,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4902,
											"end": 4939,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4902,
											"end": 4939,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4902,
											"end": 4939,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 4902,
											"end": 4939,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4902,
											"end": 4939,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4902,
											"end": 4939,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 4902,
											"end": 4939,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4902,
											"end": 4939,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 4902,
											"end": 4939,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4902,
											"end": 4939,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4902,
											"end": 4939,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4902,
											"end": 4939,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4902,
											"end": 4939,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4902,
											"end": 4939,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4902,
											"end": 4939,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4902,
											"end": 4939,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4967,
											"end": 4976,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 4950,
											"end": 4963,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 4950,
											"end": 4963,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4950,
											"end": 4976,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4950,
											"end": 4976,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4950,
											"end": 4976,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4950,
											"end": 4976,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 4950,
											"end": 4976,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4950,
											"end": 4976,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4950,
											"end": 4976,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 4950,
											"end": 4976,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4950,
											"end": 4976,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 4950,
											"end": 4976,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4950,
											"end": 4976,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4950,
											"end": 4976,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4950,
											"end": 4976,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4950,
											"end": 4976,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4950,
											"end": 4976,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4950,
											"end": 4976,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4950,
											"end": 4976,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 4999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4987,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5000,
											"end": 5010,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4987,
											"end": 5011,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4987,
											"end": 5011,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5011,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5011,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4987,
											"end": 5011,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5011,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5011,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5011,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4987,
											"end": 5011,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4987,
											"end": 5011,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4987,
											"end": 5013,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5013,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5013,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5013,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5013,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5013,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 4987,
											"end": 5013,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 4987,
											"end": 5013,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5013,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 4987,
											"end": 5013,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5013,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5013,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5013,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5013,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5013,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5043,
											"end": 5053,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5031,
											"end": 5065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5031,
											"end": 5065,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5031,
											"end": 5065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "D15C9547EA5C06670C0010CE19BC32D54682A4B3801ECE7F3AB0C3F17106B4BB"
										},
										{
											"begin": 5055,
											"end": 5064,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 5031,
											"end": 5065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5031,
											"end": 5065,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5031,
											"end": 5065,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 5031,
											"end": 5065,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5031,
											"end": 5065,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5031,
											"end": 5065,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 5031,
											"end": 5065,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5031,
											"end": 5065,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 5031,
											"end": 5065,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5031,
											"end": 5065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5031,
											"end": 5065,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5031,
											"end": 5065,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5031,
											"end": 5065,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5031,
											"end": 5065,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5031,
											"end": 5065,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5031,
											"end": 5065,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 4723,
											"end": 5073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 4706,
											"end": 4710,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4693,
											"end": 4705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4693,
											"end": 4711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 4735,
											"end": 4739,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4748,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4723,
											"end": 4749,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 972,
											"name": "tag",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 898,
											"end": 972,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 942,
											"end": 972,
											"name": "PUSH",
											"source": 12,
											"value": "2D95A8186DB49DA8BD2356C70CF02038F7DE0D6ED39F6766FE2D93D5E7785616"
										},
										{
											"begin": 898,
											"end": 972,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 898,
											"end": 972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "tag",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "tag",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6084,
											"end": 6091,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6111,
											"end": 6123,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6124,
											"end": 6128,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6104,
											"end": 6129,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6104,
											"end": 6129,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6137,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 730,
											"end": 876,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 730,
											"end": 876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 806,
											"end": 810,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 869,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 829,
											"end": 869,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 829,
											"end": 840,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 829,
											"end": 869,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 829,
											"end": 869,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 829,
											"end": 869,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 822,
											"end": 869,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 822,
											"end": 869,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 730,
											"end": 876,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 730,
											"end": 876,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 730,
											"end": 876,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 730,
											"end": 876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6394,
											"end": 6564,
											"name": "tag",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 6394,
											"end": 6564,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6490,
											"end": 6499,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6504,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6490,
											"end": 6504,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6512,
											"end": 6518,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 6490,
											"end": 6523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "PUSH",
											"source": 12,
											"value": "3F"
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "tag",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "tag",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6523,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6471,
											"end": 6523,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6471,
											"end": 6523,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6471,
											"end": 6523,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6539,
											"end": 6546,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6548,
											"end": 6556,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6548,
											"end": 6556,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6548,
											"end": 6556,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6460,
											"end": 6564,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6394,
											"end": 6564,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6394,
											"end": 6564,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6394,
											"end": 6564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 3252,
											"end": 3256,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 3258,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 3258,
											"end": 3270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3241,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6232,
											"end": 6236,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 6261,
											"end": 6265,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6267,
											"end": 6274,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6253,
											"end": 6275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6323,
											"end": 6327,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6291,
											"end": 6297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6311,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6312,
											"end": 6319,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 6373,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 6373,
											"end": 6385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6364,
											"end": 6371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6358,
											"end": 6362,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 6407,
											"end": 6411,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6449,
											"end": 6454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6155,
											"end": 6471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6790,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 6814,
											"end": 6818,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6820,
											"end": 6827,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6806,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6806,
											"end": 6828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6876,
											"end": 6881,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6850,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6851,
											"end": 6855,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6864,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6865,
											"end": 6872,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 6927,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 6927,
											"end": 6939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 6925,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6912,
											"end": 6916,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 1,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 6961,
											"end": 6965,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7003,
											"end": 7008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6996,
											"end": 7008,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6708,
											"end": 7025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 3504,
											"end": 3508,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3496,
											"end": 3518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3581,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3583,
											"end": 3587,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 1,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 3541,
											"end": 3588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "tag",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 1674,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "tag",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1664,
											"end": 1699,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1703,
											"end": 1715,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "tag",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "tag",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1775,
											"end": 1780,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1800,
											"end": 1820,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 1829,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "tag",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1729,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1933,
											"end": 1939,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1984,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1957,
											"end": 1980,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1953,
											"end": 1985,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 1988,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "tag",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "tag",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 2178,
											"end": 2185,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2167,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 2133,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "tag",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2079,
											"end": 2196,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1874,
											"end": 2203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "tag",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 2314,
											"end": 2319,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 2296,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "tag",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2291,
											"end": 2294,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2284,
											"end": 2321,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2209,
											"end": 2327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2426,
											"end": 2430,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2466,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2462,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2449,
											"end": 2467,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2441,
											"end": 2467,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2441,
											"end": 2467,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 2545,
											"end": 2546,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2543,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2547,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 2477,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "tag",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2333,
											"end": 2555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "tag",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2632,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2616,
											"end": 2632,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2616,
											"end": 2632,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2644,
											"end": 2766,
											"name": "tag",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 2644,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2717,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 2735,
											"end": 2740,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2717,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 2717,
											"end": 2741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2717,
											"end": 2741,
											"name": "tag",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 2717,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2710,
											"end": 2715,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2707,
											"end": 2742,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2697,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 2697,
											"end": 2760,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2756,
											"end": 2757,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2753,
											"end": 2754,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2758,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2697,
											"end": 2760,
											"name": "tag",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 2697,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2644,
											"end": 2766,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2644,
											"end": 2766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2772,
											"end": 2911,
											"name": "tag",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 2772,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2818,
											"end": 2823,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2862,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2843,
											"end": 2863,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2872,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 2899,
											"end": 2904,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2872,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 2872,
											"end": 2905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2872,
											"end": 2905,
											"name": "tag",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 2872,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2772,
											"end": 2911,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2772,
											"end": 2911,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2772,
											"end": 2911,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2772,
											"end": 2911,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2772,
											"end": 2911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2917,
											"end": 3246,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 2917,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2976,
											"end": 2982,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3027,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3013,
											"end": 3022,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3004,
											"end": 3011,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3000,
											"end": 3023,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2996,
											"end": 3028,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2993,
											"end": 3112,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2993,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 2993,
											"end": 3112,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3031,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 3031,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 3031,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3031,
											"end": 3110,
											"name": "tag",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 3031,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2993,
											"end": 3112,
											"name": "tag",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 2993,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3151,
											"end": 3152,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3176,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3212,
											"end": 3218,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3201,
											"end": 3210,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3197,
											"end": 3219,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3176,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 3176,
											"end": 3229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3176,
											"end": 3229,
											"name": "tag",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 3176,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3166,
											"end": 3229,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3166,
											"end": 3229,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3122,
											"end": 3239,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2917,
											"end": 3246,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2917,
											"end": 3246,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2917,
											"end": 3246,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2917,
											"end": 3246,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2917,
											"end": 3246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3252,
											"end": 3378,
											"name": "tag",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 3252,
											"end": 3378,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3289,
											"end": 3296,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3371,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3322,
											"end": 3327,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3318,
											"end": 3372,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3307,
											"end": 3372,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3307,
											"end": 3372,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3252,
											"end": 3378,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3252,
											"end": 3378,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3252,
											"end": 3378,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3252,
											"end": 3378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3384,
											"end": 3480,
											"name": "tag",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 3384,
											"end": 3480,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3421,
											"end": 3428,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3450,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 3468,
											"end": 3473,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3450,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 3450,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3450,
											"end": 3474,
											"name": "tag",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 3450,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3439,
											"end": 3474,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3439,
											"end": 3474,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3384,
											"end": 3480,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3384,
											"end": 3480,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3384,
											"end": 3480,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3384,
											"end": 3480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3486,
											"end": 3608,
											"name": "tag",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 3486,
											"end": 3608,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3559,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 3577,
											"end": 3582,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3559,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 3559,
											"end": 3583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3559,
											"end": 3583,
											"name": "tag",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 3559,
											"end": 3583,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3552,
											"end": 3557,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3549,
											"end": 3584,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3539,
											"end": 3602,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 3539,
											"end": 3602,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3598,
											"end": 3599,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3595,
											"end": 3596,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3588,
											"end": 3600,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3539,
											"end": 3602,
											"name": "tag",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 3539,
											"end": 3602,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3486,
											"end": 3608,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3486,
											"end": 3608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3614,
											"end": 3753,
											"name": "tag",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 3614,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3698,
											"end": 3704,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3685,
											"end": 3705,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3676,
											"end": 3705,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3676,
											"end": 3705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 3741,
											"end": 3746,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 3714,
											"end": 3747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 3747,
											"name": "tag",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 3714,
											"end": 3747,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3614,
											"end": 3753,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3614,
											"end": 3753,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3614,
											"end": 3753,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3614,
											"end": 3753,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3614,
											"end": 3753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3759,
											"end": 4233,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 3759,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3827,
											"end": 3833,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3835,
											"end": 3841,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3884,
											"end": 3886,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3872,
											"end": 3881,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3863,
											"end": 3870,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3859,
											"end": 3882,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3855,
											"end": 3887,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3852,
											"end": 3971,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3852,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 3852,
											"end": 3971,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3890,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 3890,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 3890,
											"end": 3969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3890,
											"end": 3969,
											"name": "tag",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 3890,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3852,
											"end": 3971,
											"name": "tag",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 3852,
											"end": 3971,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4010,
											"end": 4011,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4035,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 4080,
											"end": 4087,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4071,
											"end": 4077,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4060,
											"end": 4069,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4056,
											"end": 4078,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4035,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 4035,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4035,
											"end": 4088,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 4035,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4025,
											"end": 4088,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4025,
											"end": 4088,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3981,
											"end": 4098,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4137,
											"end": 4139,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 4208,
											"end": 4215,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4199,
											"end": 4205,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4188,
											"end": 4197,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4184,
											"end": 4206,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 4163,
											"end": 4216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "tag",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4153,
											"end": 4216,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4153,
											"end": 4216,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4108,
											"end": 4226,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3759,
											"end": 4233,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3759,
											"end": 4233,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3759,
											"end": 4233,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3759,
											"end": 4233,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3759,
											"end": 4233,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3759,
											"end": 4233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4239,
											"end": 4357,
											"name": "tag",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 4239,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4326,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 4344,
											"end": 4349,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4326,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 4326,
											"end": 4350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4326,
											"end": 4350,
											"name": "tag",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 4326,
											"end": 4350,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4321,
											"end": 4324,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4314,
											"end": 4351,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4239,
											"end": 4357,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4239,
											"end": 4357,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4239,
											"end": 4357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4363,
											"end": 4585,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 4363,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4460,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4494,
											"end": 4496,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4483,
											"end": 4492,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4479,
											"end": 4497,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4471,
											"end": 4497,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4471,
											"end": 4497,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 4575,
											"end": 4576,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4564,
											"end": 4573,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4560,
											"end": 4577,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4551,
											"end": 4557,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 4507,
											"end": 4578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4578,
											"name": "tag",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 4507,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4363,
											"end": 4585,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4363,
											"end": 4585,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4363,
											"end": 4585,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4363,
											"end": 4585,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4363,
											"end": 4585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4591,
											"end": 4920,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 4591,
											"end": 4920,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4650,
											"end": 4656,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4699,
											"end": 4701,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4687,
											"end": 4696,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4678,
											"end": 4685,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4674,
											"end": 4697,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4670,
											"end": 4702,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4667,
											"end": 4786,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4667,
											"end": 4786,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 4667,
											"end": 4786,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4705,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 4705,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 4705,
											"end": 4784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4705,
											"end": 4784,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 4705,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4667,
											"end": 4786,
											"name": "tag",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 4667,
											"end": 4786,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4825,
											"end": 4826,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4850,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 4895,
											"end": 4902,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4886,
											"end": 4892,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4875,
											"end": 4884,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4871,
											"end": 4893,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 4850,
											"end": 4903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4903,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 4850,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4840,
											"end": 4903,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4840,
											"end": 4903,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4796,
											"end": 4913,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4591,
											"end": 4920,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4591,
											"end": 4920,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4591,
											"end": 4920,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4591,
											"end": 4920,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4591,
											"end": 4920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4926,
											"end": 5106,
											"name": "tag",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 4926,
											"end": 5106,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4974,
											"end": 5051,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4971,
											"end": 4972,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4964,
											"end": 5052,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5071,
											"end": 5075,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 5068,
											"end": 5069,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5061,
											"end": 5076,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5095,
											"end": 5099,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5092,
											"end": 5093,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5085,
											"end": 5100,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5345,
											"name": "tag",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 5112,
											"end": 5345,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5151,
											"end": 5154,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5174,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 5192,
											"end": 5197,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5174,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 5174,
											"end": 5198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5174,
											"end": 5198,
											"name": "tag",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 5174,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5165,
											"end": 5198,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5165,
											"end": 5198,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5220,
											"end": 5286,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5210,
											"end": 5287,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5207,
											"end": 5310,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 5207,
											"end": 5310,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5290,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 5290,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 5290,
											"end": 5308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5290,
											"end": 5308,
											"name": "tag",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 5290,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5207,
											"end": 5310,
											"name": "tag",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 5207,
											"end": 5310,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5337,
											"end": 5338,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5330,
											"end": 5335,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5326,
											"end": 5339,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5319,
											"end": 5339,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5319,
											"end": 5339,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5345,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5345,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5345,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5351,
											"end": 5542,
											"name": "tag",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 5351,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5391,
											"end": 5394,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 5428,
											"end": 5429,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 5410,
											"end": 5430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "tag",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5405,
											"end": 5430,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5405,
											"end": 5430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5444,
											"end": 5464,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 5462,
											"end": 5463,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5444,
											"end": 5464,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 5444,
											"end": 5464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5444,
											"end": 5464,
											"name": "tag",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 5444,
											"end": 5464,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5439,
											"end": 5464,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5439,
											"end": 5464,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5487,
											"end": 5488,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5484,
											"end": 5485,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5480,
											"end": 5489,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5473,
											"end": 5489,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5473,
											"end": 5489,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5508,
											"end": 5511,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5505,
											"end": 5506,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5502,
											"end": 5512,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5499,
											"end": 5535,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5499,
											"end": 5535,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 5499,
											"end": 5535,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5515,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 5515,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 5515,
											"end": 5533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5515,
											"end": 5533,
											"name": "tag",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 5515,
											"end": 5533,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5499,
											"end": 5535,
											"name": "tag",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 5499,
											"end": 5535,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5351,
											"end": 5542,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5351,
											"end": 5542,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5351,
											"end": 5542,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5351,
											"end": 5542,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5351,
											"end": 5542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5548,
											"end": 5695,
											"name": "tag",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 5548,
											"end": 5695,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5660,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5686,
											"end": 5689,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5671,
											"end": 5689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5671,
											"end": 5689,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5548,
											"end": 5695,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5548,
											"end": 5695,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5548,
											"end": 5695,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5548,
											"end": 5695,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5548,
											"end": 5695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5701,
											"end": 5815,
											"name": "tag",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 5701,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5701,
											"end": 5815,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5701,
											"end": 5815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 6219,
											"name": "tag",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 5821,
											"end": 6219,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5980,
											"end": 5983,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6001,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 6082,
											"end": 6083,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6077,
											"end": 6080,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6001,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 6001,
											"end": 6084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6001,
											"end": 6084,
											"name": "tag",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 6001,
											"end": 6084,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6084,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6084,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6093,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 6182,
											"end": 6185,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6093,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 6093,
											"end": 6186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6093,
											"end": 6186,
											"name": "tag",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 6093,
											"end": 6186,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6211,
											"end": 6212,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6206,
											"end": 6209,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6202,
											"end": 6213,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6195,
											"end": 6213,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6195,
											"end": 6213,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 6219,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 6219,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 6219,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 6219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6604,
											"name": "tag",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 6225,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6409,
											"end": 6412,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6431,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 6574,
											"end": 6577,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6431,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 6431,
											"end": 6578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6431,
											"end": 6578,
											"name": "tag",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 6431,
											"end": 6578,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6424,
											"end": 6578,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6424,
											"end": 6578,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6595,
											"end": 6598,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6588,
											"end": 6598,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6588,
											"end": 6598,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6604,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6604,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6604,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6610,
											"end": 6728,
											"name": "tag",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 6610,
											"end": 6728,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6697,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 6715,
											"end": 6720,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6697,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 6697,
											"end": 6721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6697,
											"end": 6721,
											"name": "tag",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 6697,
											"end": 6721,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6692,
											"end": 6695,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6685,
											"end": 6722,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6610,
											"end": 6728,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6610,
											"end": 6728,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6610,
											"end": 6728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6734,
											"end": 7066,
											"name": "tag",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 6734,
											"end": 7066,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6855,
											"end": 6859,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6893,
											"end": 6895,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6882,
											"end": 6891,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6878,
											"end": 6896,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6870,
											"end": 6896,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6870,
											"end": 6896,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6906,
											"end": 6977,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 6974,
											"end": 6975,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6963,
											"end": 6972,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6959,
											"end": 6976,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6950,
											"end": 6956,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6906,
											"end": 6977,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 6906,
											"end": 6977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6906,
											"end": 6977,
											"name": "tag",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 6906,
											"end": 6977,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6987,
											"end": 7059,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 7055,
											"end": 7057,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7044,
											"end": 7053,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7040,
											"end": 7058,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7031,
											"end": 7037,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6987,
											"end": 7059,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 6987,
											"end": 7059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6987,
											"end": 7059,
											"name": "tag",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 6987,
											"end": 7059,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6734,
											"end": 7066,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6734,
											"end": 7066,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6734,
											"end": 7066,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6734,
											"end": 7066,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6734,
											"end": 7066,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6734,
											"end": 7066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/KipuBankV2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BANK_MANAGER_ROLE()": "f2157052",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"deposit()": "d0e30db0",
							"depositCount(address)": "f4443d9a",
							"getBalance(address)": "f8b2cb4f",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"maxWithdrawal()": "8c0ff5b7",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalBankCapacity()": "c16ec037",
							"totalDeposits()": "7d882097",
							"withdraw(uint256)": "2e1a7d4d",
							"withdrawalCount(address)": "b3d8bcdc"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxWithdrawal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalCapacity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DirectTransferNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBankCapacity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxDepositExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxWithdrawalExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaximumWithdrawalInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroDepositNotAllowed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawalMade\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BANK_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"depositCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxWithdrawal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBankCapacity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"withdrawalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"DepositMade(address,uint256)\":{\"params\":{\"amount\":\"Amount of ETH deposited.\",\"user\":\"is the user's address \"}},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"WithdrawalMade(address,uint256)\":{\"params\":{\"amount\":\"Amount of ETH withdrawn.\",\"user\":\"the user's address \"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_maxWithdrawal\":\"Maximum withdrawal limit per transaction.\",\"_totalCapacity\":\"Total ETH capacity of the bank.\"}},\"deposit()\":{\"details\":\"Check global limit and record deposit.\"},\"getBalance(address)\":{\"params\":{\"user\":\"Address of the user to query.\"},\"returns\":{\"_0\":\"The ETH balance of the user in the vault.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"withdraw(uint256)\":{\"params\":{\"amount\":\"The amount of ETH to withdraw and uses secure transfers and custom errors.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"DirectTransferNotAllowed()\":[{\"notice\":\"Thrown if you try to send ETH directly to the contract.\"}],\"InsufficientBalance()\":[{\"notice\":\"When a user tries to withdraw more than their balance\"}],\"InvalidBankCapacity()\":[{\"notice\":\"Thrown if the bank capacity in the constructor is invalid.\"}],\"MaxDepositExceeded()\":[{\"notice\":\"It is launched when a deposit exceeds the global banking capacity.\"}],\"MaxWithdrawalExceeded()\":[{\"notice\":\"When a withdrawal exceeds the transaction limit.\"}],\"MaximumWithdrawalInvalid()\":[{\"notice\":\"Thrown if the maxRetiro value in the constructor is invalid.\"}],\"ZeroDepositNotAllowed()\":[{\"notice\":\"When trying to deposit 0 ETH.\"}]},\"events\":{\"DepositMade(address,uint256)\":{\"notice\":\"It is issued when the user makes a successful deposit.\"},\"WithdrawalMade(address,uint256)\":{\"notice\":\"It is issued when the user makes a successful withdrawal.\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Initializes the contract with the specified limits.\"},\"deposit()\":{\"notice\":\"Deposits ETH into the user's personal vault.\"},\"depositCount(address)\":{\"notice\":\"Number of deposits made by each user.\"},\"getBalance(address)\":{\"notice\":\"Returns the current vault balance of a given user.\"},\"maxWithdrawal()\":{\"notice\":\"M\\u00e1ximo permitido por transacci\\u00f3n de retiro.\"},\"totalBankCapacity()\":{\"notice\":\"Capacidad total del banco en ETH.\"},\"totalDeposits()\":{\"notice\":\"Total actual de todos los dep\\u00f3sitos en el contrato.\"},\"withdraw(uint256)\":{\"notice\":\"Withdraws a specified amount of ETH from the user's vault.\"},\"withdrawalCount(address)\":{\"notice\":\"Number of withdrawals made by each user.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/KipuBankV2.sol\":\"KipuBank\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"src/KipuBankV2.sol\":{\"keccak256\":\"0xdd87a27254fc403635cff2a7e83cd3454728669632e150a13fc65612a5a739fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ae24d15d9fa9438a638137c6cdfb12a9c3e77fb802e7f884801f8bbf270434\",\"dweb:/ipfs/QmXonjxxAYSjHoGfXnEXmciz79BPqHcbPwfwWA8HRxQz4h\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 73,
								"contract": "src/KipuBankV2.sol:KipuBank",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)68_storage)"
							},
							{
								"astId": 526,
								"contract": "src/KipuBankV2.sol:KipuBank",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1217,
								"contract": "src/KipuBankV2.sol:KipuBank",
								"label": "totalDeposits",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1222,
								"contract": "src/KipuBankV2.sol:KipuBank",
								"label": "vaultBalance",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1227,
								"contract": "src/KipuBankV2.sol:KipuBank",
								"label": "depositCount",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1232,
								"contract": "src/KipuBankV2.sol:KipuBank",
								"label": "withdrawalCount",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)68_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)68_storage"
							},
							"t_struct(RoleData)68_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 65,
										"contract": "src/KipuBankV2.sol:KipuBank",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 67,
										"contract": "src/KipuBankV2.sol:KipuBank",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"DirectTransferNotAllowed()": [
								{
									"notice": "Thrown if you try to send ETH directly to the contract."
								}
							],
							"InsufficientBalance()": [
								{
									"notice": "When a user tries to withdraw more than their balance"
								}
							],
							"InvalidBankCapacity()": [
								{
									"notice": "Thrown if the bank capacity in the constructor is invalid."
								}
							],
							"MaxDepositExceeded()": [
								{
									"notice": "It is launched when a deposit exceeds the global banking capacity."
								}
							],
							"MaxWithdrawalExceeded()": [
								{
									"notice": "When a withdrawal exceeds the transaction limit."
								}
							],
							"MaximumWithdrawalInvalid()": [
								{
									"notice": "Thrown if the maxRetiro value in the constructor is invalid."
								}
							],
							"ZeroDepositNotAllowed()": [
								{
									"notice": "When trying to deposit 0 ETH."
								}
							]
						},
						"events": {
							"DepositMade(address,uint256)": {
								"notice": "It is issued when the user makes a successful deposit."
							},
							"WithdrawalMade(address,uint256)": {
								"notice": "It is issued when the user makes a successful withdrawal."
							}
						},
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "Initializes the contract with the specified limits."
							},
							"deposit()": {
								"notice": "Deposits ETH into the user's personal vault."
							},
							"depositCount(address)": {
								"notice": "Number of deposits made by each user."
							},
							"getBalance(address)": {
								"notice": "Returns the current vault balance of a given user."
							},
							"maxWithdrawal()": {
								"notice": "Máximo permitido por transacción de retiro."
							},
							"totalBankCapacity()": {
								"notice": "Capacidad total del banco en ETH."
							},
							"totalDeposits()": {
								"notice": "Total actual de todos los depósitos en el contrato."
							},
							"withdraw(uint256)": {
								"notice": "Withdraws a specified amount of ETH from the user's vault."
							},
							"withdrawalCount(address)": {
								"notice": "Number of withdrawals made by each user."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "67:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "102:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "136:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "136:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:7:0"
									},
									"scope": 45,
									"src": "93:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "156:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "193:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "193:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:15:0"
									},
									"scope": 45,
									"src": "147:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "254:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:0"
									},
									"scope": 45,
									"src": "212:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "276:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "301:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "294:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "294:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:25:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "344:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "337:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "360:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "353:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "353:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "376:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "368:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "395:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "387:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "413:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "406:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:93:0"
									},
									"scope": 45,
									"src": "267:163:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "443:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "458:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "503:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "496:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "496:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "519:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "512:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "512:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "535:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "527:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "554:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "546:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "572:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "565:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:93:0"
									},
									"scope": 45,
									"src": "434:155:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "57:534:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:560:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							342
						],
						"Context": [
							1152
						],
						"ERC165": [
							1176
						],
						"IAccessControl": [
							425
						],
						"IERC165": [
							1188
						]
					},
					"id": 343,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 49,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 343,
							"sourceUnit": 426,
							"src": "134:52:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 48,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 425,
										"src": "142:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 51,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 343,
							"sourceUnit": 1153,
							"src": "187:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 50,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1152,
										"src": "195:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 54,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 343,
							"sourceUnit": 1177,
							"src": "233:66:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 52,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1188,
										"src": "241:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 53,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1176,
										"src": "250:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 56,
										"name": "Context",
										"nameLocations": [
											"1997:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1152,
										"src": "1997:7:1"
									},
									"id": 57,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:7:1"
								},
								{
									"baseName": {
										"id": 58,
										"name": "IAccessControl",
										"nameLocations": [
											"2006:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 425,
										"src": "2006:14:1"
									},
									"id": 59,
									"nodeType": "InheritanceSpecifier",
									"src": "2006:14:1"
								},
								{
									"baseName": {
										"id": 60,
										"name": "ERC165",
										"nameLocations": [
											"2022:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1176,
										"src": "2022:6:1"
									},
									"id": 61,
									"nodeType": "InheritanceSpecifier",
									"src": "2022:6:1"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 55,
								"nodeType": "StructuredDocumentation",
								"src": "301:1660:1",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 342,
							"linearizedBaseContracts": [
								342,
								1176,
								1188,
								425,
								1152
							],
							"name": "AccessControl",
							"nameLocation": "1980:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 68,
									"members": [
										{
											"constant": false,
											"id": 65,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2094:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 68,
											"src": "2061:40:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 64,
												"keyName": "account",
												"keyNameLocation": "2077:7:1",
												"keyType": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2061:32:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 63,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2088:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 67,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2119:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 68,
											"src": "2111:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 66,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2111:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2042:8:1",
									"nodeType": "StructDefinition",
									"scope": 342,
									"src": "2035:100:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 73,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2183:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 342,
									"src": "2141:48:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$68_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 72,
										"keyName": "role",
										"keyNameLocation": "2157:4:1",
										"keyType": {
											"id": 69,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2149:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2141:33:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$68_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 71,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 70,
												"name": "RoleData",
												"nameLocations": [
													"2165:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 68,
												"src": "2165:8:1"
											},
											"referencedDeclaration": 68,
											"src": "2165:8:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$68_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 76,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2220:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 342,
									"src": "2196:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 74,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2196:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 75,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2241:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "2463:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 82,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "2484:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 81,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															140,
															161
														],
														"referencedDeclaration": 140,
														"src": "2473:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2473:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "2473:16:1"
											},
											{
												"id": 85,
												"nodeType": "PlaceholderStatement",
												"src": "2499:1:1"
											}
										]
									},
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "2252:174:1",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 87,
									"name": "onlyRole",
									"nameLocation": "2440:8:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2457:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2449:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 78,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:14:1"
									},
									"src": "2431:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1175
									],
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "2632:111:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 96,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2649:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 98,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 425,
																		"src": "2669:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$425_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$425_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 97,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2664:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2664:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$425",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2685:11:1",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2664:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2649:47:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 104,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "2724:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 102,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2700:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$342_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2706:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1175,
															"src": "2700:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2700:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2649:87:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 95,
												"id": 107,
												"nodeType": "Return",
												"src": "2642:94:1"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "2513:23:1",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2550:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 92,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2608:8:1"
									},
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2575:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "2568:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 89,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2567:20:1"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "2626:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 93,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2626:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2625:6:1"
									},
									"scope": 342,
									"src": "2541:202:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										392
									],
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "2913:53:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 119,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 73,
																"src": "2930:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$68_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 121,
															"indexExpression": {
																"id": 120,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 112,
																"src": "2937:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2930:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$68_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 122,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2943:7:1",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 65,
														"src": "2930:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 124,
													"indexExpression": {
														"id": 123,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "2951:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2930:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 118,
												"id": 125,
												"nodeType": "Return",
												"src": "2923:36:1"
											}
										]
									},
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "2749:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2839:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2855:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "2847:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 111,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2847:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2869:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "2861:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2861:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2846:31:1"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "2907:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 116,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2907:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2906:6:1"
									},
									"scope": 342,
									"src": "2830:136:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "3231:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 134,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "3252:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 135,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1134,
																"src": "3258:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3258:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 133,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															140,
															161
														],
														"referencedDeclaration": 161,
														"src": "3241:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "3241:30:1"
											}
										]
									},
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "2972:198:1",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3184:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3203:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "3195:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 129,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3195:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3194:14:1"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:1"
									},
									"scope": 342,
									"src": "3175:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "3481:124:1",
										"statements": [
											{
												"condition": {
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3495:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 149,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "3504:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 150,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "3510:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 148,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 127,
															"src": "3496:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3496:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 159,
												"nodeType": "IfStatement",
												"src": "3491:108:1",
												"trueBody": {
													"id": 158,
													"nodeType": "Block",
													"src": "3520:79:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 154,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 145,
																		"src": "3574:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 155,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 143,
																		"src": "3583:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 153,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "3541:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3541:47:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 157,
															"nodeType": "RevertStatement",
															"src": "3534:54:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "3284:119:1",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3417:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3436:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "3428:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 142,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3428:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3450:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "3442:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3442:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3427:31:1"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3481:0:1"
									},
									"scope": 342,
									"src": "3408:197:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										400
									],
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "3860:46:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 169,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "3877:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$68_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 171,
														"indexExpression": {
															"id": 170,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "3884:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3877:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$68_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3890:9:1",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 67,
													"src": "3877:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 168,
												"id": 173,
												"nodeType": "Return",
												"src": "3870:29:1"
											}
										]
									},
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "3611:170:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3795:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3816:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "3808:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 163,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3808:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:14:1"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "3851:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 166,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:9:1"
									},
									"scope": 342,
									"src": "3786:120:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										408
									],
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "4296:42:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 189,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "4317:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 190,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "4323:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 188,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "4306:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4306:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "4306:25:1"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "3912:285:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 194,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "4289:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 183,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "4276:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 186,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 182,
												"name": "onlyRole",
												"nameLocations": [
													"4267:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 87,
												"src": "4267:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4267:28:1"
										}
									],
									"name": "grantRole",
									"nameLocation": "4211:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4229:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "4221:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 177,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4221:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4243:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "4235:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4235:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4220:31:1"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4296:0:1"
									},
									"scope": 342,
									"src": "4202:136:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										416
									],
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "4713:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 208,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "4735:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 209,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "4741:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 207,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "4723:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4723:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "4723:26:1"
											}
										]
									},
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "4344:269:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 203,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 202,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "4693:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4693:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 205,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 201,
												"name": "onlyRole",
												"nameLocations": [
													"4684:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 87,
												"src": "4684:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4684:28:1"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4627:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4646:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "4638:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 196,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4638:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "4652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4637:31:1"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4713:0:1"
									},
									"scope": 342,
									"src": "4618:138:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										424
									],
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "5383:166:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 221,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "5397:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 222,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "5419:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5419:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5397:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 229,
												"nodeType": "IfStatement",
												"src": "5393:102:1",
												"trueBody": {
													"id": 228,
													"nodeType": "Block",
													"src": "5433:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 225,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "5454:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5454:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 227,
															"nodeType": "RevertStatement",
															"src": "5447:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 231,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "5517:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 232,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "5523:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 230,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "5505:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5505:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 234,
												"nodeType": "ExpressionStatement",
												"src": "5505:37:1"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "4762:537:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5313:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5334:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "5326:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 215,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5348:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "5340:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5340:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5325:42:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5383:0:1"
									},
									"scope": 342,
									"src": "5304:245:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "5747:174:1",
										"statements": [
											{
												"assignments": [
													245
												],
												"declarations": [
													{
														"constant": false,
														"id": 245,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5765:17:1",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "5757:25:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 244,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5757:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 249,
												"initialValue": {
													"arguments": [
														{
															"id": 247,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "5798:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 246,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "5785:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5785:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5757:46:1"
											},
											{
												"expression": {
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 250,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 73,
																"src": "5813:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$68_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 252,
															"indexExpression": {
																"id": 251,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 239,
																"src": "5820:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5813:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$68_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5826:9:1",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 67,
														"src": "5813:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 254,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "5838:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5813:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "5813:34:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 258,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "5879:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 259,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "5885:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 260,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "5904:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 257,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "5862:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5862:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 262,
												"nodeType": "EmitStatement",
												"src": "5857:57:1"
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "5555:114:1",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5683:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5705:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "5697:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 238,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5697:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5719:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "5711:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 240,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5711:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5696:33:1"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5747:0:1"
									},
									"scope": 342,
									"src": "5674:247:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "6238:233:1",
										"statements": [
											{
												"condition": {
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6252:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 275,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "6261:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 276,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "6267:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 274,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 127,
															"src": "6253:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6253:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 300,
													"nodeType": "Block",
													"src": "6428:37:1",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6449:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 273,
															"id": 299,
															"nodeType": "Return",
															"src": "6442:12:1"
														}
													]
												},
												"id": 301,
												"nodeType": "IfStatement",
												"src": "6248:217:1",
												"trueBody": {
													"id": 297,
													"nodeType": "Block",
													"src": "6277:145:1",
													"statements": [
														{
															"expression": {
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 279,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 73,
																				"src": "6291:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$68_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 281,
																			"indexExpression": {
																				"id": 280,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 267,
																				"src": "6298:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6291:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$68_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 282,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6304:7:1",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 65,
																		"src": "6291:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 284,
																	"indexExpression": {
																		"id": 283,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 269,
																		"src": "6312:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6291:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6323:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6291:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 287,
															"nodeType": "ExpressionStatement",
															"src": "6291:36:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 289,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 267,
																		"src": "6358:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 290,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 269,
																		"src": "6364:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 291,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1134,
																			"src": "6373:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 292,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6373:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 288,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "6346:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6346:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 294,
															"nodeType": "EmitStatement",
															"src": "6341:45:1"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6407:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 273,
															"id": 296,
															"nodeType": "Return",
															"src": "6400:11:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "5927:223:1",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6164:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6183:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "6175:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 266,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6175:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6197:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "6189:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6189:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6174:31:1"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "6232:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 271,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6232:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6231:6:1"
									},
									"scope": 342,
									"src": "6155:316:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "6792:233:1",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 314,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "6814:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 315,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "6820:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 313,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "6806:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6806:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 338,
													"nodeType": "Block",
													"src": "6982:37:1",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7003:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 312,
															"id": 337,
															"nodeType": "Return",
															"src": "6996:12:1"
														}
													]
												},
												"id": 339,
												"nodeType": "IfStatement",
												"src": "6802:217:1",
												"trueBody": {
													"id": 335,
													"nodeType": "Block",
													"src": "6830:146:1",
													"statements": [
														{
															"expression": {
																"id": 324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 317,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 73,
																				"src": "6844:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$68_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 319,
																			"indexExpression": {
																				"id": 318,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 306,
																				"src": "6851:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6844:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$68_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 320,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6857:7:1",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 65,
																		"src": "6844:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 322,
																	"indexExpression": {
																		"id": 321,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 308,
																		"src": "6865:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6844:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6876:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6844:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 325,
															"nodeType": "ExpressionStatement",
															"src": "6844:37:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 327,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 306,
																		"src": "6912:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 328,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 308,
																		"src": "6918:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 329,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1134,
																			"src": "6927:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6927:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 326,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 382,
																	"src": "6900:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6900:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 332,
															"nodeType": "EmitStatement",
															"src": "6895:45:1"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6961:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 312,
															"id": 334,
															"nodeType": "Return",
															"src": "6954:11:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "6477:226:1",
										"text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6717:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6737:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "6729:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 305,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6729:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6751:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "6743:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6743:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6728:31:1"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "6786:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 310,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6786:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6785:6:1"
									},
									"scope": 342,
									"src": "6708:317:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 343,
							"src": "1962:5065:1",
							"usedErrors": [
								352,
								355
							],
							"usedEvents": [
								364,
								373,
								382
							]
						}
					],
					"src": "108:6920:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							425
						]
					},
					"id": 426,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 344,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 345,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:2",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 425,
							"linearizedBaseContracts": [
								425
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:2",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 352,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "357:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "374:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 349,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:2"
									},
									"src": "318:76:2"
								},
								{
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:2",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 355,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:2"
									},
									"src": "553:37:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:2",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 364,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "878:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 357,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "900:33:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 359,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "935:28:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 361,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:2"
									},
									"src": "855:110:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:2",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 373,
									"name": "RoleGranted",
									"nameLocation": "1277:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "1289:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 366,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "1311:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "1336:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:2"
									},
									"src": "1271:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:2",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 382,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1664:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 375,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1686:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1711:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:2"
									},
									"src": "1646:89:2"
								},
								{
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:2",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 392,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "1839:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 384,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "1853:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:2"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "1893:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 389,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:2"
									},
									"scope": 425,
									"src": "1822:77:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:2",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "2116:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 394,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:2"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "2153:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 397,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:2"
									},
									"scope": 425,
									"src": "2094:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:2",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 408,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "2431:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 402,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "2445:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:2"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:2"
									},
									"scope": 425,
									"src": "2412:59:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:2",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 416,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "2725:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 410,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "2739:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:2"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:2"
									},
									"scope": 425,
									"src": "2705:60:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:2",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 424,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "3289:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 418,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "3303:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:2"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:2"
									},
									"scope": 425,
									"src": "3267:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 426,
							"src": "226:3116:2",
							"usedErrors": [
								352,
								355
							],
							"usedEvents": [
								364,
								373,
								382
							]
						}
					],
					"src": "109:3234:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							507
						],
						"IERC165": [
							1188
						],
						"IERC20": [
							658
						]
					},
					"id": 508,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 427,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 429,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 508,
							"sourceUnit": 516,
							"src": "133:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 428,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 658,
										"src": "141:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 431,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 508,
							"sourceUnit": 512,
							"src": "170:38:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 430,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1188,
										"src": "178:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 433,
										"name": "IERC20",
										"nameLocations": [
											"590:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 658,
										"src": "590:6:3"
									},
									"id": 434,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:3"
								},
								{
									"baseName": {
										"id": 435,
										"name": "IERC165",
										"nameLocations": [
											"598:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1188,
										"src": "598:7:3"
									},
									"id": 436,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:3"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 432,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:3",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 507,
							"linearizedBaseContracts": [
								507,
								1188,
								658
							],
							"name": "IERC1363",
							"nameLocation": "578:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 437,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 446,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1548:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1560:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:3"
									},
									"returnParameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1593:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 443,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:3"
									},
									"scope": 507,
									"src": "1523:76:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 458,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2088:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2100:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2115:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 452,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:3"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2154:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 455,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:3"
									},
									"scope": 507,
									"src": "2063:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 470,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "2653:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "2667:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "2679:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:3"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "2712:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 467,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:3"
									},
									"scope": 507,
									"src": "2624:94:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 484,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3294:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3308:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3320:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3335:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 478,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:3"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3374:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 481,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:3"
									},
									"scope": 507,
									"src": "3265:115:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 494,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "3805:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "3822:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:3"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "3855:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 491,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:3"
									},
									"scope": 507,
									"src": "3781:80:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 506,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "4374:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "4391:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "4406:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 500,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:3"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "4445:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 503,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:3"
									},
									"scope": 507,
									"src": "4350:101:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 508,
							"src": "568:3885:3",
							"usedErrors": [],
							"usedEvents": [
								592,
								601
							]
						}
					],
					"src": "107:4347:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1188
						]
					},
					"id": 512,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 509,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 511,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 512,
							"sourceUnit": 1189,
							"src": "133:59:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 510,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1188,
										"src": "141:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							658
						]
					},
					"id": 516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 513,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 515,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 516,
							"sourceUnit": 659,
							"src": "132:49:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 514,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 658,
										"src": "140:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							580
						]
					},
					"id": 581,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 517,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 518,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:6",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 580,
							"linearizedBaseContracts": [
								580
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 521,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 580,
									"src": "1676:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 519,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 520,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 524,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 580,
									"src": "1723:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 522,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 523,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 526,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 580,
									"src": "1767:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 525,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "1811:39:6",
										"statements": [
											{
												"expression": {
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 529,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "1821:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 530,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "1831:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 532,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:6"
											}
										]
									},
									"id": 534,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:6"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:6"
									},
									"scope": 580,
									"src": "1797:53:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "2251:79:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 537,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "2261:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:6"
											},
											{
												"id": 540,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 541,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "2303:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:6"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:6",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 545,
									"name": "nonReentrant",
									"nameLocation": "2236:12:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:6"
									},
									"src": "2227:103:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "2375:248:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 549,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "2468:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 550,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "2479:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 548,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:6"
											},
											{
												"expression": {
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 555,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "2598:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 556,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "2608:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 558,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:6"
											}
										]
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:6"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:6"
									},
									"scope": 580,
									"src": "2336:287:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "2667:171:6",
										"statements": [
											{
												"expression": {
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 563,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "2809:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 564,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "2819:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:6"
											}
										]
									},
									"id": 568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:6"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:6"
									},
									"scope": 580,
									"src": "2629:209:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "3081:43:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 574,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "3098:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 575,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "3109:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 573,
												"id": 577,
												"nodeType": "Return",
												"src": "3091:26:6"
											}
										]
									},
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:6",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:6"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "3075:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 571,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:6"
									},
									"scope": 580,
									"src": "3017:107:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 581,
							"src": "888:2238:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							658
						]
					},
					"id": 659,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 582,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 583,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:7",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 658,
							"linearizedBaseContracts": [
								658
							],
							"name": "IERC20",
							"nameLocation": "215:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:7",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 592,
									"name": "Transfer",
									"nameLocation": "397:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "406:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "428:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "448:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:7"
									},
									"src": "391:72:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 593,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:7",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 601,
									"name": "Approval",
									"nameLocation": "628:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "637:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "660:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "685:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:7"
									},
									"src": "622:78:7"
								},
								{
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:7",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 607,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:7"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "822:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:7"
									},
									"scope": 658,
									"src": "776:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:7",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 615,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "932:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:7"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "972:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:7"
									},
									"scope": 658,
									"src": "913:68:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:7",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 625,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "1223:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "1235:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:7"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "1268:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 622,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:7"
									},
									"scope": 658,
									"src": "1205:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:7",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 635,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1568:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1583:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:7"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1623:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:7"
									},
									"scope": 658,
									"src": "1549:83:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:7",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 645,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "2327:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "2344:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:7"
									},
									"returnParameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "2377:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 642,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:7"
									},
									"scope": 658,
									"src": "2310:73:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:7",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 657,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "2713:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "2727:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "2739:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:7"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "2772:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 654,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:7"
									},
									"scope": 658,
									"src": "2691:87:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 659,
							"src": "205:2575:7",
							"usedErrors": [],
							"usedEvents": [
								592,
								601
							]
						}
					],
					"src": "106:2675:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							507
						],
						"IERC20": [
							658
						],
						"SafeERC20": [
							1122
						]
					},
					"id": 1123,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 660,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 662,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1123,
							"sourceUnit": 659,
							"src": "141:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 661,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 658,
										"src": "149:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 664,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1123,
							"sourceUnit": 508,
							"src": "179:58:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 663,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 507,
										"src": "187:8:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 665,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:8",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1122,
							"linearizedBaseContracts": [
								1122
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:8",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 670,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "823:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:8"
									},
									"src": "792:46:8"
								},
								{
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:8",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 679,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "959:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "976:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "1002:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:8"
									},
									"src": "920:109:8"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "1291:88:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 691,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "1321:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$658",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 694,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 683,
																		"src": "1343:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$658",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:8",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 625,
																	"src": "1343:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 696,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 685,
																			"src": "1360:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 697,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 687,
																			"src": "1364:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 698,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 692,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 693,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:8",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$658",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 690,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "1301:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:8"
											}
										]
									},
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:8",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "1241:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$658",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 682,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 681,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 658,
														"src": "1241:6:8"
													},
													"referencedDeclaration": 658,
													"src": "1241:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$658",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "1255:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "1267:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:8"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:8"
									},
									"scope": 1122,
									"src": "1219:160:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 729,
										"nodeType": "Block",
										"src": "1708:98:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 717,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "1738:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$658",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 720,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 707,
																		"src": "1760:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$658",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:8",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 657,
																	"src": "1760:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 722,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 709,
																			"src": "1781:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 723,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 711,
																			"src": "1787:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 724,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 713,
																			"src": "1791:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 725,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 718,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:8",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$658",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 716,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "1718:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 728,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:8"
											}
										]
									},
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:8",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "1644:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$658",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 706,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 705,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 658,
														"src": "1644:6:8"
													},
													"referencedDeclaration": 658,
													"src": "1644:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$658",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "1658:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "1672:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "1684:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:8"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:8"
									},
									"scope": 1122,
									"src": "1618:188:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "2033:99:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 744,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "2074:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$658",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 747,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "2096:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$658",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:8",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 625,
																	"src": "2096:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 749,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 736,
																			"src": "2113:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 750,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 738,
																			"src": "2117:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 751,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 745,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 746,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:8",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$658",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 743,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "2050:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 742,
												"id": 754,
												"nodeType": "Return",
												"src": "2043:82:8"
											}
										]
									},
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:8",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "1968:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$658",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 733,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 732,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 658,
														"src": "1968:6:8"
													},
													"referencedDeclaration": 658,
													"src": "1968:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$658",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "1982:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "1994:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:8"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "2027:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 740,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:8"
									},
									"scope": 1122,
									"src": "1943:189:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "2381:109:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 772,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "2422:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$658",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 775,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 760,
																		"src": "2444:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$658",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:8",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 657,
																	"src": "2444:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 777,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 762,
																			"src": "2465:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 778,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 764,
																			"src": "2471:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 779,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 766,
																			"src": "2475:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 780,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 773,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 774,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:8",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$658",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 771,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "2398:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 770,
												"id": 783,
												"nodeType": "Return",
												"src": "2391:92:8"
											}
										]
									},
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:8",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "2302:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$658",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 759,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 758,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 658,
														"src": "2302:6:8"
													},
													"referencedDeclaration": 658,
													"src": "2302:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$658",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "2316:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "2330:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "2342:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:8"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "2375:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 768,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:8"
									},
									"scope": 1122,
									"src": "2273:217:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 815,
										"nodeType": "Block",
										"src": "3232:139:8",
										"statements": [
											{
												"assignments": [
													797
												],
												"declarations": [
													{
														"constant": false,
														"id": 797,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 815,
														"src": "3242:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 796,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 806,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 802,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1122",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1122",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 800,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 804,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "3296:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 798,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "3265:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$658",
																"typeString": "contract IERC20"
															}
														},
														"id": 799,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:8",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 635,
														"src": "3265:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 808,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "3327:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$658",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 809,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "3334:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 810,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 797,
																"src": "3343:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 811,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "3358:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$658",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 807,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "3314:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 814,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:8"
											}
										]
									},
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:8",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "3177:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$658",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 788,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 787,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 658,
														"src": "3177:6:8"
													},
													"referencedDeclaration": 658,
													"src": "3177:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$658",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "3191:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "3208:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:8"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:8"
									},
									"scope": 1122,
									"src": "3146:225:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "4137:370:8",
										"statements": [
											{
												"id": 857,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:8",
												"statements": [
													{
														"assignments": [
															828
														],
														"declarations": [
															{
																"constant": false,
																"id": 828,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:8",
																"nodeType": "VariableDeclaration",
																"scope": 857,
																"src": "4171:24:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 827,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 837,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 833,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1122",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1122",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 831,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 835,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "4229:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 829,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "4198:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$658",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:8",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 635,
																"src": "4198:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 838,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 828,
																"src": "4255:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 839,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 824,
																"src": "4274:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 848,
														"nodeType": "IfStatement",
														"src": "4251:160:8",
														"trueBody": {
															"id": 847,
															"nodeType": "Block",
															"src": "4293:118:8",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 842,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 822,
																				"src": "4351:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 843,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 828,
																				"src": "4360:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 844,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 824,
																				"src": "4378:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 841,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 679,
																			"src": "4318:32:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 846,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:8"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 850,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "4437:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$658",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 851,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "4444:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 852,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 828,
																		"src": "4453:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 853,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 824,
																		"src": "4472:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$658",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 849,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 906,
																"src": "4424:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 856,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 817,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:8",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "4070:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$658",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 819,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 818,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 658,
														"src": "4070:6:8"
													},
													"referencedDeclaration": 658,
													"src": "4070:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$658",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "4084:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "4101:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:8"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:8"
									},
									"scope": 1122,
									"src": "4039:468:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "5161:303:8",
										"statements": [
											{
												"assignments": [
													871
												],
												"declarations": [
													{
														"constant": false,
														"id": 871,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 905,
														"src": "5171:25:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 870,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 880,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 874,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 863,
																"src": "5214:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$658",
																	"typeString": "contract IERC20"
																}
															},
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:8",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 645,
															"src": "5214:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 876,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 865,
																	"src": "5230:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 877,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 867,
																	"src": "5239:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 878,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 872,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 873,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:8",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:8"
											},
											{
												"condition": {
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:8",
													"subExpression": {
														"arguments": [
															{
																"id": 882,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 863,
																"src": "5286:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$658",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 883,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 871,
																"src": "5293:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$658",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 881,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "5262:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 904,
												"nodeType": "IfStatement",
												"src": "5257:201:8",
												"trueBody": {
													"id": 903,
													"nodeType": "Block",
													"src": "5308:150:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 887,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 863,
																		"src": "5342:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$658",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 890,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 863,
																					"src": "5364:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$658",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 891,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:8",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 645,
																				"src": "5364:13:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 892,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 865,
																						"src": "5380:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 893,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 894,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 888,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:8",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$658",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 886,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "5322:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 897,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 899,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 863,
																		"src": "5427:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$658",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 900,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 871,
																		"src": "5434:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$658",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 898,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "5407:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 902,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 860,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:8",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "5106:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$658",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 862,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 861,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 658,
														"src": "5106:6:8"
													},
													"referencedDeclaration": 658,
													"src": "5106:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$658",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "5120:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "5137:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:8"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:8"
									},
									"scope": 1122,
									"src": "5084:380:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "5911:219:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 919,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 912,
																"src": "5925:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 937,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 933,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 912,
																	"src": "6034:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 934,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 914,
																	"src": "6038:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 935,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 916,
																	"src": "6045:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 931,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "6012:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$507",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:8",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 458,
																"src": "6012:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 946,
													"nodeType": "IfStatement",
													"src": "6007:117:8",
													"trueBody": {
														"id": 945,
														"nodeType": "Block",
														"src": "6052:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 941,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "6106:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$507",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$507",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 940,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 939,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 938,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 670,
																		"src": "6073:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 944,
																"nodeType": "RevertStatement",
																"src": "6066:47:8"
															}
														]
													}
												},
												"id": 947,
												"nodeType": "IfStatement",
												"src": "5921:203:8",
												"trueBody": {
													"id": 930,
													"nodeType": "Block",
													"src": "5946:55:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 925,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 910,
																		"src": "5973:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$507",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 926,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 912,
																		"src": "5980:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 927,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 914,
																		"src": "5984:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$507",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 924,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 703,
																	"src": "5960:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 929,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 907,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:8",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "5840:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$507",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 909,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 908,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 507,
														"src": "5840:8:8"
													},
													"referencedDeclaration": 507,
													"src": "5840:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$507",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "5856:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "5868:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "5883:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 915,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:8"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:8"
									},
									"scope": 1122,
									"src": "5808:322:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 995,
										"nodeType": "Block",
										"src": "6649:239:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 964,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "6663:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 967,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 984,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 979,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "6786:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 980,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 957,
																	"src": "6792:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 981,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 959,
																	"src": "6796:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 982,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 961,
																	"src": "6803:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 977,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "6760:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$507",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 978,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:8",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 484,
																"src": "6760:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 993,
													"nodeType": "IfStatement",
													"src": "6755:127:8",
													"trueBody": {
														"id": 992,
														"nodeType": "Block",
														"src": "6810:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 988,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 953,
																					"src": "6864:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$507",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$507",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 987,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 986,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 989,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 985,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 670,
																		"src": "6831:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 991,
																"nodeType": "RevertStatement",
																"src": "6824:47:8"
															}
														]
													}
												},
												"id": 994,
												"nodeType": "IfStatement",
												"src": "6659:223:8",
												"trueBody": {
													"id": 976,
													"nodeType": "Block",
													"src": "6684:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 970,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 953,
																		"src": "6715:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$507",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 971,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 955,
																		"src": "6722:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 972,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 957,
																		"src": "6728:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 973,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 959,
																		"src": "6732:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$507",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 969,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 730,
																	"src": "6698:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 974,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 975,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:8",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "6527:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$507",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 952,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 951,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 507,
														"src": "6527:8:8"
													},
													"referencedDeclaration": 507,
													"src": "6527:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$507",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "6551:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "6573:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "6593:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "6616:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 960,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:8"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:8"
									},
									"scope": 1122,
									"src": "6482:406:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1038,
										"nodeType": "Block",
										"src": "7655:218:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1009,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "7669:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1012,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1027,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 1023,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "7777:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1024,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1004,
																	"src": "7781:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1025,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1006,
																	"src": "7788:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1021,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1000,
																	"src": "7756:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$507",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:8",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 506,
																"src": "7756:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1036,
													"nodeType": "IfStatement",
													"src": "7751:116:8",
													"trueBody": {
														"id": 1035,
														"nodeType": "Block",
														"src": "7795:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1031,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1000,
																					"src": "7849:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$507",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$507",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1030,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1029,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1028,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 670,
																		"src": "7816:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1034,
																"nodeType": "RevertStatement",
																"src": "7809:47:8"
															}
														]
													}
												},
												"id": 1037,
												"nodeType": "IfStatement",
												"src": "7665:202:8",
												"trueBody": {
													"id": 1020,
													"nodeType": "Block",
													"src": "7690:55:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1015,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1000,
																		"src": "7717:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$507",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1016,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1002,
																		"src": "7724:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1017,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "7728:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$507",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1014,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 906,
																	"src": "7704:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1019,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 997,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:8",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 1039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "7584:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$507",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 999,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 998,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 507,
														"src": "7584:8:8"
													},
													"referencedDeclaration": 507,
													"src": "7584:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$507",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "7600:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "7612:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "7627:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1005,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:8"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:8"
									},
									"scope": 1122,
									"src": "7553:320:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "8440:650:8",
										"statements": [
											{
												"assignments": [
													1049
												],
												"declarations": [
													{
														"constant": false,
														"id": 1049,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1079,
														"src": "8450:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1048,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1050,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:8"
											},
											{
												"assignments": [
													1052
												],
												"declarations": [
													{
														"constant": false,
														"id": 1052,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1079,
														"src": "8478:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1051,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1053,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:8"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:8",
													"nodeType": "YulBlock",
													"src": "8532:396:8",
													"statements": [
														{
															"nativeSrc": "8546:75:8",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:8"
																		},
																		"nativeSrc": "8566:5:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:8"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:8",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:8"
																		},
																		"nativeSrc": "8583:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:8"
																		},
																		"nativeSrc": "8600:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:8"
																},
																"nativeSrc": "8561:60:8",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:8"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:8",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:8",
																"nodeType": "YulBlock",
																"src": "8682:157:8",
																"statements": [
																	{
																		"nativeSrc": "8700:22:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:8",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:8",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:8",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:8"
																			},
																			"nativeSrc": "8711:11:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:8"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:8",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:8",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:8"
																					},
																					"nativeSrc": "8762:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:8"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:8",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:8"
																			},
																			"nativeSrc": "8739:40:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:8"
																		},
																		"nativeSrc": "8739:40:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:8"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:8",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:8"
																					},
																					"nativeSrc": "8808:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:8"
																			},
																			"nativeSrc": "8796:29:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:8"
																		},
																		"nativeSrc": "8796:29:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:8"
																},
																"nativeSrc": "8666:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:8"
															},
															"nativeSrc": "8663:176:8",
															"nodeType": "YulIf",
															"src": "8663:176:8"
														},
														{
															"nativeSrc": "8852:30:8",
															"nodeType": "YulAssignment",
															"src": "8852:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:8",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:8"
																},
																"nativeSrc": "8866:16:8",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:8"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:8"
																}
															]
														},
														{
															"nativeSrc": "8895:23:8",
															"nodeType": "YulAssignment",
															"src": "8895:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:8"
																},
																"nativeSrc": "8910:8:8",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:8"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:8"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1045,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1045,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1049,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:8",
														"valueSize": 1
													},
													{
														"declaration": 1052,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:8",
														"valueSize": 1
													},
													{
														"declaration": 1043,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1054,
												"nodeType": "InlineAssembly",
												"src": "8507:421:8"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1057,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1055,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "8942:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1066,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1052,
															"src": "8994:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:8",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1065,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1060,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1043,
																			"src": "8968:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$658",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$658",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1058,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:8",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:8",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1078,
												"nodeType": "IfStatement",
												"src": "8938:146:8",
												"trueBody": {
													"id": 1077,
													"nodeType": "Block",
													"src": "9012:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1073,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1043,
																				"src": "9066:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$658",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$658",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1072,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1071,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1070,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "9033:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1076,
															"nodeType": "RevertStatement",
															"src": "9026:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1040,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:8",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "8399:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$658",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1042,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1041,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 658,
														"src": "8399:6:8"
													},
													"referencedDeclaration": 658,
													"src": "8399:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$658",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "8413:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1044,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:8"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:8"
									},
									"scope": 1122,
									"src": "8370:720:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1120,
										"nodeType": "Block",
										"src": "9681:391:8",
										"statements": [
											{
												"assignments": [
													1092
												],
												"declarations": [
													{
														"constant": false,
														"id": 1092,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1120,
														"src": "9691:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1091,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1093,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:8"
											},
											{
												"assignments": [
													1095
												],
												"declarations": [
													{
														"constant": false,
														"id": 1095,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1120,
														"src": "9713:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1094,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1096,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:8"
											},
											{
												"assignments": [
													1098
												],
												"declarations": [
													{
														"constant": false,
														"id": 1098,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1120,
														"src": "9741:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1097,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1099,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:8"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:8",
													"nodeType": "YulBlock",
													"src": "9795:174:8",
													"statements": [
														{
															"nativeSrc": "9809:71:8",
															"nodeType": "YulAssignment",
															"src": "9809:71:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:8"
																		},
																		"nativeSrc": "9825:5:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:8"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:8",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:8"
																		},
																		"nativeSrc": "9842:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:8"
																		},
																		"nativeSrc": "9859:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:8"
																},
																"nativeSrc": "9820:60:8",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:8"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:8"
																}
															]
														},
														{
															"nativeSrc": "9893:30:8",
															"nodeType": "YulAssignment",
															"src": "9893:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:8",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:8"
																},
																"nativeSrc": "9907:16:8",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:8"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:8"
																}
															]
														},
														{
															"nativeSrc": "9936:23:8",
															"nodeType": "YulAssignment",
															"src": "9936:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:8"
																},
																"nativeSrc": "9951:8:8",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:8"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:8"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1086,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1086,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1095,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:8",
														"valueSize": 1
													},
													{
														"declaration": 1098,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:8",
														"valueSize": 1
													},
													{
														"declaration": 1092,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:8",
														"valueSize": 1
													},
													{
														"declaration": 1084,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1100,
												"nodeType": "InlineAssembly",
												"src": "9770:199:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1101,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "9985:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1102,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1095,
																		"src": "9997:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1113,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1098,
																		"src": "10048:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:8",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1107,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1084,
																						"src": "10023:5:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$658",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$658",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 1106,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1105,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:8",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1108,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:8",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1117,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1090,
												"id": 1119,
												"nodeType": "Return",
												"src": "9978:87:8"
											}
										]
									},
									"documentation": {
										"id": 1081,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:8",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 1121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "9625:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$658",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1083,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1082,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 658,
														"src": "9625:6:8"
													},
													"referencedDeclaration": 658,
													"src": "9625:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$658",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "9639:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1085,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:8"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "9675:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1088,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:8"
									},
									"scope": 1122,
									"src": "9592:480:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1123,
							"src": "698:9376:8",
							"usedErrors": [
								670,
								679
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1152
						]
					},
					"id": 1153,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1124,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1125,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1152,
							"linearizedBaseContracts": [
								1152
							],
							"name": "Context",
							"nameLocation": "642:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1133,
										"nodeType": "Block",
										"src": "718:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1130,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1129,
												"id": 1132,
												"nodeType": "Return",
												"src": "728:17:9"
											}
										]
									},
									"id": 1134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:9"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "709:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:9"
									},
									"scope": 1152,
									"src": "656:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "825:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1139,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1138,
												"id": 1141,
												"nodeType": "Return",
												"src": "835:15:9"
											}
										]
									},
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:9"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "809:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1136,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:9"
									},
									"scope": 1152,
									"src": "758:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1150,
										"nodeType": "Block",
										"src": "935:25:9",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1147,
												"id": 1149,
												"nodeType": "Return",
												"src": "945:8:9"
											}
										]
									},
									"id": 1151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:9"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "926:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:9"
									},
									"scope": 1152,
									"src": "863:97:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1153,
							"src": "624:338:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1176
						],
						"IERC165": [
							1188
						]
					},
					"id": 1177,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1154,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1156,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1177,
							"sourceUnit": 1189,
							"src": "140:38:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1155,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1188,
										"src": "148:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1158,
										"name": "IERC165",
										"nameLocations": [
											"688:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1188,
										"src": "688:7:10"
									},
									"id": 1159,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:10"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1157,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1176,
							"linearizedBaseContracts": [
								1176,
								1188
							],
							"name": "ERC165",
							"nameLocation": "678:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1187
									],
									"body": {
										"id": 1174,
										"nodeType": "Block",
										"src": "812:64:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1167,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "829:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1169,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1188,
																	"src": "849:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1188_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1188_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1168,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "844:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "844:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1188",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1171,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "858:11:10",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "844:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "829:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1166,
												"id": 1173,
												"nodeType": "Return",
												"src": "822:47:10"
											}
										]
									},
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "702:23:10",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 1175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "739:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "764:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "757:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1161,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "757:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:20:10"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "806:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1164,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "806:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "805:6:10"
									},
									"scope": 1176,
									"src": "730:146:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1177,
							"src": "660:218:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:765:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1188
						]
					},
					"id": 1189,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1178,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1179,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:11",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1188,
							"linearizedBaseContracts": [
								1188
							],
							"name": "IERC165",
							"nameLocation": "433:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1180,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "819:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1181,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:11"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "862:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1184,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:11"
									},
									"scope": 1188,
									"src": "792:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1189,
							"src": "423:447:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:11"
				},
				"id": 11
			},
			"src/KipuBankV2.sol": {
				"ast": {
					"absolutePath": "src/KipuBankV2.sol",
					"exportedSymbols": {
						"AccessControl": [
							342
						],
						"AggregatorV3Interface": [
							45
						],
						"Context": [
							1152
						],
						"ERC165": [
							1176
						],
						"IAccessControl": [
							425
						],
						"IERC1363": [
							507
						],
						"IERC165": [
							1188
						],
						"IERC20": [
							658
						],
						"KipuBank": [
							1471
						],
						"ReentrancyGuard": [
							580
						],
						"SafeERC20": [
							1122
						]
					},
					"id": 1472,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1190,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1191,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1472,
							"sourceUnit": 343,
							"src": "408:58:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1192,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1472,
							"sourceUnit": 581,
							"src": "468:62:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1193,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1472,
							"sourceUnit": 659,
							"src": "532:56:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1194,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1472,
							"sourceUnit": 1123,
							"src": "590:65:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"id": 1195,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1472,
							"sourceUnit": 46,
							"src": "657:76:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1196,
										"name": "AccessControl",
										"nameLocations": [
											"758:13:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 342,
										"src": "758:13:12"
									},
									"id": 1197,
									"nodeType": "InheritanceSpecifier",
									"src": "758:13:12"
								},
								{
									"baseName": {
										"id": 1198,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"773:15:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 580,
										"src": "773:15:12"
									},
									"id": 1199,
									"nodeType": "InheritanceSpecifier",
									"src": "773:15:12"
								}
							],
							"canonicalName": "KipuBank",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1471,
							"linearizedBaseContracts": [
								1471,
								580,
								342,
								1176,
								1188,
								425,
								1152
							],
							"name": "KipuBank",
							"nameLocation": "746:8:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1203,
									"libraryName": {
										"id": 1200,
										"name": "SafeERC20",
										"nameLocations": [
											"801:9:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1122,
										"src": "801:9:12"
									},
									"nodeType": "UsingForDirective",
									"src": "795:27:12",
									"typeName": {
										"id": 1202,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1201,
											"name": "IERC20",
											"nameLocations": [
												"815:6:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 658,
											"src": "815:6:12"
										},
										"referencedDeclaration": 658,
										"src": "815:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$658",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "f2157052",
									"id": 1208,
									"mutability": "constant",
									"name": "BANK_MANAGER_ROLE",
									"nameLocation": "922:17:12",
									"nodeType": "VariableDeclaration",
									"scope": 1471,
									"src": "898:74:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1204,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "898:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "42414e4b5f4d414e414745525f524f4c45",
												"id": 1206,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "952:19:12",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_2d95a8186db49da8bd2356c70cf02038f7de0d6ed39f6766fe2d93d5e7785616",
													"typeString": "literal_string \"BANK_MANAGER_ROLE\""
												},
												"value": "BANK_MANAGER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_2d95a8186db49da8bd2356c70cf02038f7de0d6ed39f6766fe2d93d5e7785616",
													"typeString": "literal_string \"BANK_MANAGER_ROLE\""
												}
											],
											"id": 1205,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "942:9:12",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "942:30:12",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1209,
										"nodeType": "StructuredDocumentation",
										"src": "1079:57:12",
										"text": "@notice Máximo permitido por transacción de retiro."
									},
									"functionSelector": "8c0ff5b7",
									"id": 1211,
									"mutability": "immutable",
									"name": "maxWithdrawal",
									"nameLocation": "1167:13:12",
									"nodeType": "VariableDeclaration",
									"scope": 1471,
									"src": "1142:38:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1210,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1142:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1212,
										"nodeType": "StructuredDocumentation",
										"src": "1189:45:12",
										"text": "@notice Capacidad total del banco en ETH."
									},
									"functionSelector": "c16ec037",
									"id": 1214,
									"mutability": "immutable",
									"name": "totalBankCapacity",
									"nameLocation": "1265:17:12",
									"nodeType": "VariableDeclaration",
									"scope": 1471,
									"src": "1240:42:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1213,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1240:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1215,
										"nodeType": "StructuredDocumentation",
										"src": "1379:64:12",
										"text": "@notice Total actual de todos los depósitos en el contrato."
									},
									"functionSelector": "7d882097",
									"id": 1217,
									"mutability": "mutable",
									"name": "totalDeposits",
									"nameLocation": "1464:13:12",
									"nodeType": "VariableDeclaration",
									"scope": 1471,
									"src": "1449:28:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1216,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1449:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1218,
										"nodeType": "StructuredDocumentation",
										"src": "1590:46:12",
										"text": "@notice User balances stored in the vault."
									},
									"id": 1222,
									"mutability": "mutable",
									"name": "vaultBalance",
									"nameLocation": "1678:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 1471,
									"src": "1642:48:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1221,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1219,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1650:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1642:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1220,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1661:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1223,
										"nodeType": "StructuredDocumentation",
										"src": "1699:49:12",
										"text": "@notice Number of deposits made by each user."
									},
									"functionSelector": "f4443d9a",
									"id": 1227,
									"mutability": "mutable",
									"name": "depositCount",
									"nameLocation": "1789:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 1471,
									"src": "1754:47:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1226,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1224,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1762:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1754:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1225,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1773:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "1810:52:12",
										"text": "@notice Number of withdrawals made by each user."
									},
									"functionSelector": "b3d8bcdc",
									"id": 1232,
									"mutability": "mutable",
									"name": "withdrawalCount",
									"nameLocation": "1903:15:12",
									"nodeType": "VariableDeclaration",
									"scope": 1471,
									"src": "1868:50:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1231,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1229,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1876:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1868:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1230,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1887:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1233,
										"nodeType": "StructuredDocumentation",
										"src": "1980:160:12",
										"text": "@notice It is issued when the user makes a successful deposit.\n @param user is the user's address \n@param  amount Amount of ETH deposited."
									},
									"eventSelector": "d15c9547ea5c06670c0010ce19bc32d54682a4b3801ece7f3ab0c3f17106b4bb",
									"id": 1239,
									"name": "DepositMade",
									"nameLocation": "2152:11:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2180:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "2164:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2164:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2194:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "2186:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2186:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2163:38:12"
									},
									"src": "2146:56:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1240,
										"nodeType": "StructuredDocumentation",
										"src": "2214:156:12",
										"text": "@notice It is issued when the user makes a successful withdrawal.\n @param user the user's address \n@param amount Amount of ETH withdrawn."
									},
									"eventSelector": "bc158bb64f05d6383aea69bbb0b20c1bbf4b7a18f63359c5649b7c39e29d3884",
									"id": 1246,
									"name": "WithdrawalMade",
									"nameLocation": "2390:14:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2421:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "2405:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2405:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1244,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2435:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "2427:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2427:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2404:38:12"
									},
									"src": "2384:59:12"
								},
								{
									"documentation": {
										"id": 1247,
										"nodeType": "StructuredDocumentation",
										"src": "2555:78:12",
										"text": "@notice It is launched when a deposit exceeds the global banking capacity."
									},
									"errorSelector": "def6daf2",
									"id": 1249,
									"name": "MaxDepositExceeded",
									"nameLocation": "2645:18:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2663:2:12"
									},
									"src": "2639:27:12"
								},
								{
									"documentation": {
										"id": 1250,
										"nodeType": "StructuredDocumentation",
										"src": "2674:60:12",
										"text": "@notice When a withdrawal exceeds the transaction limit."
									},
									"errorSelector": "73a7c910",
									"id": 1252,
									"name": "MaxWithdrawalExceeded",
									"nameLocation": "2746:21:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2767:2:12"
									},
									"src": "2740:30:12"
								},
								{
									"documentation": {
										"id": 1253,
										"nodeType": "StructuredDocumentation",
										"src": "2778:65:12",
										"text": "@notice When a user tries to withdraw more than their balance"
									},
									"errorSelector": "f4d678b8",
									"id": 1255,
									"name": "InsufficientBalance",
									"nameLocation": "2855:19:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2874:2:12"
									},
									"src": "2849:28:12"
								},
								{
									"documentation": {
										"id": 1256,
										"nodeType": "StructuredDocumentation",
										"src": "2885:41:12",
										"text": "@notice When trying to deposit 0 ETH."
									},
									"errorSelector": "86150199",
									"id": 1258,
									"name": "ZeroDepositNotAllowed",
									"nameLocation": "2938:21:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2959:2:12"
									},
									"src": "2932:30:12"
								},
								{
									"documentation": {
										"id": 1259,
										"nodeType": "StructuredDocumentation",
										"src": "2970:67:12",
										"text": "@notice Thrown if you try to send ETH directly to the contract."
									},
									"errorSelector": "3ee6509d",
									"id": 1261,
									"name": "DirectTransferNotAllowed",
									"nameLocation": "3049:24:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3073:2:12"
									},
									"src": "3043:33:12"
								},
								{
									"documentation": {
										"id": 1262,
										"nodeType": "StructuredDocumentation",
										"src": "3084:72:12",
										"text": "@notice Thrown if the maxRetiro value in the constructor is invalid."
									},
									"errorSelector": "f1f13a38",
									"id": 1264,
									"name": "MaximumWithdrawalInvalid",
									"nameLocation": "3168:24:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3192:2:12"
									},
									"src": "3162:33:12"
								},
								{
									"documentation": {
										"id": 1265,
										"nodeType": "StructuredDocumentation",
										"src": "3203:70:12",
										"text": "@notice Thrown if the bank capacity in the constructor is invalid."
									},
									"errorSelector": "afea1c57",
									"id": 1267,
									"name": "InvalidBankCapacity",
									"nameLocation": "3285:19:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3304:2:12"
									},
									"src": "3279:28:12"
								},
								{
									"body": {
										"id": 1297,
										"nodeType": "Block",
										"src": "3691:229:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1275,
														"name": "_maxWithdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1270,
														"src": "3706:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1276,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3724:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3706:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1281,
												"nodeType": "IfStatement",
												"src": "3702:58:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1278,
															"name": "MaximumWithdrawalInvalid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1264,
															"src": "3734:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3734:26:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1280,
													"nodeType": "RevertStatement",
													"src": "3727:33:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1282,
														"name": "_totalCapacity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "3775:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1283,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3793:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3775:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1288,
												"nodeType": "IfStatement",
												"src": "3771:53:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1285,
															"name": "InvalidBankCapacity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "3803:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3803:21:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1287,
													"nodeType": "RevertStatement",
													"src": "3796:28:12"
												}
											},
											{
												"expression": {
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1289,
														"name": "maxWithdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "3837:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1290,
														"name": "_maxWithdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1270,
														"src": "3853:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3837:30:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1292,
												"nodeType": "ExpressionStatement",
												"src": "3837:30:12"
											},
											{
												"expression": {
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1293,
														"name": "totalBankCapacity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1214,
														"src": "3878:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1294,
														"name": "_totalCapacity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "3898:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3878:34:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1296,
												"nodeType": "ExpressionStatement",
												"src": "3878:34:12"
											}
										]
									},
									"documentation": {
										"id": 1268,
										"nodeType": "StructuredDocumentation",
										"src": "3420:199:12",
										"text": "@notice Initializes the contract with the specified limits.\n @param _maxWithdrawal Maximum withdrawal limit per transaction.\n @param _totalCapacity Total ETH capacity of the bank."
									},
									"id": 1298,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "_maxWithdrawal",
												"nameLocation": "3651:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "3643:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3643:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "_totalCapacity",
												"nameLocation": "3675:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "3667:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3667:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3642:48:12"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3691:0:12"
									},
									"scope": 1471,
									"src": "3631:289:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1310,
										"nodeType": "Block",
										"src": "4126:81:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1301,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4141:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4145:5:12",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "4141:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1303,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4154:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4141:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1308,
												"nodeType": "IfStatement",
												"src": "4137:50:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1305,
															"name": "ZeroDepositNotAllowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "4164:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4164:23:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1307,
													"nodeType": "RevertStatement",
													"src": "4157:30:12"
												}
											},
											{
												"id": 1309,
												"nodeType": "PlaceholderStatement",
												"src": "4198:1:12"
											}
										]
									},
									"documentation": {
										"id": 1299,
										"nodeType": "StructuredDocumentation",
										"src": "4028:58:12",
										"text": "@notice Verify that the amount sent is greater than 0."
									},
									"id": 1311,
									"name": "nonZeroDeposit",
									"nameLocation": "4109:14:12",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4123:2:12"
									},
									"src": "4100:107:12",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1324,
										"nodeType": "Block",
										"src": "4389:89:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1316,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "4404:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1317,
														"name": "maxWithdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "4413:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4404:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1322,
												"nodeType": "IfStatement",
												"src": "4400:58:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1319,
															"name": "MaxWithdrawalExceeded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "4435:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1320,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4435:23:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1321,
													"nodeType": "RevertStatement",
													"src": "4428:30:12"
												}
											},
											{
												"id": 1323,
												"nodeType": "PlaceholderStatement",
												"src": "4469:1:12"
											}
										]
									},
									"documentation": {
										"id": 1312,
										"nodeType": "StructuredDocumentation",
										"src": "4219:111:12",
										"text": "@notice Check that the withdrawal is within the maximum allowed.\n @param amount Amount to withdraw."
									},
									"id": 1325,
									"name": "withinWithdrawalLimit",
									"nameLocation": "4351:21:12",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4381:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "4373:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4373:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4372:16:12"
									},
									"src": "4342:136:12",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1368,
										"nodeType": "Block",
										"src": "4774:299:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1334,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1331,
															"name": "totalDeposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1217,
															"src": "4789:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"expression": {
																"id": 1332,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4805:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4809:5:12",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "4805:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4789:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1335,
														"name": "totalBankCapacity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1214,
														"src": "4817:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4789:45:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1341,
												"nodeType": "IfStatement",
												"src": "4785:105:12",
												"trueBody": {
													"id": 1340,
													"nodeType": "Block",
													"src": "4836:54:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1337,
																	"name": "MaxDepositExceeded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1249,
																	"src": "4858:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4858:20:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1339,
															"nodeType": "RevertStatement",
															"src": "4851:27:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1342,
															"name": "vaultBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "4902:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1345,
														"indexExpression": {
															"expression": {
																"id": 1343,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4915:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4919:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4915:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4902:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 1346,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4930:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4934:5:12",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "4930:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4902:37:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1349,
												"nodeType": "ExpressionStatement",
												"src": "4902:37:12"
											},
											{
												"expression": {
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1350,
														"name": "totalDeposits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "4950:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 1351,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4967:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4971:5:12",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "4967:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4950:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1354,
												"nodeType": "ExpressionStatement",
												"src": "4950:26:12"
											},
											{
												"expression": {
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "4987:26:12",
													"subExpression": {
														"baseExpression": {
															"id": 1355,
															"name": "depositCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1227,
															"src": "4987:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1358,
														"indexExpression": {
															"expression": {
																"id": 1356,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5000:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5004:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5000:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4987:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1360,
												"nodeType": "ExpressionStatement",
												"src": "4987:26:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1362,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5043:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5047:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5043:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1364,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5055:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5059:5:12",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "5055:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1361,
														"name": "DepositMade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1239,
														"src": "5031:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5031:34:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1367,
												"nodeType": "EmitStatement",
												"src": "5026:39:12"
											}
										]
									},
									"documentation": {
										"id": 1326,
										"nodeType": "StructuredDocumentation",
										"src": "4602:109:12",
										"text": "@notice Deposits ETH into the user's personal vault.\n @dev Check global limit and record deposit."
									},
									"functionSelector": "d0e30db0",
									"id": 1369,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1329,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1328,
												"name": "nonZeroDeposit",
												"nameLocations": [
													"4759:14:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1311,
												"src": "4759:14:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4759:14:12"
										}
									],
									"name": "deposit",
									"nameLocation": "4732:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4739:2:12"
									},
									"returnParameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4774:0:12"
									},
									"scope": 1471,
									"src": "4723:350:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1424,
										"nodeType": "Block",
										"src": "5332:390:12",
										"statements": [
											{
												"assignments": [
													1379
												],
												"declarations": [
													{
														"constant": false,
														"id": 1379,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "5351:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 1424,
														"src": "5343:15:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1378,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5343:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1384,
												"initialValue": {
													"baseExpression": {
														"id": 1380,
														"name": "vaultBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1222,
														"src": "5361:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1383,
													"indexExpression": {
														"expression": {
															"id": 1381,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5374:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5378:6:12",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "5374:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5361:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5343:42:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1385,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1379,
														"src": "5400:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1386,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1372,
														"src": "5410:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5400:16:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1391,
												"nodeType": "IfStatement",
												"src": "5396:50:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1388,
															"name": "InsufficientBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "5425:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5425:21:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1390,
													"nodeType": "RevertStatement",
													"src": "5418:28:12"
												}
											},
											{
												"id": 1405,
												"nodeType": "UncheckedBlock",
												"src": "5459:118:12",
												"statements": [
													{
														"expression": {
															"id": 1399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1392,
																	"name": "vaultBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1222,
																	"src": "5484:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1395,
																"indexExpression": {
																	"expression": {
																		"id": 1393,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5497:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5501:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5497:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5484:24:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1396,
																	"name": "balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1379,
																	"src": "5511:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1397,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1372,
																	"src": "5521:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5511:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5484:43:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1400,
														"nodeType": "ExpressionStatement",
														"src": "5484:43:12"
													},
													{
														"expression": {
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1401,
																"name": "totalDeposits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1217,
																"src": "5542:13:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 1402,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1372,
																"src": "5559:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5542:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1404,
														"nodeType": "ExpressionStatement",
														"src": "5542:23:12"
													}
												]
											},
											{
												"expression": {
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "5589:29:12",
													"subExpression": {
														"baseExpression": {
															"id": 1406,
															"name": "withdrawalCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "5589:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1409,
														"indexExpression": {
															"expression": {
																"id": 1407,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5605:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5609:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5605:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5589:27:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1411,
												"nodeType": "ExpressionStatement",
												"src": "5589:29:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1413,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5643:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5647:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5643:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1415,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "5655:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1412,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "5629:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5629:33:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1417,
												"nodeType": "ExpressionStatement",
												"src": "5629:33:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1419,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5695:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5699:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5695:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1421,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "5707:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1418,
														"name": "WithdrawalMade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "5680:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5680:34:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1423,
												"nodeType": "EmitStatement",
												"src": "5675:39:12"
											}
										]
									},
									"documentation": {
										"id": 1370,
										"nodeType": "StructuredDocumentation",
										"src": "5081:168:12",
										"text": "@notice Withdraws a specified amount of ETH from the user's vault.\n @param amount The amount of ETH to withdraw and uses secure transfers and custom errors."
									},
									"functionSelector": "2e1a7d4d",
									"id": 1425,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1375,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1372,
													"src": "5324:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1376,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1374,
												"name": "withinWithdrawalLimit",
												"nameLocations": [
													"5302:21:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1325,
												"src": "5302:21:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "5302:29:12"
										}
									],
									"name": "withdraw",
									"nameLocation": "5268:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5285:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "5277:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5277:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5276:16:12"
									},
									"returnParameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5332:0:12"
									},
									"scope": 1471,
									"src": "5259:463:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1437,
										"nodeType": "Block",
										"src": "6093:44:12",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1433,
														"name": "vaultBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1222,
														"src": "6111:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1435,
													"indexExpression": {
														"id": 1434,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1428,
														"src": "6124:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6111:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1432,
												"id": 1436,
												"nodeType": "Return",
												"src": "6104:25:12"
											}
										]
									},
									"documentation": {
										"id": 1426,
										"nodeType": "StructuredDocumentation",
										"src": "5839:174:12",
										"text": "@notice Returns the current vault balance of a given user.\n @param user Address of the user to query.\n @return The ETH balance of the user in the vault."
									},
									"functionSelector": "f8b2cb4f",
									"id": 1438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "6036:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6055:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "6047:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6047:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6046:14:12"
									},
									"returnParameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "6084:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6084:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6083:9:12"
									},
									"scope": 1471,
									"src": "6027:110:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1461,
										"nodeType": "Block",
										"src": "6460:104:12",
										"statements": [
											{
												"assignments": [
													1447,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1447,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6477:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 1461,
														"src": "6472:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1446,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6472:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1454,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6520:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1448,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1441,
																"src": "6490:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6500:4:12",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "6490:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1450,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1443,
																"src": "6512:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "6490:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6490:33:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6471:52:12"
											},
											{
												"condition": {
													"id": 1456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6538:8:12",
													"subExpression": {
														"id": 1455,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1447,
														"src": "6539:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1460,
												"nodeType": "IfStatement",
												"src": "6534:22:12",
												"trueBody": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1457,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967277,
																4294967277
															],
															"referencedDeclaration": 4294967277,
															"src": "6548:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6548:8:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1459,
													"nodeType": "ExpressionStatement",
													"src": "6548:8:12"
												}
											}
										]
									},
									"documentation": {
										"id": 1439,
										"nodeType": "StructuredDocumentation",
										"src": "6229:159:12",
										"text": "@dev Handles secure ETH transfer.\n @param recipient Address to which the ETH will be sent \n@param amount Amount of ETH to be transferred."
									},
									"id": 1462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "6403:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "6425:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "6417:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6417:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6444:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "6436:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6436:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6416:35:12"
									},
									"returnParameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6460:0:12"
									},
									"scope": 1471,
									"src": "6394:170:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1469,
										"nodeType": "Block",
										"src": "6727:52:12",
										"statements": [
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1466,
														"name": "DirectTransferNotAllowed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1261,
														"src": "6745:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
															"typeString": "function () pure returns (error)"
														}
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6745:26:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_error",
														"typeString": "error"
													}
												},
												"id": 1468,
												"nodeType": "RevertStatement",
												"src": "6738:33:12"
											}
										]
									},
									"documentation": {
										"id": 1463,
										"nodeType": "StructuredDocumentation",
										"src": "6653:41:12",
										"text": "@notice Rejects direct ETH transfers."
									},
									"id": 1470,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6707:2:12"
									},
									"returnParameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6727:0:12"
									},
									"scope": 1471,
									"src": "6700:79:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1472,
							"src": "737:6045:12",
							"usedErrors": [
								352,
								355,
								1249,
								1252,
								1255,
								1258,
								1261,
								1264,
								1267
							],
							"usedEvents": [
								364,
								373,
								382,
								1239,
								1246
							]
						}
					],
					"src": "33:6749:12"
				},
				"id": 12
			}
		}
	}
}