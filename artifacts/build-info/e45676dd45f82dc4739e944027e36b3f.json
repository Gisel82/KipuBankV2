{
	"id": "e45676dd45f82dc4739e944027e36b3f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/KipuBankV2.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.30; \r\n\r\n/// @title KipuBank - It is a deposit vault contract with a transaction limit and total capacity, and also allows users to deposit and withdraw ETH with restrictions.\r\n///@dev Use standard security practices such as custom errors, checks-effects-interactions patterns, and events.\r\n\r\n// =================\r\n//      IMPORT\r\n// =================\r\n\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\n\r\ncontract KipuBank is AccessControl, ReentrancyGuard{\r\n    using SafeERC20 for IERC20;\r\n  \r\n    // ======================\r\n    //         ROLES\r\n    // ======================\r\n\r\n    bytes32 public constant BANK_MANAGER_ROLE = keccak256(\"BANK_MANAGER_ROLE\");\r\n    \r\n    // =============================\r\n    // IMMUTABLE/CONSTANT VARIABLES\r\n    // =============================\r\n    \r\n\r\n    /// @notice Máximo permitido por transacción de retiro.\r\n    uint256 public immutable maxWithdrawal;\r\n\r\n    /// @notice Capacidad total del banco en ETH.\r\n    uint256 public immutable totalBankCapacityUSD;\r\n\r\n    ///@notice Oraculo chailink ETH/USD\r\n    AggregatorV3Interface public immutable ethUsdFeed;\r\n    \r\n    \r\n    // ==============================\r\n    //        ESTADO MAPPINGS\r\n    // ==============================\r\n\r\n    mapping(address => AggregatorV3Interface) public priceFeedForToken; \r\n    \r\n    /// @notice User balances stored in the vault.\r\n    mapping(address => mapping (address => uint256)) private vaultBalance;\r\n\r\n    /// @notice Number of deposits made by each user.\r\n    mapping(address => uint256) public depositCount;\r\n\r\n    /// @notice Number of withdrawals made by each user.\r\n    mapping(address => uint256) public withdrawalCount;\r\n\r\n\r\n    address[] private supportedTokens; //Supported tokens\r\n    mapping(address => bool) private isTokenSupported;\r\n\r\n    // ============================\r\n    //           TOTALES\r\n    // ============================\r\n\r\n    /// @notice Total actual de todos los depósitos en el contrato.\r\n\r\n    uint256 public totalDepositsUSD; //USDC-like (6 decimals)\r\n    \r\n   \r\n    // ===============================\r\n    //             EVENTS\r\n    // ===============================\r\n\r\n\r\n    /// @notice Emitted when a user deposits an ETh or token into the contract.\r\n    /// @param user is the user's address. \r\n    /// @param amount Amount of ETH deposited.\r\n    /// @param token what token it was.\r\n    /// @param usdValue6 its equivalent value in USD (with 6 decimal places).\r\n\r\n    event DepositMade(address indexed user, address indexed token, uint256 amount, uint256 usdValue6);\r\n    \r\n    /// @notice It is issued when the user makes a successful withdrawal.\r\n    /// @param user the user's address \r\n    /// @param amount Amount of ETH withdrawn.\r\n    \r\n    event WithdrawalMade(address indexed user, address indexed token, uint256 amount, uint256 usdValue6);\r\n    \r\n    /// @notice Emitted when an administrator (BANK_MANAGER_ROLE) adds support for a new ERC-20 token\r\n    event TokenSupported(address indexed  token);\r\n    \r\n    /// @notice Emitted when support for a previously accepted token is removed.\r\n    event TokenUnsupported(address indexed token);\r\n\r\n    /// @notice It is issued when a new oracle is assigned to a token, used to obtain its price in USD\r\n    event PriceFeedSet(address indexed token, address indexed feed);\r\n\r\n    /// @notice Emitted when the oracle associated with a token is deleted.\r\n    event PriceFeedRemoved(address indexed token);\r\n\r\n    /// @notice Emitted when the bank's main parameters are updated:\r\n    event ParamentersUpdated(uint256 newMaxWithdrawalWei, uint256 newCapacityUSD);\r\n    \r\n    // ==============================\r\n    //         CUSTOM ERRORS\r\n    // ==============================\r\n\r\n    /// @notice It is launched when a deposit exceeds the global banking capacity.\r\n    ///error MaxDepositExceeded();\r\n     \r\n    /// @notice When a withdrawal exceeds the transaction limit.\r\n    error MaxWithdrawalExceeded();\r\n\r\n    /// @notice When a user tries to withdraw more than their balance\r\n    error InsufficientBalance();\r\n\r\n    /// @notice When trying to deposit 0 ETH.\r\n    error ZeroDepositNotAllowed();\r\n\r\n    /// @notice Thrown if you try to send ETH directly to the contract.\r\n    error DirectTransferNotAllowed();\r\n    \r\n    /// @notice It is thrown if someone calls the contract with incorrect data.\r\n    error DirectCallNotAllowed();\r\n\r\n    /// @notice It is thrown if the token used is not supported by the bank\r\n    error TokenNotSupported();\r\n\r\n    /// @notice Thrown if the maxRetiro value in the constructor is invalid.\r\n    error MaximumWithdrawalInvalid();\r\n    \r\n    /// @notice Thrown if an ETH or token transfer fails\r\n    error TransferFailed();\r\n    \r\n    /// @notice Thrown if the bank capacity in the constructor is invalid.\r\n    error InvalidBankCapacity();\r\n    \r\n    /// @notice It is raised when the amount sent or requested is invalid\r\n    error InvalidAmount();\r\n    \r\n    /// @notice It is thrown if the oracle address\r\n    error InvalidOracle();\r\n    \r\n    ///@notice It is thrown if the Bank Cap Exceeded\r\n    error BankCapExceeded();\r\n\r\n   \r\n    // ==============================\r\n    //          CONSTRUCTOR\r\n    // ==============================\r\n\r\n    /// @notice Initializes the contract with the specified limits.\r\n    /// @param _maxWithdrawal Maximum withdrawal limit per transaction.\r\n    /// @param _totalCapacityUSD Total ETH capacity of the bank in USD.\r\n    \r\n    constructor(uint256 _maxWithdrawal, uint256 _totalCapacityUSD, address _ethUsdFeed) {\r\n        if (_maxWithdrawal == 0) revert MaximumWithdrawalInvalid();\r\n        if (_totalCapacityUSD == 0) revert InvalidBankCapacity();\r\n        if (_ethUsdFeed == address(0)) revert InvalidOracle(); \r\n\r\n        maxWithdrawal = _maxWithdrawal;\r\n        totalBankCapacityUSD = _totalCapacityUSD;\r\n        ethUsdFeed = AggregatorV3Interface(_ethUsdFeed);\r\n\r\n        // Otorga roles al deployer\r\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\r\n        _grantRole(BANK_MANAGER_ROLE, msg.sender);\r\n    }\r\n\r\n    // ======================================================\r\n    //              ADMINISTRATIVE FUNCTIONS\r\n    // ======================================================\r\n\r\n    /// @notice Agrega soporte para un token ERC20 \r\n    function supportToken(address token, address feed) external onlyRole(BANK_MANAGER_ROLE) {\r\n        if (token == address(0)) revert TokenNotSupported();\r\n        if (!isTokenSupported[token]) {\r\n            supportedTokens.push(token);\r\n            isTokenSupported[token] = true;\r\n            emit TokenSupported(token);\r\n        }\r\n        if (feed != address(0)) {\r\n            priceFeedForToken[token] = AggregatorV3Interface(feed);\r\n            emit PriceFeedSet(token, feed);\r\n        }\r\n    }\r\n    \r\n    /// @notice The function marks a token as unsupported and can only be executed by a user with the BANK_MANAGER_ROLE role, preventing any user from disabling support for a token.\r\n    function unsupportToken(address token) external onlyRole(BANK_MANAGER_ROLE) {\r\n        if (!isTokenSupported[token]) revert TokenNotSupported();\r\n        isTokenSupported[token] = false;\r\n       \r\n        for (uint256 i = 0; i < supportedTokens.length; i++) {\r\n            if (supportedTokens[i] == token) {\r\n                supportedTokens[i] = supportedTokens[supportedTokens.length - 1];\r\n                supportedTokens.pop();\r\n                break;\r\n            }\r\n        }\r\n        delete priceFeedForToken[token];\r\n        emit TokenUnsupported(token);\r\n        emit PriceFeedRemoved(token);\r\n    }\r\n\r\n    function setPriceFeed(address token, address feed) external onlyRole(BANK_MANAGER_ROLE) {\r\n        if (token == address(0)) revert InvalidOracle(); // ETH feed viene del ethUsdFeed inmutable\r\n        priceFeedForToken[token] = AggregatorV3Interface(feed);\r\n        emit PriceFeedSet(token, feed);\r\n    }\r\n\r\n\r\n    // ==============================\r\n    //           DEPOSITS\r\n    // ==============================\r\n\r\n    /// @notice Deposits ETH into the user's personal vault.\r\n    /// @dev Check global limit and record deposit.\r\n    /// @dev allows a user to deposit ETH or a token.\r\n    /// @dev updates their balance and total in USD.\r\n    /// @dev emits a deposit event.\r\n    \r\n    function deposit(address token, uint256 amount) external payable nonReentrant {\r\n        uint256 usdValue6;\r\n        if (token == address(0)) {\r\n           if (msg.value == 0) revert ZeroDepositNotAllowed();\r\n            usdValue6 = _convertEthToUSD(msg.value);\r\n            vaultBalance[msg.sender][address(0)] += msg.value;\r\n        }else{\r\n           if (!isTokenSupported[token]) revert TokenNotSupported();\r\n           if (amount == 0) revert ZeroDepositNotAllowed();\r\n           IERC20(token).safeTransferFrom(msg.sender, address(this), amount);\r\n           usdValue6 = _convertTokenToUSD(token, amount);\r\n           vaultBalance[msg.sender][token] += amount; \r\n        }\r\n        \r\n        uint256 newTotalUSD = totalDepositsUSD + usdValue6;\r\n        if (newTotalUSD > totalBankCapacityUSD) revert BankCapExceeded();\r\n        totalDepositsUSD = newTotalUSD;\r\n        depositCount[msg.sender]++;\r\n\r\n        emit DepositMade(msg.sender, token, token == address(0) ? msg.value : amount, usdValue6);\r\n    }\r\n\r\n    // ==============================\r\n    //           WITHDRAW\r\n    // ==============================\r\n\r\n    /// @notice Withdraws a specified amount of ETH from the user's vault.\r\n    /// @param amount The amount of ETH to withdraw and uses secure transfers and custom errors.\r\n    /// @dev user to withdraw ETH or token.\r\n    /// @dev check limits and balance. \r\n    /// @dev update balances and total in USD and perform the secure transfer.\r\n    /// @dev issue a withdrawal event.\r\n    \r\n   function withdraw(address token, uint256 amount) external nonReentrant {\r\n        \r\n        if(amount == 0) revert InvalidAmount();\r\n        if(amount > maxWithdrawal) revert MaxWithdrawalExceeded();\r\n        \r\n        uint256 balance = vaultBalance[msg.sender][token];\r\n        if (balance < amount) revert InsufficientBalance();\r\n        \r\n        uint256 usdValue6 = token == address(0) ? _convertEthToUSD(amount) : _convertTokenToUSD(token, amount);\r\n\r\n        vaultBalance[msg.sender][token] = balance - amount;\r\n        totalDepositsUSD -= usdValue6;\r\n        withdrawalCount[msg.sender]++;\r\n        \r\n        if (token == address(0)) {\r\n            (bool success, ) = msg.sender.call{value: amount}(\"\");\r\n            if (!success) revert TransferFailed();\r\n        } else {\r\n            IERC20(token).safeTransfer(msg.sender, amount);\r\n        }\r\n\r\n        emit WithdrawalMade(msg.sender, token, amount, usdValue6);\r\n    }\r\n\r\n    //===========================\r\n    // FUNCIONES DE CONSULTA\r\n    //===========================\r\n    \r\n    /// @notice Returns the current vault balance of a given user.\r\n    /// @param user Address of the user to query.\r\n    /// @return The ETH balance of the user in the vault.\r\n\r\n      \r\n    function getUserBalance(address user, address token) external view returns (uint256) {\r\n        return vaultBalance[user][token];\r\n    }\r\n    \r\n    function getSupportedTokens() external  view returns(address[] memory){\r\n        return supportedTokens;\r\n    }\r\n\r\n    // ==================\r\n    // PRIVATE FUNCTIONS\r\n    // ==================\r\n\r\n\r\n    /// @dev Handles secure ETH transfer.\r\n    /// @param recipient Address to which the ETH will be sent \r\n    ///@param amount Amount of ETH to be transferred.\r\n\r\n    function _safeTransfer(address recipient, uint256 amount) private {\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        if (!success) revert();\r\n    }\r\n\r\n    \r\n    // ===========================\r\n    //    ORACULO DE CHAINLINK\r\n    // ===========================\r\n\r\n     function getLatestEthPrice() public view returns (uint256) {\r\n        (, int256 price, , , ) = ethUsdFeed.latestRoundData();\r\n        // price viene con 8 decimales\r\n        return uint256(price);\r\n    }\r\n\r\n    \r\n    //@notice Convierte ETH depositado a USD (según Chainlink).\r\n    \r\n    function getTotalDepositsInUSD(address user) external view returns (uint256 totalUSD){\r\n        for (uint256 i = 0; i < supportedTokens.length; i++) {\r\n            address token = supportedTokens[i];\r\n            uint256 balance = vaultBalance[user][token];\r\n            if (balance > 0) totalUSD += _convertTokenToUSD(token, balance);\r\n        }\r\n\r\n        totalUSD += _convertEthToUSD(vaultBalance[user][address(0)]);\r\n    }\r\n    \r\n    // =========================\r\n    //     INTERNAL HELPERS\r\n    // =========================\r\n    \r\n    function _convertEthToUSD(uint256 amount) internal view returns (uint256) {\r\n        uint256 price = getLatestEthPrice(); // 8 decimales\r\n        return (amount * price) / 1e8; // USD 6 decimales\r\n    }\r\n\r\n    function _convertTokenToUSD(address token, uint256 amount) internal view returns (uint256) {\r\n        AggregatorV3Interface feed = priceFeedForToken[token];\r\n        if (address(feed) == address(0)) revert InvalidOracle();\r\n        (, int256 price, , , ) = feed.latestRoundData();\r\n        uint8 decimals = IERC20Metadata(token).decimals();\r\n        uint256 normalized = _normalizeToUSDCDecimals(amount, decimals);\r\n        return (normalized * uint256(price)) / 1e8;\r\n    }\r\n    \r\n    // ================================\r\n    //    NORMALIZACION DE DECIMALES\r\n    // ================================\r\n     \r\n    /// @notice Convierte montos con distintos decimales a los de USDC (6 decimales).\r\n     \r\n    function _normalizeToUSDCDecimals(uint256 amount, uint8 tokenDecimals) internal pure returns (uint256){\r\n        if (tokenDecimals > 6) {\r\n            return amount / (10 ** (tokenDecimals - 6));\r\n        } else if (tokenDecimals < 6) {\r\n            return amount * (10 ** (6 - tokenDecimals));\r\n        } else {\r\n            return amount;\r\n        }\r\n    }\r\n  \r\n    // ================================\r\n    //        RECEPCION DE ETH\r\n    // ================================\r\n\r\n    receive() external payable {\r\n        revert DirectTransferNotAllowed();\r\n    }\r\n\r\n    fallback() external payable {\r\n        revert DirectCallNotAllowed();\r\n    }\r\n}"
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity >=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 73,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)68_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)68_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)68_storage"
							},
							"t_struct(RoleData)68_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 65,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 67,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 526,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x9870605E8F38FC4A69034310 SWAP3 0xB7 0xB8 PUSH9 0xBC6456AB2E01DF7BCE 0xB2 OR 0xCD DUP7 PUSH21 0xD764736F6C634300081E0033000000000000000000 ",
							"sourceMap": "698:9376:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x9870605E8F38FC4A69034310 SWAP3 0xB7 0xB8 PUSH9 0xBC6456AB2E01DF7BCE 0xB2 OR 0xCD DUP7 PUSH21 0xD764736F6C634300081E0033000000000000000000 ",
							"sourceMap": "698:9376:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/KipuBankV2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/KipuBankV2.sol": {
				"KipuBank": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_maxWithdrawal",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_totalCapacityUSD",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_ethUsdFeed",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BankCapExceeded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DirectCallNotAllowed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DirectTransferNotAllowed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidBankCapacity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidOracle",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MaxWithdrawalExceeded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MaximumWithdrawalInvalid",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TokenNotSupported",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroDepositNotAllowed",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "usdValue6",
									"type": "uint256"
								}
							],
							"name": "DepositMade",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newMaxWithdrawalWei",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newCapacityUSD",
									"type": "uint256"
								}
							],
							"name": "ParamentersUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "PriceFeedRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "feed",
									"type": "address"
								}
							],
							"name": "PriceFeedSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "TokenSupported",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "TokenUnsupported",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "usdValue6",
									"type": "uint256"
								}
							],
							"name": "WithdrawalMade",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "BANK_MANAGER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "depositCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ethUsdFeed",
							"outputs": [
								{
									"internalType": "contract AggregatorV3Interface",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLatestEthPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSupportedTokens",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getTotalDepositsInUSD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalUSD",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getUserBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxWithdrawal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "priceFeedForToken",
							"outputs": [
								{
									"internalType": "contract AggregatorV3Interface",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "feed",
									"type": "address"
								}
							],
							"name": "setPriceFeed",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "feed",
									"type": "address"
								}
							],
							"name": "supportToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalBankCapacityUSD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalDepositsUSD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "unsupportToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "withdrawalCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"events": {
							"DepositMade(address,address,uint256,uint256)": {
								"params": {
									"amount": "Amount of ETH deposited.",
									"token": "what token it was.",
									"usdValue6": "its equivalent value in USD (with 6 decimal places).",
									"user": "is the user's address. "
								}
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"WithdrawalMade(address,address,uint256,uint256)": {
								"params": {
									"amount": "Amount of ETH withdrawn.",
									"user": "the user's address "
								}
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"_maxWithdrawal": "Maximum withdrawal limit per transaction.",
									"_totalCapacityUSD": "Total ETH capacity of the bank in USD."
								}
							},
							"deposit(address,uint256)": {
								"details": "Check global limit and record deposit.allows a user to deposit ETH or a token.updates their balance and total in USD.emits a deposit event."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getUserBalance(address,address)": {
								"params": {
									"user": "Address of the user to query."
								},
								"returns": {
									"_0": "The ETH balance of the user in the vault."
								}
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"withdraw(address,uint256)": {
								"details": "user to withdraw ETH or token.check limits and balance. update balances and total in USD and perform the secure transfer.issue a withdrawal event.",
								"params": {
									"amount": "The amount of ETH to withdraw and uses secure transfers and custom errors."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/KipuBankV2.sol\":814:14597  contract KipuBank is AccessControl, ReentrancyGuard{... */\n  mstore(0x40, 0xe0)\n    /* \"src/KipuBankV2.sol\":5834:6423  constructor(uint256 _maxWithdrawal, uint256 _totalCapacityUSD, address _ethUsdFeed) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"src/KipuBankV2.sol\":5951:5952  0 */\n  0x00\n    /* \"src/KipuBankV2.sol\":5933:5947  _maxWithdrawal */\n  dup4\n    /* \"src/KipuBankV2.sol\":5933:5952  _maxWithdrawal == 0 */\n  sub\n    /* \"src/KipuBankV2.sol\":5929:5987  if (_maxWithdrawal == 0) revert MaximumWithdrawalInvalid() */\n  tag_8\n  jumpi\n    /* \"src/KipuBankV2.sol\":5961:5987  MaximumWithdrawalInvalid() */\n  mload(0x40)\n  0xf1f13a3800000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"src/KipuBankV2.sol\":5929:5987  if (_maxWithdrawal == 0) revert MaximumWithdrawalInvalid() */\ntag_8:\n    /* \"src/KipuBankV2.sol\":6023:6024  0 */\n  0x00\n    /* \"src/KipuBankV2.sol\":6002:6019  _totalCapacityUSD */\n  dup3\n    /* \"src/KipuBankV2.sol\":6002:6024  _totalCapacityUSD == 0 */\n  sub\n    /* \"src/KipuBankV2.sol\":5998:6054  if (_totalCapacityUSD == 0) revert InvalidBankCapacity() */\n  tag_9\n  jumpi\n    /* \"src/KipuBankV2.sol\":6033:6054  InvalidBankCapacity() */\n  mload(0x40)\n  0xafea1c5700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"src/KipuBankV2.sol\":5998:6054  if (_totalCapacityUSD == 0) revert InvalidBankCapacity() */\ntag_9:\n    /* \"src/KipuBankV2.sol\":6092:6093  0 */\n  0x00\n    /* \"src/KipuBankV2.sol\":6069:6094  _ethUsdFeed == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"src/KipuBankV2.sol\":6069:6080  _ethUsdFeed */\n  dup2\n    /* \"src/KipuBankV2.sol\":6069:6094  _ethUsdFeed == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"src/KipuBankV2.sol\":6065:6118  if (_ethUsdFeed == address(0)) revert InvalidOracle() */\n  tag_10\n  jumpi\n    /* \"src/KipuBankV2.sol\":6103:6118  InvalidOracle() */\n  mload(0x40)\n  0x9589a27d00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"src/KipuBankV2.sol\":6065:6118  if (_ethUsdFeed == address(0)) revert InvalidOracle() */\ntag_10:\n    /* \"src/KipuBankV2.sol\":6148:6162  _maxWithdrawal */\n  dup3\n    /* \"src/KipuBankV2.sol\":6132:6162  maxWithdrawal = _maxWithdrawal */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"src/KipuBankV2.sol\":6196:6213  _totalCapacityUSD */\n  dup2\n    /* \"src/KipuBankV2.sol\":6173:6213  totalBankCapacityUSD = _totalCapacityUSD */\n  0xa0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"src/KipuBankV2.sol\":6259:6270  _ethUsdFeed */\n  dup1\n    /* \"src/KipuBankV2.sol\":6224:6271  ethUsdFeed = AggregatorV3Interface(_ethUsdFeed) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"src/KipuBankV2.sol\":6321:6363  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n  0x00\n    /* \"src/KipuBankV2.sol\":6332:6350  DEFAULT_ADMIN_ROLE */\n  0x00\n  shl\n    /* \"src/KipuBankV2.sol\":6352:6362  msg.sender */\n  caller\n    /* \"src/KipuBankV2.sol\":6321:6331  _grantRole */\n  shl(0x20, tag_12)\n    /* \"src/KipuBankV2.sol\":6321:6363  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n  pop\n    /* \"src/KipuBankV2.sol\":6374:6415  _grantRole(BANK_MANAGER_ROLE, msg.sender) */\n  tag_13\n    /* \"src/KipuBankV2.sol\":1039:1069  keccak256(\"BANK_MANAGER_ROLE\") */\n  0x2d95a8186db49da8bd2356c70cf02038f7de0d6ed39f6766fe2d93d5e7785616\n    /* \"src/KipuBankV2.sol\":6404:6414  msg.sender */\n  caller\n    /* \"src/KipuBankV2.sol\":6374:6384  _grantRole */\n  shl(0x20, tag_12)\n    /* \"src/KipuBankV2.sol\":6374:6415  _grantRole(BANK_MANAGER_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n  pop\n    /* \"src/KipuBankV2.sol\":5834:6423  constructor(uint256 _maxWithdrawal, uint256 _totalCapacityUSD, address _ethUsdFeed) {... */\n  pop\n  pop\n  pop\n    /* \"src/KipuBankV2.sol\":814:14597  contract KipuBank is AccessControl, ReentrancyGuard{... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6232:6236  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n  tag_16\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6261:6265  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6267:6274  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6260  hasRole */\n  shl(0x20, tag_17)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n  tag_18\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6297  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6298:6302  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6311  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6312:6319  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n  tag_19\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6383  _msgSender */\n  shl(0x20, tag_20)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6364:6371  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6358:6362  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6407:6411  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n  swap1\n  pop\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\ntag_18:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6449:6454  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_15:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_17:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2907:2911  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2937:2941  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2950  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2951:2958  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2923:2959  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_20:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_25:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_27:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_28:\n    /* \"#utility.yul\":490:514   */\n  tag_40\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_27\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  0x00\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_41:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_29:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_43\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_28\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:820   */\ntag_30:\n    /* \"#utility.yul\":731:738   */\n  0x00\n    /* \"#utility.yul\":771:813   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":764:769   */\n  dup3\n    /* \"#utility.yul\":760:814   */\n  and\n    /* \"#utility.yul\":749:814   */\n  swap1\n  pop\n    /* \"#utility.yul\":694:820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":826:922   */\ntag_31:\n    /* \"#utility.yul\":863:870   */\n  0x00\n    /* \"#utility.yul\":892:916   */\n  tag_46\n    /* \"#utility.yul\":910:915   */\n  dup3\n    /* \"#utility.yul\":892:916   */\n  tag_30\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":881:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":826:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_32:\n    /* \"#utility.yul\":1001:1025   */\n  tag_48\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_31\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_49\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  0x00\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_49:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_33:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_51\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_32\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1868   */\ntag_3:\n    /* \"#utility.yul\":1293:1299   */\n  0x00\n    /* \"#utility.yul\":1301:1307   */\n  0x00\n    /* \"#utility.yul\":1309:1315   */\n  0x00\n    /* \"#utility.yul\":1358:1360   */\n  0x60\n    /* \"#utility.yul\":1346:1355   */\n  dup5\n    /* \"#utility.yul\":1337:1344   */\n  dup7\n    /* \"#utility.yul\":1333:1356   */\n  sub\n    /* \"#utility.yul\":1329:1361   */\n  slt\n    /* \"#utility.yul\":1326:1445   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":1364:1443   */\n  tag_54\n  tag_25\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1326:1445   */\ntag_53:\n    /* \"#utility.yul\":1484:1485   */\n  0x00\n    /* \"#utility.yul\":1509:1573   */\n  tag_55\n    /* \"#utility.yul\":1565:1572   */\n  dup7\n    /* \"#utility.yul\":1556:1562   */\n  dup3\n    /* \"#utility.yul\":1545:1554   */\n  dup8\n    /* \"#utility.yul\":1541:1563   */\n  add\n    /* \"#utility.yul\":1509:1573   */\n  tag_29\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1499:1573   */\n  swap4\n  pop\n    /* \"#utility.yul\":1455:1583   */\n  pop\n    /* \"#utility.yul\":1622:1624   */\n  0x20\n    /* \"#utility.yul\":1648:1712   */\n  tag_56\n    /* \"#utility.yul\":1704:1711   */\n  dup7\n    /* \"#utility.yul\":1695:1701   */\n  dup3\n    /* \"#utility.yul\":1684:1693   */\n  dup8\n    /* \"#utility.yul\":1680:1702   */\n  add\n    /* \"#utility.yul\":1648:1712   */\n  tag_29\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1638:1712   */\n  swap3\n  pop\n    /* \"#utility.yul\":1593:1722   */\n  pop\n    /* \"#utility.yul\":1761:1763   */\n  0x40\n    /* \"#utility.yul\":1787:1851   */\n  tag_57\n    /* \"#utility.yul\":1843:1850   */\n  dup7\n    /* \"#utility.yul\":1834:1840   */\n  dup3\n    /* \"#utility.yul\":1823:1832   */\n  dup8\n    /* \"#utility.yul\":1819:1841   */\n  add\n    /* \"#utility.yul\":1787:1851   */\n  tag_33\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1777:1851   */\n  swap2\n  pop\n    /* \"#utility.yul\":1732:1861   */\n  pop\n    /* \"#utility.yul\":1205:1868   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"src/KipuBankV2.sol\":814:14597  contract KipuBank is AccessControl, ReentrancyGuard{... */\ntag_14:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xf5e5f362c88d870042340181c8ba3c810faeaf69b620e2b6c1b44f2a54634680\")\n  0x00\n  assignImmutable(\"0x764ce1cb8d17081194abba71ad56d073244079544f5df0278f53a6395c58adf1\")\n  0x00\n  assignImmutable(\"0xcc80724d438a73e21efb48933a149f5b95ade624d1778284bcca17773a1c9da3\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/KipuBankV2.sol\":814:14597  contract KipuBank is AccessControl, ReentrancyGuard{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x91d14854\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xd547741f\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xe7d66d63\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xee3d6866\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf2157052\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf3fef3a3\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf4443d9a\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x91d14854\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x92b9f8f5\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa773a500\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xb3d8bcdc\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd3c7c2c7\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x36568abe\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x47e7ef24\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6805d6ad\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x76e11286\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8009b7bd\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8c0ff5b7\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1e604ea3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2e3441a9\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x30c0b9ec\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"src/KipuBankV2.sol\":14476:14502  DirectTransferNotAllowed() */\n      mload(0x40)\n      0x3ee6509d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":814:14597  contract KipuBank is AccessControl, ReentrancyGuard{... */\n    tag_2:\n        /* \"src/KipuBankV2.sol\":14564:14586  DirectCallNotAllowed() */\n      mload(0x40)\n      0x3921c70300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      revert(0x00, 0x00)\n    tag_34:\n      pop\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/KipuBankV2.sol\":12489:12915  function getTotalDepositsInUSD(address user) external view returns (uint256 totalUSD){... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      revert(0x00, 0x00)\n    tag_41:\n      pop\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      revert(0x00, 0x00)\n    tag_48:\n      pop\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/KipuBankV2.sol\":1638:1704  mapping(address => AggregatorV3Interface) public priceFeedForToken */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      revert(0x00, 0x00)\n    tag_55:\n      pop\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      revert(0x00, 0x00)\n    tag_61:\n      pop\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      stop\n        /* \"src/KipuBankV2.sol\":12200:12403  function getLatestEthPrice() public view returns (uint256) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      revert(0x00, 0x00)\n    tag_66:\n      pop\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      revert(0x00, 0x00)\n    tag_70:\n      pop\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      stop\n        /* \"src/KipuBankV2.sol\":8653:9662  function deposit(address token, uint256 amount) external payable nonReentrant {... */\n    tag_10:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      stop\n        /* \"src/KipuBankV2.sol\":11393:11529  function getUserBalance(address user, address token) external view returns (uint256) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      revert(0x00, 0x00)\n    tag_78:\n      pop\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/KipuBankV2.sol\":7966:8269  function setPriceFeed(address token, address feed) external onlyRole(BANK_MANAGER_ROLE) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      revert(0x00, 0x00)\n    tag_84:\n      pop\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      stop\n        /* \"src/KipuBankV2.sol\":1459:1508  AggregatorV3Interface public immutable ethUsdFeed */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      revert(0x00, 0x00)\n    tag_88:\n      pop\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/KipuBankV2.sol\":1266:1304  uint256 public immutable maxWithdrawal */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      revert(0x00, 0x00)\n    tag_92:\n      pop\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      revert(0x00, 0x00)\n    tag_96:\n      pop\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/KipuBankV2.sol\":6658:7156  function supportToken(address token, address feed) external onlyRole(BANK_MANAGER_ROLE) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      revert(0x00, 0x00)\n    tag_101:\n      pop\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n    tag_102:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_105\n      jumpi\n      revert(0x00, 0x00)\n    tag_105:\n      pop\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/KipuBankV2.sol\":1364:1409  uint256 public immutable totalBankCapacityUSD */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_109\n      jumpi\n      revert(0x00, 0x00)\n    tag_109:\n      pop\n      tag_110\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/KipuBankV2.sol\":2017:2067  mapping(address => uint256) public withdrawalCount */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_113\n      jumpi\n      revert(0x00, 0x00)\n    tag_113:\n      pop\n      tag_114\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_115:\n      tag_116\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/KipuBankV2.sol\":11541:11652  function getSupportedTokens() external  view returns(address[] memory){... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_118\n      jumpi\n      revert(0x00, 0x00)\n    tag_118:\n      pop\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      revert(0x00, 0x00)\n    tag_123:\n      pop\n      tag_124\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_125\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_125:\n      tag_126\n      jump\t// in\n    tag_124:\n      stop\n        /* \"src/KipuBankV2.sol\":2369:2400  uint256 public totalDepositsUSD */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_127\n      jumpi\n      revert(0x00, 0x00)\n    tag_127:\n      pop\n      tag_128\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      tag_130\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/KipuBankV2.sol\":7351:7958  function unsupportToken(address token) external onlyRole(BANK_MANAGER_ROLE) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_131\n      jumpi\n      revert(0x00, 0x00)\n    tag_131:\n      pop\n      tag_132\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_133\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_133:\n      tag_134\n      jump\t// in\n    tag_132:\n      stop\n        /* \"src/KipuBankV2.sol\":995:1069  bytes32 public constant BANK_MANAGER_ROLE = keccak256(\"BANK_MANAGER_ROLE\") */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      revert(0x00, 0x00)\n    tag_135:\n      pop\n      tag_136\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      tag_138\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/KipuBankV2.sol\":10162:11091  function withdraw(address token, uint256 amount) external nonReentrant {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_139\n      jumpi\n      revert(0x00, 0x00)\n    tag_139:\n      pop\n      tag_140\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_141\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_141:\n      tag_142\n      jump\t// in\n    tag_140:\n      stop\n        /* \"src/KipuBankV2.sol\":1903:1950  mapping(address => uint256) public depositCount */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_143\n      jumpi\n      revert(0x00, 0x00)\n    tag_143:\n      pop\n      tag_144\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_145\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_145:\n      tag_146\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      tag_147\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2626:2630  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2664:2696  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2660  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_149\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2736  super.supportsInterface(interfaceId) */\n      tag_150\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2735  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2723  super.supportsInterface */\n      tag_151\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2736  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_149:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2642:2736  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":12489:12915  function getTotalDepositsInUSD(address user) external view returns (uint256 totalUSD){... */\n    tag_45:\n        /* \"src/KipuBankV2.sol\":12557:12573  uint256 totalUSD */\n      0x00\n        /* \"src/KipuBankV2.sol\":12590:12599  uint256 i */\n      0x00\n        /* \"src/KipuBankV2.sol\":12602:12603  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":12590:12603  uint256 i = 0 */\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":12585:12835  for (uint256 i = 0; i < supportedTokens.length; i++) {... */\n    tag_153:\n        /* \"src/KipuBankV2.sol\":12609:12624  supportedTokens */\n      0x06\n        /* \"src/KipuBankV2.sol\":12609:12631  supportedTokens.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":12605:12606  i */\n      dup2\n        /* \"src/KipuBankV2.sol\":12605:12631  i < supportedTokens.length */\n      lt\n        /* \"src/KipuBankV2.sol\":12585:12835  for (uint256 i = 0; i < supportedTokens.length; i++) {... */\n      iszero\n      tag_154\n      jumpi\n        /* \"src/KipuBankV2.sol\":12653:12666  address token */\n      0x00\n        /* \"src/KipuBankV2.sol\":12669:12684  supportedTokens */\n      0x06\n        /* \"src/KipuBankV2.sol\":12685:12686  i */\n      dup3\n        /* \"src/KipuBankV2.sol\":12669:12687  supportedTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_156\n      jumpi\n      tag_157\n      tag_158\n      jump\t// in\n    tag_157:\n    tag_156:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/KipuBankV2.sol\":12653:12687  address token = supportedTokens[i] */\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":12702:12717  uint256 balance */\n      0x00\n        /* \"src/KipuBankV2.sol\":12720:12732  vaultBalance */\n      0x03\n        /* \"src/KipuBankV2.sol\":12720:12738  vaultBalance[user] */\n      0x00\n        /* \"src/KipuBankV2.sol\":12733:12737  user */\n      dup7\n        /* \"src/KipuBankV2.sol\":12720:12738  vaultBalance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV2.sol\":12720:12745  vaultBalance[user][token] */\n      0x00\n        /* \"src/KipuBankV2.sol\":12739:12744  token */\n      dup4\n        /* \"src/KipuBankV2.sol\":12720:12745  vaultBalance[user][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/KipuBankV2.sol\":12702:12745  uint256 balance = vaultBalance[user][token] */\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":12774:12775  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":12764:12771  balance */\n      dup2\n        /* \"src/KipuBankV2.sol\":12764:12775  balance > 0 */\n      gt\n        /* \"src/KipuBankV2.sol\":12760:12823  if (balance > 0) totalUSD += _convertTokenToUSD(token, balance) */\n      iszero\n      tag_160\n      jumpi\n        /* \"src/KipuBankV2.sol\":12789:12823  _convertTokenToUSD(token, balance) */\n      tag_161\n        /* \"src/KipuBankV2.sol\":12808:12813  token */\n      dup3\n        /* \"src/KipuBankV2.sol\":12815:12822  balance */\n      dup3\n        /* \"src/KipuBankV2.sol\":12789:12807  _convertTokenToUSD */\n      tag_162\n        /* \"src/KipuBankV2.sol\":12789:12823  _convertTokenToUSD(token, balance) */\n      jump\t// in\n    tag_161:\n        /* \"src/KipuBankV2.sol\":12777:12823  totalUSD += _convertTokenToUSD(token, balance) */\n      dup5\n      tag_163\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      swap4\n      pop\n        /* \"src/KipuBankV2.sol\":12760:12823  if (balance > 0) totalUSD += _convertTokenToUSD(token, balance) */\n    tag_160:\n        /* \"src/KipuBankV2.sol\":12638:12835  {... */\n      pop\n      pop\n        /* \"src/KipuBankV2.sol\":12633:12636  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"src/KipuBankV2.sol\":12585:12835  for (uint256 i = 0; i < supportedTokens.length; i++) {... */\n      jump(tag_153)\n    tag_154:\n      pop\n        /* \"src/KipuBankV2.sol\":12859:12907  _convertEthToUSD(vaultBalance[user][address(0)]) */\n      tag_165\n        /* \"src/KipuBankV2.sol\":12876:12888  vaultBalance */\n      0x03\n        /* \"src/KipuBankV2.sol\":12876:12894  vaultBalance[user] */\n      0x00\n        /* \"src/KipuBankV2.sol\":12889:12893  user */\n      dup5\n        /* \"src/KipuBankV2.sol\":12876:12894  vaultBalance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV2.sol\":12876:12906  vaultBalance[user][address(0)] */\n      0x00\n        /* \"src/KipuBankV2.sol\":12903:12904  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":12876:12906  vaultBalance[user][address(0)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/KipuBankV2.sol\":12859:12875  _convertEthToUSD */\n      tag_166\n        /* \"src/KipuBankV2.sol\":12859:12907  _convertEthToUSD(vaultBalance[user][address(0)]) */\n      jump\t// in\n    tag_165:\n        /* \"src/KipuBankV2.sol\":12847:12907  totalUSD += _convertEthToUSD(vaultBalance[user][address(0)]) */\n      dup2\n      tag_167\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_167:\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":12489:12915  function getTotalDepositsInUSD(address user) external view returns (uint256 totalUSD){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3851:3858  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3884:3888  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3870:3899  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":1638:1704  mapping(address => AggregatorV3Interface) public priceFeedForToken */\n    tag_58:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      tag_169\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4289:4293  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4288  getRoleAdmin */\n      tag_52\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_171\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_172\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      tag_174\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4317:4321  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4323:4330  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4316  _grantRole */\n      tag_175\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      jump\t// in\n    tag_174:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":12200:12403  function getLatestEthPrice() public view returns (uint256) {... */\n    tag_68:\n        /* \"src/KipuBankV2.sol\":12250:12257  uint256 */\n      0x00\n        /* \"src/KipuBankV2.sol\":12273:12285  int256 price */\n      0x00\n        /* \"src/KipuBankV2.sol\":12295:12305  ethUsdFeed */\n      immutable(\"0xf5e5f362c88d870042340181c8ba3c810faeaf69b620e2b6c1b44f2a54634680\")\n        /* \"src/KipuBankV2.sol\":12295:12321  ethUsdFeed.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"src/KipuBankV2.sol\":12295:12323  ethUsdFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_178\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_178:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_179\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n        /* \"src/KipuBankV2.sol\":12270:12323  (, int256 price, , , ) = ethUsdFeed.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"src/KipuBankV2.sol\":12389:12394  price */\n      dup1\n        /* \"src/KipuBankV2.sol\":12374:12395  return uint256(price) */\n      swap2\n      pop\n      pop\n        /* \"src/KipuBankV2.sol\":12200:12403  function getLatestEthPrice() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5431  _msgSender() */\n      tag_182\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5429  _msgSender */\n      tag_183\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5431  _msgSender() */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5415  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n      tag_184\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5454:5484  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      tag_185\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5517:5521  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5523:5541  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5516  _revokeRole */\n      tag_186\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_185:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":8653:9662  function deposit(address token, uint256 amount) external payable nonReentrant {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_188\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_189\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_188:\n        /* \"src/KipuBankV2.sol\":8742:8759  uint256 usdValue6 */\n      0x00\n        /* \"src/KipuBankV2.sol\":8791:8792  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":8774:8793  token == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/KipuBankV2.sol\":8774:8779  token */\n      dup4\n        /* \"src/KipuBankV2.sol\":8774:8793  token == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/KipuBankV2.sol\":8770:9330  if (token == address(0)) {... */\n      tag_191\n      jumpi\n        /* \"src/KipuBankV2.sol\":8826:8827  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":8813:8822  msg.value */\n      callvalue\n        /* \"src/KipuBankV2.sol\":8813:8827  msg.value == 0 */\n      sub\n        /* \"src/KipuBankV2.sol\":8809:8859  if (msg.value == 0) revert ZeroDepositNotAllowed() */\n      tag_192\n      jumpi\n        /* \"src/KipuBankV2.sol\":8836:8859  ZeroDepositNotAllowed() */\n      mload(0x40)\n      0x8615019900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":8809:8859  if (msg.value == 0) revert ZeroDepositNotAllowed() */\n    tag_192:\n        /* \"src/KipuBankV2.sol\":8886:8913  _convertEthToUSD(msg.value) */\n      tag_193\n        /* \"src/KipuBankV2.sol\":8903:8912  msg.value */\n      callvalue\n        /* \"src/KipuBankV2.sol\":8886:8902  _convertEthToUSD */\n      tag_166\n        /* \"src/KipuBankV2.sol\":8886:8913  _convertEthToUSD(msg.value) */\n      jump\t// in\n    tag_193:\n        /* \"src/KipuBankV2.sol\":8874:8913  usdValue6 = _convertEthToUSD(msg.value) */\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":8968:8977  msg.value */\n      callvalue\n        /* \"src/KipuBankV2.sol\":8928:8940  vaultBalance */\n      0x03\n        /* \"src/KipuBankV2.sol\":8928:8952  vaultBalance[msg.sender] */\n      0x00\n        /* \"src/KipuBankV2.sol\":8941:8951  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":8928:8952  vaultBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV2.sol\":8928:8964  vaultBalance[msg.sender][address(0)] */\n      0x00\n        /* \"src/KipuBankV2.sol\":8961:8962  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":8928:8964  vaultBalance[msg.sender][address(0)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/KipuBankV2.sol\":8928:8977  vaultBalance[msg.sender][address(0)] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_194\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_194:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV2.sol\":8770:9330  if (token == address(0)) {... */\n      jump(tag_195)\n    tag_191:\n        /* \"src/KipuBankV2.sol\":9012:9028  isTokenSupported */\n      0x07\n        /* \"src/KipuBankV2.sol\":9012:9035  isTokenSupported[token] */\n      0x00\n        /* \"src/KipuBankV2.sol\":9029:9034  token */\n      dup5\n        /* \"src/KipuBankV2.sol\":9012:9035  isTokenSupported[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/KipuBankV2.sol\":9007:9063  if (!isTokenSupported[token]) revert TokenNotSupported() */\n      tag_196\n      jumpi\n        /* \"src/KipuBankV2.sol\":9044:9063  TokenNotSupported() */\n      mload(0x40)\n      0x3dd1b30500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":9007:9063  if (!isTokenSupported[token]) revert TokenNotSupported() */\n    tag_196:\n        /* \"src/KipuBankV2.sol\":9091:9092  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":9081:9087  amount */\n      dup3\n        /* \"src/KipuBankV2.sol\":9081:9092  amount == 0 */\n      sub\n        /* \"src/KipuBankV2.sol\":9077:9124  if (amount == 0) revert ZeroDepositNotAllowed() */\n      tag_197\n      jumpi\n        /* \"src/KipuBankV2.sol\":9101:9124  ZeroDepositNotAllowed() */\n      mload(0x40)\n      0x8615019900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":9077:9124  if (amount == 0) revert ZeroDepositNotAllowed() */\n    tag_197:\n        /* \"src/KipuBankV2.sol\":9138:9203  IERC20(token).safeTransferFrom(msg.sender, address(this), amount) */\n      tag_198\n        /* \"src/KipuBankV2.sol\":9169:9179  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":9189:9193  this */\n      address\n        /* \"src/KipuBankV2.sol\":9196:9202  amount */\n      dup5\n        /* \"src/KipuBankV2.sol\":9145:9150  token */\n      dup7\n        /* \"src/KipuBankV2.sol\":9138:9168  IERC20(token).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_199\n      swap1\n        /* \"src/KipuBankV2.sol\":9138:9203  IERC20(token).safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_198:\n        /* \"src/KipuBankV2.sol\":9229:9262  _convertTokenToUSD(token, amount) */\n      tag_200\n        /* \"src/KipuBankV2.sol\":9248:9253  token */\n      dup4\n        /* \"src/KipuBankV2.sol\":9255:9261  amount */\n      dup4\n        /* \"src/KipuBankV2.sol\":9229:9247  _convertTokenToUSD */\n      tag_162\n        /* \"src/KipuBankV2.sol\":9229:9262  _convertTokenToUSD(token, amount) */\n      jump\t// in\n    tag_200:\n        /* \"src/KipuBankV2.sol\":9217:9262  usdValue6 = _convertTokenToUSD(token, amount) */\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":9311:9317  amount */\n      dup2\n        /* \"src/KipuBankV2.sol\":9276:9288  vaultBalance */\n      0x03\n        /* \"src/KipuBankV2.sol\":9276:9300  vaultBalance[msg.sender] */\n      0x00\n        /* \"src/KipuBankV2.sol\":9289:9299  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":9276:9300  vaultBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV2.sol\":9276:9307  vaultBalance[msg.sender][token] */\n      0x00\n        /* \"src/KipuBankV2.sol\":9301:9306  token */\n      dup6\n        /* \"src/KipuBankV2.sol\":9276:9307  vaultBalance[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/KipuBankV2.sol\":9276:9317  vaultBalance[msg.sender][token] += amount */\n      dup3\n      dup3\n      sload\n      tag_201\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_201:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV2.sol\":8770:9330  if (token == address(0)) {... */\n    tag_195:\n        /* \"src/KipuBankV2.sol\":9350:9369  uint256 newTotalUSD */\n      0x00\n        /* \"src/KipuBankV2.sol\":9391:9400  usdValue6 */\n      dup2\n        /* \"src/KipuBankV2.sol\":9372:9388  totalDepositsUSD */\n      sload(0x08)\n        /* \"src/KipuBankV2.sol\":9372:9400  totalDepositsUSD + usdValue6 */\n      tag_202\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_202:\n        /* \"src/KipuBankV2.sol\":9350:9400  uint256 newTotalUSD = totalDepositsUSD + usdValue6 */\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":9429:9449  totalBankCapacityUSD */\n      immutable(\"0x764ce1cb8d17081194abba71ad56d073244079544f5df0278f53a6395c58adf1\")\n        /* \"src/KipuBankV2.sol\":9415:9426  newTotalUSD */\n      dup2\n        /* \"src/KipuBankV2.sol\":9415:9449  newTotalUSD > totalBankCapacityUSD */\n      gt\n        /* \"src/KipuBankV2.sol\":9411:9475  if (newTotalUSD > totalBankCapacityUSD) revert BankCapExceeded() */\n      iszero\n      tag_203\n      jumpi\n        /* \"src/KipuBankV2.sol\":9458:9475  BankCapExceeded() */\n      mload(0x40)\n      0x448f3ca800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":9411:9475  if (newTotalUSD > totalBankCapacityUSD) revert BankCapExceeded() */\n    tag_203:\n        /* \"src/KipuBankV2.sol\":9505:9516  newTotalUSD */\n      dup1\n        /* \"src/KipuBankV2.sol\":9486:9502  totalDepositsUSD */\n      0x08\n        /* \"src/KipuBankV2.sol\":9486:9516  totalDepositsUSD = newTotalUSD */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV2.sol\":9527:9539  depositCount */\n      0x04\n        /* \"src/KipuBankV2.sol\":9527:9551  depositCount[msg.sender] */\n      0x00\n        /* \"src/KipuBankV2.sol\":9540:9550  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":9527:9551  depositCount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/KipuBankV2.sol\":9527:9553  depositCount[msg.sender]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_204\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"src/KipuBankV2.sol\":9595:9600  token */\n      dup4\n        /* \"src/KipuBankV2.sol\":9571:9654  DepositMade(msg.sender, token, token == address(0) ? msg.value : amount, usdValue6) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/KipuBankV2.sol\":9583:9593  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":9571:9654  DepositMade(msg.sender, token, token == address(0) ? msg.value : amount, usdValue6) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x57bad7e3c9efecf6e1f60bbd846b999e9da4a409224287a8df09779f2330135e\n        /* \"src/KipuBankV2.sol\":9619:9620  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":9602:9621  token == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/KipuBankV2.sol\":9602:9607  token */\n      dup8\n        /* \"src/KipuBankV2.sol\":9602:9621  token == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/KipuBankV2.sol\":9602:9642  token == address(0) ? msg.value : amount */\n      tag_206\n      jumpi\n        /* \"src/KipuBankV2.sol\":9636:9642  amount */\n      dup6\n        /* \"src/KipuBankV2.sol\":9602:9642  token == address(0) ? msg.value : amount */\n      jump(tag_207)\n    tag_206:\n        /* \"src/KipuBankV2.sol\":9624:9633  msg.value */\n      callvalue\n        /* \"src/KipuBankV2.sol\":9602:9642  token == address(0) ? msg.value : amount */\n    tag_207:\n        /* \"src/KipuBankV2.sol\":9644:9653  usdValue6 */\n      dup6\n        /* \"src/KipuBankV2.sol\":9571:9654  DepositMade(msg.sender, token, token == address(0) ? msg.value : amount, usdValue6) */\n      mload(0x40)\n      tag_208\n      swap3\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/KipuBankV2.sol\":8731:9662  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_210\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_211\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_210:\n        /* \"src/KipuBankV2.sol\":8653:9662  function deposit(address token, uint256 amount) external payable nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":11393:11529  function getUserBalance(address user, address token) external view returns (uint256) {... */\n    tag_82:\n        /* \"src/KipuBankV2.sol\":11469:11476  uint256 */\n      0x00\n        /* \"src/KipuBankV2.sol\":11496:11508  vaultBalance */\n      0x03\n        /* \"src/KipuBankV2.sol\":11496:11514  vaultBalance[user] */\n      0x00\n        /* \"src/KipuBankV2.sol\":11509:11513  user */\n      dup5\n        /* \"src/KipuBankV2.sol\":11496:11514  vaultBalance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV2.sol\":11496:11521  vaultBalance[user][token] */\n      0x00\n        /* \"src/KipuBankV2.sol\":11515:11520  token */\n      dup4\n        /* \"src/KipuBankV2.sol\":11496:11521  vaultBalance[user][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/KipuBankV2.sol\":11489:11521  return vaultBalance[user][token] */\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":11393:11529  function getUserBalance(address user, address token) external view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":7966:8269  function setPriceFeed(address token, address feed) external onlyRole(BANK_MANAGER_ROLE) {... */\n    tag_87:\n        /* \"src/KipuBankV2.sol\":1039:1069  keccak256(\"BANK_MANAGER_ROLE\") */\n      0x2d95a8186db49da8bd2356c70cf02038f7de0d6ed39f6766fe2d93d5e7785616\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_214\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_172\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_214:\n        /* \"src/KipuBankV2.sol\":8086:8087  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":8069:8088  token == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/KipuBankV2.sol\":8069:8074  token */\n      dup4\n        /* \"src/KipuBankV2.sol\":8069:8088  token == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/KipuBankV2.sol\":8065:8112  if (token == address(0)) revert InvalidOracle() */\n      tag_216\n      jumpi\n        /* \"src/KipuBankV2.sol\":8097:8112  InvalidOracle() */\n      mload(0x40)\n      0x9589a27d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":8065:8112  if (token == address(0)) revert InvalidOracle() */\n    tag_216:\n        /* \"src/KipuBankV2.sol\":8215:8219  feed */\n      dup2\n        /* \"src/KipuBankV2.sol\":8166:8183  priceFeedForToken */\n      0x02\n        /* \"src/KipuBankV2.sol\":8166:8190  priceFeedForToken[token] */\n      0x00\n        /* \"src/KipuBankV2.sol\":8184:8189  token */\n      dup6\n        /* \"src/KipuBankV2.sol\":8166:8190  priceFeedForToken[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/KipuBankV2.sol\":8166:8220  priceFeedForToken[token] = AggregatorV3Interface(feed) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV2.sol\":8256:8260  feed */\n      dup2\n        /* \"src/KipuBankV2.sol\":8236:8261  PriceFeedSet(token, feed) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/KipuBankV2.sol\":8249:8254  token */\n      dup4\n        /* \"src/KipuBankV2.sol\":8236:8261  PriceFeedSet(token, feed) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd2d8394cf7549a5ddbc2ba3dd7b2de8d53c891472d1f2907008ed6a10045fdae\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/KipuBankV2.sol\":7966:8269  function setPriceFeed(address token, address feed) external onlyRole(BANK_MANAGER_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":1459:1508  AggregatorV3Interface public immutable ethUsdFeed */\n    tag_90:\n      immutable(\"0xf5e5f362c88d870042340181c8ba3c810faeaf69b620e2b6c1b44f2a54634680\")\n      dup2\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":1266:1304  uint256 public immutable maxWithdrawal */\n    tag_94:\n      immutable(\"0xcc80724d438a73e21efb48933a149f5b95ade624d1778284bcca17773a1c9da3\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2907:2911  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2937:2941  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2950  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2951:2958  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2923:2959  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":6658:7156  function supportToken(address token, address feed) external onlyRole(BANK_MANAGER_ROLE) {... */\n    tag_104:\n        /* \"src/KipuBankV2.sol\":1039:1069  keccak256(\"BANK_MANAGER_ROLE\") */\n      0x2d95a8186db49da8bd2356c70cf02038f7de0d6ed39f6766fe2d93d5e7785616\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_219\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_172\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_219:\n        /* \"src/KipuBankV2.sol\":6778:6779  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":6761:6780  token == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/KipuBankV2.sol\":6761:6766  token */\n      dup4\n        /* \"src/KipuBankV2.sol\":6761:6780  token == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/KipuBankV2.sol\":6757:6808  if (token == address(0)) revert TokenNotSupported() */\n      tag_221\n      jumpi\n        /* \"src/KipuBankV2.sol\":6789:6808  TokenNotSupported() */\n      mload(0x40)\n      0x3dd1b30500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":6757:6808  if (token == address(0)) revert TokenNotSupported() */\n    tag_221:\n        /* \"src/KipuBankV2.sol\":6824:6840  isTokenSupported */\n      0x07\n        /* \"src/KipuBankV2.sol\":6824:6847  isTokenSupported[token] */\n      0x00\n        /* \"src/KipuBankV2.sol\":6841:6846  token */\n      dup5\n        /* \"src/KipuBankV2.sol\":6824:6847  isTokenSupported[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/KipuBankV2.sol\":6819:6989  if (!isTokenSupported[token]) {... */\n      tag_222\n      jumpi\n        /* \"src/KipuBankV2.sol\":6864:6879  supportedTokens */\n      0x06\n        /* \"src/KipuBankV2.sol\":6885:6890  token */\n      dup4\n        /* \"src/KipuBankV2.sol\":6864:6891  supportedTokens.push(token) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV2.sol\":6932:6936  true */\n      0x01\n        /* \"src/KipuBankV2.sol\":6906:6922  isTokenSupported */\n      0x07\n        /* \"src/KipuBankV2.sol\":6906:6929  isTokenSupported[token] */\n      0x00\n        /* \"src/KipuBankV2.sol\":6923:6928  token */\n      dup6\n        /* \"src/KipuBankV2.sol\":6906:6929  isTokenSupported[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/KipuBankV2.sol\":6906:6936  isTokenSupported[token] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV2.sol\":6971:6976  token */\n      dup3\n        /* \"src/KipuBankV2.sol\":6956:6977  TokenSupported(token) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xea3145306a87baeba6bb1a8b5c8d3744f840a81cb436b3509f64fc978600cdfb\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/KipuBankV2.sol\":6819:6989  if (!isTokenSupported[token]) {... */\n    tag_222:\n        /* \"src/KipuBankV2.sol\":7019:7020  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":7003:7021  feed != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/KipuBankV2.sol\":7003:7007  feed */\n      dup3\n        /* \"src/KipuBankV2.sol\":7003:7021  feed != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/KipuBankV2.sol\":6999:7149  if (feed != address(0)) {... */\n      tag_224\n      jumpi\n        /* \"src/KipuBankV2.sol\":7087:7091  feed */\n      dup2\n        /* \"src/KipuBankV2.sol\":7038:7055  priceFeedForToken */\n      0x02\n        /* \"src/KipuBankV2.sol\":7038:7062  priceFeedForToken[token] */\n      0x00\n        /* \"src/KipuBankV2.sol\":7056:7061  token */\n      dup6\n        /* \"src/KipuBankV2.sol\":7038:7062  priceFeedForToken[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/KipuBankV2.sol\":7038:7092  priceFeedForToken[token] = AggregatorV3Interface(feed) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV2.sol\":7132:7136  feed */\n      dup2\n        /* \"src/KipuBankV2.sol\":7112:7137  PriceFeedSet(token, feed) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/KipuBankV2.sol\":7125:7130  token */\n      dup4\n        /* \"src/KipuBankV2.sol\":7112:7137  PriceFeedSet(token, feed) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd2d8394cf7549a5ddbc2ba3dd7b2de8d53c891472d1f2907008ed6a10045fdae\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/KipuBankV2.sol\":6999:7149  if (feed != address(0)) {... */\n    tag_224:\n        /* \"src/KipuBankV2.sol\":6658:7156  function supportToken(address token, address feed) external onlyRole(BANK_MANAGER_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_107:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":1364:1409  uint256 public immutable totalBankCapacityUSD */\n    tag_111:\n      immutable(\"0x764ce1cb8d17081194abba71ad56d073244079544f5df0278f53a6395c58adf1\")\n      dup2\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":2017:2067  mapping(address => uint256) public withdrawalCount */\n    tag_116:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":11541:11652  function getSupportedTokens() external  view returns(address[] memory){... */\n    tag_120:\n        /* \"src/KipuBankV2.sol\":11594:11610  address[] memory */\n      0x60\n        /* \"src/KipuBankV2.sol\":11629:11644  supportedTokens */\n      0x06\n        /* \"src/KipuBankV2.sol\":11622:11644  return supportedTokens */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_226\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_227:\n      dup2\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_227\n      jumpi\n    tag_226:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":11541:11652  function getSupportedTokens() external  view returns(address[] memory){... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      tag_228\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4706:4710  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4705  getRoleAdmin */\n      tag_52\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_230\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_172\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_230:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      tag_232\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4735:4739  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4741:4748  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4734  _revokeRole */\n      tag_186\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      jump\t// in\n    tag_232:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":2369:2400  uint256 public totalDepositsUSD */\n    tag_129:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":7351:7958  function unsupportToken(address token) external onlyRole(BANK_MANAGER_ROLE) {... */\n    tag_134:\n        /* \"src/KipuBankV2.sol\":1039:1069  keccak256(\"BANK_MANAGER_ROLE\") */\n      0x2d95a8186db49da8bd2356c70cf02038f7de0d6ed39f6766fe2d93d5e7785616\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_234\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_172\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_234:\n        /* \"src/KipuBankV2.sol\":7443:7459  isTokenSupported */\n      0x07\n        /* \"src/KipuBankV2.sol\":7443:7466  isTokenSupported[token] */\n      0x00\n        /* \"src/KipuBankV2.sol\":7460:7465  token */\n      dup4\n        /* \"src/KipuBankV2.sol\":7443:7466  isTokenSupported[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/KipuBankV2.sol\":7438:7494  if (!isTokenSupported[token]) revert TokenNotSupported() */\n      tag_236\n      jumpi\n        /* \"src/KipuBankV2.sol\":7475:7494  TokenNotSupported() */\n      mload(0x40)\n      0x3dd1b30500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":7438:7494  if (!isTokenSupported[token]) revert TokenNotSupported() */\n    tag_236:\n        /* \"src/KipuBankV2.sol\":7531:7536  false */\n      0x00\n        /* \"src/KipuBankV2.sol\":7505:7521  isTokenSupported */\n      0x07\n        /* \"src/KipuBankV2.sol\":7505:7528  isTokenSupported[token] */\n      0x00\n        /* \"src/KipuBankV2.sol\":7522:7527  token */\n      dup5\n        /* \"src/KipuBankV2.sol\":7505:7528  isTokenSupported[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/KipuBankV2.sol\":7505:7536  isTokenSupported[token] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV2.sol\":7561:7570  uint256 i */\n      0x00\n        /* \"src/KipuBankV2.sol\":7573:7574  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":7561:7574  uint256 i = 0 */\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":7556:7831  for (uint256 i = 0; i < supportedTokens.length; i++) {... */\n    tag_237:\n        /* \"src/KipuBankV2.sol\":7580:7595  supportedTokens */\n      0x06\n        /* \"src/KipuBankV2.sol\":7580:7602  supportedTokens.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":7576:7577  i */\n      dup2\n        /* \"src/KipuBankV2.sol\":7576:7602  i < supportedTokens.length */\n      lt\n        /* \"src/KipuBankV2.sol\":7556:7831  for (uint256 i = 0; i < supportedTokens.length; i++) {... */\n      iszero\n      tag_238\n      jumpi\n        /* \"src/KipuBankV2.sol\":7650:7655  token */\n      dup3\n        /* \"src/KipuBankV2.sol\":7628:7655  supportedTokens[i] == token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/KipuBankV2.sol\":7628:7643  supportedTokens */\n      0x06\n        /* \"src/KipuBankV2.sol\":7644:7645  i */\n      dup3\n        /* \"src/KipuBankV2.sol\":7628:7646  supportedTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_240\n      jumpi\n      tag_241\n      tag_158\n      jump\t// in\n    tag_241:\n    tag_240:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/KipuBankV2.sol\":7628:7655  supportedTokens[i] == token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/KipuBankV2.sol\":7624:7820  if (supportedTokens[i] == token) {... */\n      tag_243\n      jumpi\n        /* \"src/KipuBankV2.sol\":7697:7712  supportedTokens */\n      0x06\n        /* \"src/KipuBankV2.sol\":7738:7739  1 */\n      0x01\n        /* \"src/KipuBankV2.sol\":7713:7728  supportedTokens */\n      0x06\n        /* \"src/KipuBankV2.sol\":7713:7735  supportedTokens.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":7713:7739  supportedTokens.length - 1 */\n      tag_244\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n        /* \"src/KipuBankV2.sol\":7697:7740  supportedTokens[supportedTokens.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_246\n      jumpi\n      tag_247\n      tag_158\n      jump\t// in\n    tag_247:\n    tag_246:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/KipuBankV2.sol\":7676:7691  supportedTokens */\n      0x06\n        /* \"src/KipuBankV2.sol\":7692:7693  i */\n      dup3\n        /* \"src/KipuBankV2.sol\":7676:7694  supportedTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_249\n      jumpi\n      tag_250\n      tag_158\n      jump\t// in\n    tag_250:\n    tag_249:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n        /* \"src/KipuBankV2.sol\":7676:7740  supportedTokens[i] = supportedTokens[supportedTokens.length - 1] */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV2.sol\":7759:7774  supportedTokens */\n      0x06\n        /* \"src/KipuBankV2.sol\":7759:7780  supportedTokens.pop() */\n      dup1\n      sload\n      dup1\n      tag_252\n      jumpi\n      tag_253\n      tag_254\n      jump\t// in\n    tag_253:\n    tag_252:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"src/KipuBankV2.sol\":7799:7804  break */\n      jump(tag_238)\n        /* \"src/KipuBankV2.sol\":7624:7820  if (supportedTokens[i] == token) {... */\n    tag_243:\n        /* \"src/KipuBankV2.sol\":7604:7607  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"src/KipuBankV2.sol\":7556:7831  for (uint256 i = 0; i < supportedTokens.length; i++) {... */\n      jump(tag_237)\n    tag_238:\n      pop\n        /* \"src/KipuBankV2.sol\":7848:7865  priceFeedForToken */\n      0x02\n        /* \"src/KipuBankV2.sol\":7848:7872  priceFeedForToken[token] */\n      0x00\n        /* \"src/KipuBankV2.sol\":7866:7871  token */\n      dup4\n        /* \"src/KipuBankV2.sol\":7848:7872  priceFeedForToken[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/KipuBankV2.sol\":7841:7872  delete priceFeedForToken[token] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"src/KipuBankV2.sol\":7905:7910  token */\n      dup2\n        /* \"src/KipuBankV2.sol\":7888:7911  TokenUnsupported(token) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf940d38196f30e7ff3eb255dd42db8d99a75c1ac112199d4fc314ce6460bfc0c\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/KipuBankV2.sol\":7944:7949  token */\n      dup2\n        /* \"src/KipuBankV2.sol\":7927:7950  PriceFeedRemoved(token) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfd58461c4683df397133c7e91fe2aa71559919b405f9e09c9c3af7e875f54e3b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/KipuBankV2.sol\":7351:7958  function unsupportToken(address token) external onlyRole(BANK_MANAGER_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":995:1069  bytes32 public constant BANK_MANAGER_ROLE = keccak256(\"BANK_MANAGER_ROLE\") */\n    tag_137:\n        /* \"src/KipuBankV2.sol\":1039:1069  keccak256(\"BANK_MANAGER_ROLE\") */\n      0x2d95a8186db49da8bd2356c70cf02038f7de0d6ed39f6766fe2d93d5e7785616\n        /* \"src/KipuBankV2.sol\":995:1069  bytes32 public constant BANK_MANAGER_ROLE = keccak256(\"BANK_MANAGER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":10162:11091  function withdraw(address token, uint256 amount) external nonReentrant {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_257\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_189\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_257:\n        /* \"src/KipuBankV2.sol\":10267:10268  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":10257:10263  amount */\n      dup2\n        /* \"src/KipuBankV2.sol\":10257:10268  amount == 0 */\n      sub\n        /* \"src/KipuBankV2.sol\":10254:10292  if(amount == 0) revert InvalidAmount() */\n      tag_259\n      jumpi\n        /* \"src/KipuBankV2.sol\":10277:10292  InvalidAmount() */\n      mload(0x40)\n      0x2c5211c600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":10254:10292  if(amount == 0) revert InvalidAmount() */\n    tag_259:\n        /* \"src/KipuBankV2.sol\":10315:10328  maxWithdrawal */\n      immutable(\"0xcc80724d438a73e21efb48933a149f5b95ade624d1778284bcca17773a1c9da3\")\n        /* \"src/KipuBankV2.sol\":10306:10312  amount */\n      dup2\n        /* \"src/KipuBankV2.sol\":10306:10328  amount > maxWithdrawal */\n      gt\n        /* \"src/KipuBankV2.sol\":10303:10360  if(amount > maxWithdrawal) revert MaxWithdrawalExceeded() */\n      iszero\n      tag_260\n      jumpi\n        /* \"src/KipuBankV2.sol\":10337:10360  MaxWithdrawalExceeded() */\n      mload(0x40)\n      0x73a7c91000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":10303:10360  if(amount > maxWithdrawal) revert MaxWithdrawalExceeded() */\n    tag_260:\n        /* \"src/KipuBankV2.sol\":10381:10396  uint256 balance */\n      0x00\n        /* \"src/KipuBankV2.sol\":10399:10411  vaultBalance */\n      0x03\n        /* \"src/KipuBankV2.sol\":10399:10423  vaultBalance[msg.sender] */\n      0x00\n        /* \"src/KipuBankV2.sol\":10412:10422  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":10399:10423  vaultBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV2.sol\":10399:10430  vaultBalance[msg.sender][token] */\n      0x00\n        /* \"src/KipuBankV2.sol\":10424:10429  token */\n      dup5\n        /* \"src/KipuBankV2.sol\":10399:10430  vaultBalance[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/KipuBankV2.sol\":10381:10430  uint256 balance = vaultBalance[msg.sender][token] */\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":10455:10461  amount */\n      dup2\n        /* \"src/KipuBankV2.sol\":10445:10452  balance */\n      dup2\n        /* \"src/KipuBankV2.sol\":10445:10461  balance < amount */\n      lt\n        /* \"src/KipuBankV2.sol\":10441:10491  if (balance < amount) revert InsufficientBalance() */\n      iszero\n      tag_261\n      jumpi\n        /* \"src/KipuBankV2.sol\":10470:10491  InsufficientBalance() */\n      mload(0x40)\n      0xf4d678b800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":10441:10491  if (balance < amount) revert InsufficientBalance() */\n    tag_261:\n        /* \"src/KipuBankV2.sol\":10512:10529  uint256 usdValue6 */\n      0x00\n        /* \"src/KipuBankV2.sol\":10549:10550  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":10532:10551  token == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/KipuBankV2.sol\":10532:10537  token */\n      dup5\n        /* \"src/KipuBankV2.sol\":10532:10551  token == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/KipuBankV2.sol\":10532:10614  token == address(0) ? _convertEthToUSD(amount) : _convertTokenToUSD(token, amount) */\n      tag_262\n      jumpi\n        /* \"src/KipuBankV2.sol\":10581:10614  _convertTokenToUSD(token, amount) */\n      tag_263\n        /* \"src/KipuBankV2.sol\":10600:10605  token */\n      dup5\n        /* \"src/KipuBankV2.sol\":10607:10613  amount */\n      dup5\n        /* \"src/KipuBankV2.sol\":10581:10599  _convertTokenToUSD */\n      tag_162\n        /* \"src/KipuBankV2.sol\":10581:10614  _convertTokenToUSD(token, amount) */\n      jump\t// in\n    tag_263:\n        /* \"src/KipuBankV2.sol\":10532:10614  token == address(0) ? _convertEthToUSD(amount) : _convertTokenToUSD(token, amount) */\n      jump(tag_264)\n    tag_262:\n        /* \"src/KipuBankV2.sol\":10554:10578  _convertEthToUSD(amount) */\n      tag_265\n        /* \"src/KipuBankV2.sol\":10571:10577  amount */\n      dup4\n        /* \"src/KipuBankV2.sol\":10554:10570  _convertEthToUSD */\n      tag_166\n        /* \"src/KipuBankV2.sol\":10554:10578  _convertEthToUSD(amount) */\n      jump\t// in\n    tag_265:\n        /* \"src/KipuBankV2.sol\":10532:10614  token == address(0) ? _convertEthToUSD(amount) : _convertTokenToUSD(token, amount) */\n    tag_264:\n        /* \"src/KipuBankV2.sol\":10512:10614  uint256 usdValue6 = token == address(0) ? _convertEthToUSD(amount) : _convertTokenToUSD(token, amount) */\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":10671:10677  amount */\n      dup3\n        /* \"src/KipuBankV2.sol\":10661:10668  balance */\n      dup3\n        /* \"src/KipuBankV2.sol\":10661:10677  balance - amount */\n      tag_266\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_266:\n        /* \"src/KipuBankV2.sol\":10627:10639  vaultBalance */\n      0x03\n        /* \"src/KipuBankV2.sol\":10627:10651  vaultBalance[msg.sender] */\n      0x00\n        /* \"src/KipuBankV2.sol\":10640:10650  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":10627:10651  vaultBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV2.sol\":10627:10658  vaultBalance[msg.sender][token] */\n      0x00\n        /* \"src/KipuBankV2.sol\":10652:10657  token */\n      dup7\n        /* \"src/KipuBankV2.sol\":10627:10658  vaultBalance[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV2.sol\":10627:10677  vaultBalance[msg.sender][token] = balance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV2.sol\":10708:10717  usdValue6 */\n      dup1\n        /* \"src/KipuBankV2.sol\":10688:10704  totalDepositsUSD */\n      0x08\n      0x00\n        /* \"src/KipuBankV2.sol\":10688:10717  totalDepositsUSD -= usdValue6 */\n      dup3\n      dup3\n      sload\n      tag_267\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_267:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV2.sol\":10728:10743  withdrawalCount */\n      0x05\n        /* \"src/KipuBankV2.sol\":10728:10755  withdrawalCount[msg.sender] */\n      0x00\n        /* \"src/KipuBankV2.sol\":10744:10754  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":10728:10755  withdrawalCount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/KipuBankV2.sol\":10728:10757  withdrawalCount[msg.sender]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_268\n      swap1\n      tag_205\n      jump\t// in\n    tag_268:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"src/KipuBankV2.sol\":10799:10800  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":10782:10801  token == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/KipuBankV2.sol\":10782:10787  token */\n      dup5\n        /* \"src/KipuBankV2.sol\":10782:10801  token == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/KipuBankV2.sol\":10778:11014  if (token == address(0)) {... */\n      tag_269\n      jumpi\n        /* \"src/KipuBankV2.sol\":10819:10831  bool success */\n      0x00\n        /* \"src/KipuBankV2.sol\":10837:10847  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":10837:10852  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/KipuBankV2.sol\":10860:10866  amount */\n      dup5\n        /* \"src/KipuBankV2.sol\":10837:10871  msg.sender.call{value: amount}(\"\") */\n      mload(0x40)\n      tag_270\n      swap1\n      tag_271\n      jump\t// in\n    tag_270:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_274\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_273)\n    tag_274:\n      0x60\n      swap2\n      pop\n    tag_273:\n      pop\n        /* \"src/KipuBankV2.sol\":10818:10871  (bool success, ) = msg.sender.call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":10891:10898  success */\n      dup1\n        /* \"src/KipuBankV2.sol\":10886:10923  if (!success) revert TransferFailed() */\n      tag_275\n      jumpi\n        /* \"src/KipuBankV2.sol\":10907:10923  TransferFailed() */\n      mload(0x40)\n      0x90b8ec1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":10886:10923  if (!success) revert TransferFailed() */\n    tag_275:\n        /* \"src/KipuBankV2.sol\":10803:10935  {... */\n      pop\n        /* \"src/KipuBankV2.sol\":10778:11014  if (token == address(0)) {... */\n      jump(tag_276)\n    tag_269:\n        /* \"src/KipuBankV2.sol\":10956:11002  IERC20(token).safeTransfer(msg.sender, amount) */\n      tag_277\n        /* \"src/KipuBankV2.sol\":10983:10993  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":10995:11001  amount */\n      dup5\n        /* \"src/KipuBankV2.sol\":10963:10968  token */\n      dup7\n        /* \"src/KipuBankV2.sol\":10956:10982  IERC20(token).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_278\n      swap1\n        /* \"src/KipuBankV2.sol\":10956:11002  IERC20(token).safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_277:\n        /* \"src/KipuBankV2.sol\":10778:11014  if (token == address(0)) {... */\n    tag_276:\n        /* \"src/KipuBankV2.sol\":11058:11063  token */\n      dup4\n        /* \"src/KipuBankV2.sol\":11031:11083  WithdrawalMade(msg.sender, token, amount, usdValue6) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/KipuBankV2.sol\":11046:11056  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":11031:11083  WithdrawalMade(msg.sender, token, amount, usdValue6) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xde1d532173c6de1e3937c7af1cb92745c738980729f53ac451a725f929f3b798\n        /* \"src/KipuBankV2.sol\":11065:11071  amount */\n      dup6\n        /* \"src/KipuBankV2.sol\":11073:11082  usdValue6 */\n      dup5\n        /* \"src/KipuBankV2.sol\":11031:11083  WithdrawalMade(msg.sender, token, amount, usdValue6) */\n      mload(0x40)\n      tag_279\n      swap3\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/KipuBankV2.sol\":10233:11091  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_280\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_211\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_280:\n        /* \"src/KipuBankV2.sol\":10162:11091  function withdraw(address token, uint256 amount) external nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":1903:1950  mapping(address => uint256) public depositCount */\n    tag_146:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":730:876  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":806:810  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":844:869  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:840  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":822:869  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":730:876  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":13240:13714  function _convertTokenToUSD(address token, uint256 amount) internal view returns (uint256) {... */\n    tag_162:\n        /* \"src/KipuBankV2.sol\":13322:13329  uint256 */\n      0x00\n        /* \"src/KipuBankV2.sol\":13342:13368  AggregatorV3Interface feed */\n      0x00\n        /* \"src/KipuBankV2.sol\":13371:13388  priceFeedForToken */\n      0x02\n        /* \"src/KipuBankV2.sol\":13371:13395  priceFeedForToken[token] */\n      0x00\n        /* \"src/KipuBankV2.sol\":13389:13394  token */\n      dup6\n        /* \"src/KipuBankV2.sol\":13371:13395  priceFeedForToken[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/KipuBankV2.sol\":13342:13395  AggregatorV3Interface feed = priceFeedForToken[token] */\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":13435:13436  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":13410:13437  address(feed) == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/KipuBankV2.sol\":13418:13422  feed */\n      dup2\n        /* \"src/KipuBankV2.sol\":13410:13437  address(feed) == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/KipuBankV2.sol\":13406:13461  if (address(feed) == address(0)) revert InvalidOracle() */\n      tag_283\n      jumpi\n        /* \"src/KipuBankV2.sol\":13446:13461  InvalidOracle() */\n      mload(0x40)\n      0x9589a27d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":13406:13461  if (address(feed) == address(0)) revert InvalidOracle() */\n    tag_283:\n        /* \"src/KipuBankV2.sol\":13475:13487  int256 price */\n      0x00\n        /* \"src/KipuBankV2.sol\":13497:13501  feed */\n      dup2\n        /* \"src/KipuBankV2.sol\":13497:13517  feed.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"src/KipuBankV2.sol\":13497:13519  feed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_285\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_285:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_286\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_286:\n        /* \"src/KipuBankV2.sol\":13472:13519  (, int256 price, , , ) = feed.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"src/KipuBankV2.sol\":13530:13544  uint8 decimals */\n      0x00\n        /* \"src/KipuBankV2.sol\":13562:13567  token */\n      dup6\n        /* \"src/KipuBankV2.sol\":13547:13577  IERC20Metadata(token).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"src/KipuBankV2.sol\":13547:13579  IERC20Metadata(token).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_288\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_288:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_289\n      swap2\n      swap1\n      tag_290\n      jump\t// in\n    tag_289:\n        /* \"src/KipuBankV2.sol\":13530:13579  uint8 decimals = IERC20Metadata(token).decimals() */\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":13590:13608  uint256 normalized */\n      0x00\n        /* \"src/KipuBankV2.sol\":13611:13653  _normalizeToUSDCDecimals(amount, decimals) */\n      tag_291\n        /* \"src/KipuBankV2.sol\":13636:13642  amount */\n      dup7\n        /* \"src/KipuBankV2.sol\":13644:13652  decimals */\n      dup4\n        /* \"src/KipuBankV2.sol\":13611:13635  _normalizeToUSDCDecimals */\n      tag_292\n        /* \"src/KipuBankV2.sol\":13611:13653  _normalizeToUSDCDecimals(amount, decimals) */\n      jump\t// in\n    tag_291:\n        /* \"src/KipuBankV2.sol\":13590:13653  uint256 normalized = _normalizeToUSDCDecimals(amount, decimals) */\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":13703:13706  1e8 */\n      0x05f5e100\n        /* \"src/KipuBankV2.sol\":13693:13698  price */\n      dup4\n        /* \"src/KipuBankV2.sol\":13672:13682  normalized */\n      dup3\n        /* \"src/KipuBankV2.sol\":13672:13699  normalized * uint256(price) */\n      tag_293\n      swap2\n      swap1\n      tag_294\n      jump\t// in\n    tag_293:\n        /* \"src/KipuBankV2.sol\":13671:13706  (normalized * uint256(price)) / 1e8 */\n      tag_295\n      swap2\n      swap1\n      tag_296\n      jump\t// in\n    tag_295:\n        /* \"src/KipuBankV2.sol\":13664:13706  return (normalized * uint256(price)) / 1e8 */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"src/KipuBankV2.sol\":13240:13714  function _convertTokenToUSD(address token, uint256 amount) internal view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":13030:13232  function _convertEthToUSD(uint256 amount) internal view returns (uint256) {... */\n    tag_166:\n        /* \"src/KipuBankV2.sol\":13095:13102  uint256 */\n      0x00\n        /* \"src/KipuBankV2.sol\":13115:13128  uint256 price */\n      0x00\n        /* \"src/KipuBankV2.sol\":13131:13150  getLatestEthPrice() */\n      tag_298\n        /* \"src/KipuBankV2.sol\":13131:13148  getLatestEthPrice */\n      tag_68\n        /* \"src/KipuBankV2.sol\":13131:13150  getLatestEthPrice() */\n      jump\t// in\n    tag_298:\n        /* \"src/KipuBankV2.sol\":13115:13150  uint256 price = getLatestEthPrice() */\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":13202:13205  1e8 */\n      0x05f5e100\n        /* \"src/KipuBankV2.sol\":13193:13198  price */\n      dup2\n        /* \"src/KipuBankV2.sol\":13184:13190  amount */\n      dup5\n        /* \"src/KipuBankV2.sol\":13184:13198  amount * price */\n      tag_299\n      swap2\n      swap1\n      tag_294\n      jump\t// in\n    tag_299:\n        /* \"src/KipuBankV2.sol\":13183:13205  (amount * price) / 1e8 */\n      tag_300\n      swap2\n      swap1\n      tag_296\n      jump\t// in\n    tag_300:\n        /* \"src/KipuBankV2.sol\":13176:13205  return (amount * price) / 1e8 */\n      swap2\n      pop\n      pop\n        /* \"src/KipuBankV2.sol\":13030:13232  function _convertEthToUSD(uint256 amount) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      tag_302\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3252:3256  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3270  _msgSender() */\n      tag_303\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3268  _msgSender */\n      tag_183\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3270  _msgSender() */\n      jump\t// in\n    tag_303:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3251  _checkRole */\n      tag_304\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_302:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6232:6236  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      tag_306\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6261:6265  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6267:6274  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6260  hasRole */\n      tag_99\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      jump\t// in\n    tag_306:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n      tag_307\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6297  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6298:6302  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6311  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6312:6319  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n      tag_308\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6383  _msgSender */\n      tag_183\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n      jump\t// in\n    tag_308:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6364:6371  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6358:6362  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6407:6411  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n      swap1\n      pop\n      jump(tag_305)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n    tag_307:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6449:6454  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_305:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6786:6790  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      tag_312\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6814:6818  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6820:6827  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6813  hasRole */\n      tag_99\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      jump\t// in\n    tag_312:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n      iszero\n      tag_313\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6876:6881  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6850  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6851:6855  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6864  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6873  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6865:6872  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6873  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6881  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6939  _msgSender() */\n      tag_314\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6937  _msgSender */\n      tag_183\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6939  _msgSender() */\n      jump\t// in\n    tag_314:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6918:6925  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6912:6916  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6961:6965  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6954:6965  return true */\n      swap1\n      pop\n      jump(tag_311)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n    tag_313:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7003:7008  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6996:7008  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_311:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_317\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_318\n      swap1\n      tag_319\n      jump\t// in\n    tag_318:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_317:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_321\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_322\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_323\n      jump\t// in\n    tag_322:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_324\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_321:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_327\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_328\n      swap3\n      swap2\n      swap1\n      tag_329\n      jump\t// in\n    tag_328:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_324\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_327:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":13947:14305  function _normalizeToUSDCDecimals(uint256 amount, uint8 tokenDecimals) internal pure returns (uint256){... */\n    tag_292:\n        /* \"src/KipuBankV2.sol\":14041:14048  uint256 */\n      0x00\n        /* \"src/KipuBankV2.sol\":14080:14081  6 */\n      0x06\n        /* \"src/KipuBankV2.sol\":14064:14077  tokenDecimals */\n      dup3\n        /* \"src/KipuBankV2.sol\":14064:14081  tokenDecimals > 6 */\n      0xff\n      and\n      gt\n        /* \"src/KipuBankV2.sol\":14060:14298  if (tokenDecimals > 6) {... */\n      iszero\n      tag_331\n      jumpi\n        /* \"src/KipuBankV2.sol\":14138:14139  6 */\n      0x06\n        /* \"src/KipuBankV2.sol\":14122:14135  tokenDecimals */\n      dup3\n        /* \"src/KipuBankV2.sol\":14122:14139  tokenDecimals - 6 */\n      tag_332\n      swap2\n      swap1\n      tag_333\n      jump\t// in\n    tag_332:\n        /* \"src/KipuBankV2.sol\":14115:14117  10 */\n      0x0a\n        /* \"src/KipuBankV2.sol\":14115:14140  10 ** (tokenDecimals - 6) */\n      tag_334\n      swap2\n      swap1\n      tag_335\n      jump\t// in\n    tag_334:\n        /* \"src/KipuBankV2.sol\":14105:14111  amount */\n      dup4\n        /* \"src/KipuBankV2.sol\":14105:14141  amount / (10 ** (tokenDecimals - 6)) */\n      tag_336\n      swap2\n      swap1\n      tag_296\n      jump\t// in\n    tag_336:\n        /* \"src/KipuBankV2.sol\":14098:14141  return amount / (10 ** (tokenDecimals - 6)) */\n      swap1\n      pop\n      jump(tag_330)\n        /* \"src/KipuBankV2.sol\":14060:14298  if (tokenDecimals > 6) {... */\n    tag_331:\n        /* \"src/KipuBankV2.sol\":14179:14180  6 */\n      0x06\n        /* \"src/KipuBankV2.sol\":14163:14176  tokenDecimals */\n      dup3\n        /* \"src/KipuBankV2.sol\":14163:14180  tokenDecimals < 6 */\n      0xff\n      and\n      lt\n        /* \"src/KipuBankV2.sol\":14159:14298  if (tokenDecimals < 6) {... */\n      iszero\n      tag_338\n      jumpi\n        /* \"src/KipuBankV2.sol\":14225:14238  tokenDecimals */\n      dup2\n        /* \"src/KipuBankV2.sol\":14221:14222  6 */\n      0x06\n        /* \"src/KipuBankV2.sol\":14221:14238  6 - tokenDecimals */\n      tag_339\n      swap2\n      swap1\n      tag_333\n      jump\t// in\n    tag_339:\n        /* \"src/KipuBankV2.sol\":14214:14216  10 */\n      0x0a\n        /* \"src/KipuBankV2.sol\":14214:14239  10 ** (6 - tokenDecimals) */\n      tag_340\n      swap2\n      swap1\n      tag_335\n      jump\t// in\n    tag_340:\n        /* \"src/KipuBankV2.sol\":14204:14210  amount */\n      dup4\n        /* \"src/KipuBankV2.sol\":14204:14240  amount * (10 ** (6 - tokenDecimals)) */\n      tag_341\n      swap2\n      swap1\n      tag_294\n      jump\t// in\n    tag_341:\n        /* \"src/KipuBankV2.sol\":14197:14240  return amount * (10 ** (6 - tokenDecimals)) */\n      swap1\n      pop\n      jump(tag_330)\n        /* \"src/KipuBankV2.sol\":14159:14298  if (tokenDecimals < 6) {... */\n    tag_338:\n        /* \"src/KipuBankV2.sol\":14280:14286  amount */\n      dup3\n        /* \"src/KipuBankV2.sol\":14273:14286  return amount */\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":13947:14305  function _normalizeToUSDCDecimals(uint256 amount, uint8 tokenDecimals) internal pure returns (uint256){... */\n    tag_330:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_304:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      tag_344\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3504:3508  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3510:3517  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3503  hasRole */\n      tag_99\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      jump\t// in\n    tag_344:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n      tag_345\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3574:3581  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3583:3587  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_346\n      swap3\n      swap2\n      swap1\n      tag_347\n      jump\t// in\n    tag_346:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n    tag_345:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_324:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_349\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_349:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_350\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_351)\n    tag_350:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_351:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_352\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_353\n      swap2\n      swap1\n      tag_354\n      jump\t// in\n    tag_353:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_352:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_356:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_358:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_359:\n        /* \"#utility.yul\":561:584   */\n      tag_415\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_358\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_416\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      0x00\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_416:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_360:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_418\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_359\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_37:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_421\n      tag_356\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":833:952   */\n    tag_420:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_422\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_360\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_361:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_362:\n        /* \"#utility.yul\":1268:1289   */\n      tag_425\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_361\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_40:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_427\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_362\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1644   */\n    tag_363:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1595:1637   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1588:1593   */\n      dup3\n        /* \"#utility.yul\":1584:1638   */\n      and\n        /* \"#utility.yul\":1573:1638   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1650:1746   */\n    tag_364:\n        /* \"#utility.yul\":1687:1694   */\n      0x00\n        /* \"#utility.yul\":1716:1740   */\n      tag_430\n        /* \"#utility.yul\":1734:1739   */\n      dup3\n        /* \"#utility.yul\":1716:1740   */\n      tag_363\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":1705:1740   */\n      swap1\n      pop\n        /* \"#utility.yul\":1650:1746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1752:1874   */\n    tag_365:\n        /* \"#utility.yul\":1825:1849   */\n      tag_432\n        /* \"#utility.yul\":1843:1848   */\n      dup2\n        /* \"#utility.yul\":1825:1849   */\n      tag_364\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":1818:1823   */\n      dup2\n        /* \"#utility.yul\":1815:1850   */\n      eq\n        /* \"#utility.yul\":1805:1868   */\n      tag_433\n      jumpi\n        /* \"#utility.yul\":1864:1865   */\n      0x00\n        /* \"#utility.yul\":1861:1862   */\n      0x00\n        /* \"#utility.yul\":1854:1866   */\n      revert\n        /* \"#utility.yul\":1805:1868   */\n    tag_433:\n        /* \"#utility.yul\":1752:1874   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1880:2019   */\n    tag_366:\n        /* \"#utility.yul\":1926:1931   */\n      0x00\n        /* \"#utility.yul\":1964:1970   */\n      dup2\n        /* \"#utility.yul\":1951:1971   */\n      calldataload\n        /* \"#utility.yul\":1942:1971   */\n      swap1\n      pop\n        /* \"#utility.yul\":1980:2013   */\n      tag_435\n        /* \"#utility.yul\":2007:2012   */\n      dup2\n        /* \"#utility.yul\":1980:2013   */\n      tag_365\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":1880:2019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2025:2354   */\n    tag_44:\n        /* \"#utility.yul\":2084:2090   */\n      0x00\n        /* \"#utility.yul\":2133:2135   */\n      0x20\n        /* \"#utility.yul\":2121:2130   */\n      dup3\n        /* \"#utility.yul\":2112:2119   */\n      dup5\n        /* \"#utility.yul\":2108:2131   */\n      sub\n        /* \"#utility.yul\":2104:2136   */\n      slt\n        /* \"#utility.yul\":2101:2220   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":2139:2218   */\n      tag_438\n      tag_356\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":2101:2220   */\n    tag_437:\n        /* \"#utility.yul\":2259:2260   */\n      0x00\n        /* \"#utility.yul\":2284:2337   */\n      tag_439\n        /* \"#utility.yul\":2329:2336   */\n      dup5\n        /* \"#utility.yul\":2320:2326   */\n      dup3\n        /* \"#utility.yul\":2309:2318   */\n      dup6\n        /* \"#utility.yul\":2305:2327   */\n      add\n        /* \"#utility.yul\":2284:2337   */\n      tag_366\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":2274:2337   */\n      swap2\n      pop\n        /* \"#utility.yul\":2230:2347   */\n      pop\n        /* \"#utility.yul\":2025:2354   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2360:2437   */\n    tag_367:\n        /* \"#utility.yul\":2397:2404   */\n      0x00\n        /* \"#utility.yul\":2426:2431   */\n      dup2\n        /* \"#utility.yul\":2415:2431   */\n      swap1\n      pop\n        /* \"#utility.yul\":2360:2437   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2443:2561   */\n    tag_368:\n        /* \"#utility.yul\":2530:2554   */\n      tag_442\n        /* \"#utility.yul\":2548:2553   */\n      dup2\n        /* \"#utility.yul\":2530:2554   */\n      tag_367\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":2525:2528   */\n      dup3\n        /* \"#utility.yul\":2518:2555   */\n      mstore\n        /* \"#utility.yul\":2443:2561   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2567:2789   */\n    tag_47:\n        /* \"#utility.yul\":2660:2664   */\n      0x00\n        /* \"#utility.yul\":2698:2700   */\n      0x20\n        /* \"#utility.yul\":2687:2696   */\n      dup3\n        /* \"#utility.yul\":2683:2701   */\n      add\n        /* \"#utility.yul\":2675:2701   */\n      swap1\n      pop\n        /* \"#utility.yul\":2711:2782   */\n      tag_444\n        /* \"#utility.yul\":2779:2780   */\n      0x00\n        /* \"#utility.yul\":2768:2777   */\n      dup4\n        /* \"#utility.yul\":2764:2781   */\n      add\n        /* \"#utility.yul\":2755:2761   */\n      dup5\n        /* \"#utility.yul\":2711:2782   */\n      tag_368\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":2567:2789   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2795:2872   */\n    tag_369:\n        /* \"#utility.yul\":2832:2839   */\n      0x00\n        /* \"#utility.yul\":2861:2866   */\n      dup2\n        /* \"#utility.yul\":2850:2866   */\n      swap1\n      pop\n        /* \"#utility.yul\":2795:2872   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2878:3000   */\n    tag_370:\n        /* \"#utility.yul\":2951:2975   */\n      tag_447\n        /* \"#utility.yul\":2969:2974   */\n      dup2\n        /* \"#utility.yul\":2951:2975   */\n      tag_369\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":2944:2949   */\n      dup2\n        /* \"#utility.yul\":2941:2976   */\n      eq\n        /* \"#utility.yul\":2931:2994   */\n      tag_448\n      jumpi\n        /* \"#utility.yul\":2990:2991   */\n      0x00\n        /* \"#utility.yul\":2987:2988   */\n      0x00\n        /* \"#utility.yul\":2980:2992   */\n      revert\n        /* \"#utility.yul\":2931:2994   */\n    tag_448:\n        /* \"#utility.yul\":2878:3000   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3006:3145   */\n    tag_371:\n        /* \"#utility.yul\":3052:3057   */\n      0x00\n        /* \"#utility.yul\":3090:3096   */\n      dup2\n        /* \"#utility.yul\":3077:3097   */\n      calldataload\n        /* \"#utility.yul\":3068:3097   */\n      swap1\n      pop\n        /* \"#utility.yul\":3106:3139   */\n      tag_450\n        /* \"#utility.yul\":3133:3138   */\n      dup2\n        /* \"#utility.yul\":3106:3139   */\n      tag_370\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":3006:3145   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3151:3480   */\n    tag_51:\n        /* \"#utility.yul\":3210:3216   */\n      0x00\n        /* \"#utility.yul\":3259:3261   */\n      0x20\n        /* \"#utility.yul\":3247:3256   */\n      dup3\n        /* \"#utility.yul\":3238:3245   */\n      dup5\n        /* \"#utility.yul\":3234:3257   */\n      sub\n        /* \"#utility.yul\":3230:3262   */\n      slt\n        /* \"#utility.yul\":3227:3346   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":3265:3344   */\n      tag_453\n      tag_356\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":3227:3346   */\n    tag_452:\n        /* \"#utility.yul\":3385:3386   */\n      0x00\n        /* \"#utility.yul\":3410:3463   */\n      tag_454\n        /* \"#utility.yul\":3455:3462   */\n      dup5\n        /* \"#utility.yul\":3446:3452   */\n      dup3\n        /* \"#utility.yul\":3435:3444   */\n      dup6\n        /* \"#utility.yul\":3431:3453   */\n      add\n        /* \"#utility.yul\":3410:3463   */\n      tag_371\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":3400:3463   */\n      swap2\n      pop\n        /* \"#utility.yul\":3356:3473   */\n      pop\n        /* \"#utility.yul\":3151:3480   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3486:3604   */\n    tag_372:\n        /* \"#utility.yul\":3573:3597   */\n      tag_456\n        /* \"#utility.yul\":3591:3596   */\n      dup2\n        /* \"#utility.yul\":3573:3597   */\n      tag_369\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":3568:3571   */\n      dup3\n        /* \"#utility.yul\":3561:3598   */\n      mstore\n        /* \"#utility.yul\":3486:3604   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3610:3832   */\n    tag_54:\n        /* \"#utility.yul\":3703:3707   */\n      0x00\n        /* \"#utility.yul\":3741:3743   */\n      0x20\n        /* \"#utility.yul\":3730:3739   */\n      dup3\n        /* \"#utility.yul\":3726:3744   */\n      add\n        /* \"#utility.yul\":3718:3744   */\n      swap1\n      pop\n        /* \"#utility.yul\":3754:3825   */\n      tag_458\n        /* \"#utility.yul\":3822:3823   */\n      0x00\n        /* \"#utility.yul\":3811:3820   */\n      dup4\n        /* \"#utility.yul\":3807:3824   */\n      add\n        /* \"#utility.yul\":3798:3804   */\n      dup5\n        /* \"#utility.yul\":3754:3825   */\n      tag_372\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":3610:3832   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3838:3898   */\n    tag_373:\n        /* \"#utility.yul\":3866:3869   */\n      0x00\n        /* \"#utility.yul\":3887:3892   */\n      dup2\n        /* \"#utility.yul\":3880:3892   */\n      swap1\n      pop\n        /* \"#utility.yul\":3838:3898   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3904:4046   */\n    tag_374:\n        /* \"#utility.yul\":3954:3963   */\n      0x00\n        /* \"#utility.yul\":3987:4040   */\n      tag_461\n        /* \"#utility.yul\":4005:4039   */\n      tag_462\n        /* \"#utility.yul\":4014:4038   */\n      tag_463\n        /* \"#utility.yul\":4032:4037   */\n      dup5\n        /* \"#utility.yul\":4014:4038   */\n      tag_363\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":4005:4039   */\n      tag_373\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":3987:4040   */\n      tag_363\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":3974:4040   */\n      swap1\n      pop\n        /* \"#utility.yul\":3904:4046   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4052:4178   */\n    tag_375:\n        /* \"#utility.yul\":4102:4111   */\n      0x00\n        /* \"#utility.yul\":4135:4172   */\n      tag_465\n        /* \"#utility.yul\":4166:4171   */\n      dup3\n        /* \"#utility.yul\":4135:4172   */\n      tag_374\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":4122:4172   */\n      swap1\n      pop\n        /* \"#utility.yul\":4052:4178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4184:4338   */\n    tag_376:\n        /* \"#utility.yul\":4262:4271   */\n      0x00\n        /* \"#utility.yul\":4295:4332   */\n      tag_467\n        /* \"#utility.yul\":4326:4331   */\n      dup3\n        /* \"#utility.yul\":4295:4332   */\n      tag_375\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":4282:4332   */\n      swap1\n      pop\n        /* \"#utility.yul\":4184:4338   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4344:4531   */\n    tag_377:\n        /* \"#utility.yul\":4459:4524   */\n      tag_469\n        /* \"#utility.yul\":4518:4523   */\n      dup2\n        /* \"#utility.yul\":4459:4524   */\n      tag_376\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":4454:4457   */\n      dup3\n        /* \"#utility.yul\":4447:4525   */\n      mstore\n        /* \"#utility.yul\":4344:4531   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4537:4815   */\n    tag_60:\n        /* \"#utility.yul\":4658:4662   */\n      0x00\n        /* \"#utility.yul\":4696:4698   */\n      0x20\n        /* \"#utility.yul\":4685:4694   */\n      dup3\n        /* \"#utility.yul\":4681:4699   */\n      add\n        /* \"#utility.yul\":4673:4699   */\n      swap1\n      pop\n        /* \"#utility.yul\":4709:4808   */\n      tag_471\n        /* \"#utility.yul\":4805:4806   */\n      0x00\n        /* \"#utility.yul\":4794:4803   */\n      dup4\n        /* \"#utility.yul\":4790:4807   */\n      add\n        /* \"#utility.yul\":4781:4787   */\n      dup5\n        /* \"#utility.yul\":4709:4808   */\n      tag_377\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":4537:4815   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4821:5295   */\n    tag_64:\n        /* \"#utility.yul\":4889:4895   */\n      0x00\n        /* \"#utility.yul\":4897:4903   */\n      0x00\n        /* \"#utility.yul\":4946:4948   */\n      0x40\n        /* \"#utility.yul\":4934:4943   */\n      dup4\n        /* \"#utility.yul\":4925:4932   */\n      dup6\n        /* \"#utility.yul\":4921:4944   */\n      sub\n        /* \"#utility.yul\":4917:4949   */\n      slt\n        /* \"#utility.yul\":4914:5033   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":4952:5031   */\n      tag_474\n      tag_356\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":4914:5033   */\n    tag_473:\n        /* \"#utility.yul\":5072:5073   */\n      0x00\n        /* \"#utility.yul\":5097:5150   */\n      tag_475\n        /* \"#utility.yul\":5142:5149   */\n      dup6\n        /* \"#utility.yul\":5133:5139   */\n      dup3\n        /* \"#utility.yul\":5122:5131   */\n      dup7\n        /* \"#utility.yul\":5118:5140   */\n      add\n        /* \"#utility.yul\":5097:5150   */\n      tag_371\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":5087:5150   */\n      swap3\n      pop\n        /* \"#utility.yul\":5043:5160   */\n      pop\n        /* \"#utility.yul\":5199:5201   */\n      0x20\n        /* \"#utility.yul\":5225:5278   */\n      tag_476\n        /* \"#utility.yul\":5270:5277   */\n      dup6\n        /* \"#utility.yul\":5261:5267   */\n      dup3\n        /* \"#utility.yul\":5250:5259   */\n      dup7\n        /* \"#utility.yul\":5246:5268   */\n      add\n        /* \"#utility.yul\":5225:5278   */\n      tag_366\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":5215:5278   */\n      swap2\n      pop\n        /* \"#utility.yul\":5170:5288   */\n      pop\n        /* \"#utility.yul\":4821:5295   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5301:5423   */\n    tag_378:\n        /* \"#utility.yul\":5374:5398   */\n      tag_478\n        /* \"#utility.yul\":5392:5397   */\n      dup2\n        /* \"#utility.yul\":5374:5398   */\n      tag_367\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":5367:5372   */\n      dup2\n        /* \"#utility.yul\":5364:5399   */\n      eq\n        /* \"#utility.yul\":5354:5417   */\n      tag_479\n      jumpi\n        /* \"#utility.yul\":5413:5414   */\n      0x00\n        /* \"#utility.yul\":5410:5411   */\n      0x00\n        /* \"#utility.yul\":5403:5415   */\n      revert\n        /* \"#utility.yul\":5354:5417   */\n    tag_479:\n        /* \"#utility.yul\":5301:5423   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5429:5568   */\n    tag_379:\n        /* \"#utility.yul\":5475:5480   */\n      0x00\n        /* \"#utility.yul\":5513:5519   */\n      dup2\n        /* \"#utility.yul\":5500:5520   */\n      calldataload\n        /* \"#utility.yul\":5491:5520   */\n      swap1\n      pop\n        /* \"#utility.yul\":5529:5562   */\n      tag_481\n        /* \"#utility.yul\":5556:5561   */\n      dup2\n        /* \"#utility.yul\":5529:5562   */\n      tag_378\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":5429:5568   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5574:6048   */\n    tag_76:\n        /* \"#utility.yul\":5642:5648   */\n      0x00\n        /* \"#utility.yul\":5650:5656   */\n      0x00\n        /* \"#utility.yul\":5699:5701   */\n      0x40\n        /* \"#utility.yul\":5687:5696   */\n      dup4\n        /* \"#utility.yul\":5678:5685   */\n      dup6\n        /* \"#utility.yul\":5674:5697   */\n      sub\n        /* \"#utility.yul\":5670:5702   */\n      slt\n        /* \"#utility.yul\":5667:5786   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":5705:5784   */\n      tag_484\n      tag_356\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":5667:5786   */\n    tag_483:\n        /* \"#utility.yul\":5825:5826   */\n      0x00\n        /* \"#utility.yul\":5850:5903   */\n      tag_485\n        /* \"#utility.yul\":5895:5902   */\n      dup6\n        /* \"#utility.yul\":5886:5892   */\n      dup3\n        /* \"#utility.yul\":5875:5884   */\n      dup7\n        /* \"#utility.yul\":5871:5893   */\n      add\n        /* \"#utility.yul\":5850:5903   */\n      tag_366\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":5840:5903   */\n      swap3\n      pop\n        /* \"#utility.yul\":5796:5913   */\n      pop\n        /* \"#utility.yul\":5952:5954   */\n      0x20\n        /* \"#utility.yul\":5978:6031   */\n      tag_486\n        /* \"#utility.yul\":6023:6030   */\n      dup6\n        /* \"#utility.yul\":6014:6020   */\n      dup3\n        /* \"#utility.yul\":6003:6012   */\n      dup7\n        /* \"#utility.yul\":5999:6021   */\n      add\n        /* \"#utility.yul\":5978:6031   */\n      tag_379\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":5968:6031   */\n      swap2\n      pop\n        /* \"#utility.yul\":5923:6041   */\n      pop\n        /* \"#utility.yul\":5574:6048   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6054:6528   */\n    tag_81:\n        /* \"#utility.yul\":6122:6128   */\n      0x00\n        /* \"#utility.yul\":6130:6136   */\n      0x00\n        /* \"#utility.yul\":6179:6181   */\n      0x40\n        /* \"#utility.yul\":6167:6176   */\n      dup4\n        /* \"#utility.yul\":6158:6165   */\n      dup6\n        /* \"#utility.yul\":6154:6177   */\n      sub\n        /* \"#utility.yul\":6150:6182   */\n      slt\n        /* \"#utility.yul\":6147:6266   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":6185:6264   */\n      tag_489\n      tag_356\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":6147:6266   */\n    tag_488:\n        /* \"#utility.yul\":6305:6306   */\n      0x00\n        /* \"#utility.yul\":6330:6383   */\n      tag_490\n        /* \"#utility.yul\":6375:6382   */\n      dup6\n        /* \"#utility.yul\":6366:6372   */\n      dup3\n        /* \"#utility.yul\":6355:6364   */\n      dup7\n        /* \"#utility.yul\":6351:6373   */\n      add\n        /* \"#utility.yul\":6330:6383   */\n      tag_366\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":6320:6383   */\n      swap3\n      pop\n        /* \"#utility.yul\":6276:6393   */\n      pop\n        /* \"#utility.yul\":6432:6434   */\n      0x20\n        /* \"#utility.yul\":6458:6511   */\n      tag_491\n        /* \"#utility.yul\":6503:6510   */\n      dup6\n        /* \"#utility.yul\":6494:6500   */\n      dup3\n        /* \"#utility.yul\":6483:6492   */\n      dup7\n        /* \"#utility.yul\":6479:6501   */\n      add\n        /* \"#utility.yul\":6458:6511   */\n      tag_366\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":6448:6511   */\n      swap2\n      pop\n        /* \"#utility.yul\":6403:6521   */\n      pop\n        /* \"#utility.yul\":6054:6528   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6534:6648   */\n    tag_380:\n        /* \"#utility.yul\":6601:6607   */\n      0x00\n        /* \"#utility.yul\":6635:6640   */\n      dup2\n        /* \"#utility.yul\":6629:6641   */\n      mload\n        /* \"#utility.yul\":6619:6641   */\n      swap1\n      pop\n        /* \"#utility.yul\":6534:6648   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6654:6838   */\n    tag_381:\n        /* \"#utility.yul\":6753:6764   */\n      0x00\n        /* \"#utility.yul\":6787:6793   */\n      dup3\n        /* \"#utility.yul\":6782:6785   */\n      dup3\n        /* \"#utility.yul\":6775:6794   */\n      mstore\n        /* \"#utility.yul\":6827:6831   */\n      0x20\n        /* \"#utility.yul\":6822:6825   */\n      dup3\n        /* \"#utility.yul\":6818:6832   */\n      add\n        /* \"#utility.yul\":6803:6832   */\n      swap1\n      pop\n        /* \"#utility.yul\":6654:6838   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6844:6976   */\n    tag_382:\n        /* \"#utility.yul\":6911:6915   */\n      0x00\n        /* \"#utility.yul\":6934:6937   */\n      dup2\n        /* \"#utility.yul\":6926:6937   */\n      swap1\n      pop\n        /* \"#utility.yul\":6964:6968   */\n      0x20\n        /* \"#utility.yul\":6959:6962   */\n      dup3\n        /* \"#utility.yul\":6955:6969   */\n      add\n        /* \"#utility.yul\":6947:6969   */\n      swap1\n      pop\n        /* \"#utility.yul\":6844:6976   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6982:7090   */\n    tag_383:\n        /* \"#utility.yul\":7059:7083   */\n      tag_496\n        /* \"#utility.yul\":7077:7082   */\n      dup2\n        /* \"#utility.yul\":7059:7083   */\n      tag_364\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":7054:7057   */\n      dup3\n        /* \"#utility.yul\":7047:7084   */\n      mstore\n        /* \"#utility.yul\":6982:7090   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7096:7275   */\n    tag_384:\n        /* \"#utility.yul\":7165:7175   */\n      0x00\n        /* \"#utility.yul\":7186:7232   */\n      tag_498\n        /* \"#utility.yul\":7228:7231   */\n      dup4\n        /* \"#utility.yul\":7220:7226   */\n      dup4\n        /* \"#utility.yul\":7186:7232   */\n      tag_383\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":7264:7268   */\n      0x20\n        /* \"#utility.yul\":7259:7262   */\n      dup4\n        /* \"#utility.yul\":7255:7269   */\n      add\n        /* \"#utility.yul\":7241:7269   */\n      swap1\n      pop\n        /* \"#utility.yul\":7096:7275   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7281:7394   */\n    tag_385:\n        /* \"#utility.yul\":7351:7355   */\n      0x00\n        /* \"#utility.yul\":7383:7387   */\n      0x20\n        /* \"#utility.yul\":7378:7381   */\n      dup3\n        /* \"#utility.yul\":7374:7388   */\n      add\n        /* \"#utility.yul\":7366:7388   */\n      swap1\n      pop\n        /* \"#utility.yul\":7281:7394   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7430:8162   */\n    tag_386:\n        /* \"#utility.yul\":7549:7552   */\n      0x00\n        /* \"#utility.yul\":7578:7632   */\n      tag_501\n        /* \"#utility.yul\":7626:7631   */\n      dup3\n        /* \"#utility.yul\":7578:7632   */\n      tag_380\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":7648:7734   */\n      tag_502\n        /* \"#utility.yul\":7727:7733   */\n      dup2\n        /* \"#utility.yul\":7722:7725   */\n      dup6\n        /* \"#utility.yul\":7648:7734   */\n      tag_381\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":7641:7734   */\n      swap4\n      pop\n        /* \"#utility.yul\":7758:7814   */\n      tag_503\n        /* \"#utility.yul\":7808:7813   */\n      dup4\n        /* \"#utility.yul\":7758:7814   */\n      tag_382\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":7837:7844   */\n      dup1\n        /* \"#utility.yul\":7868:7869   */\n      0x00\n        /* \"#utility.yul\":7853:8137   */\n    tag_504:\n        /* \"#utility.yul\":7878:7884   */\n      dup4\n        /* \"#utility.yul\":7875:7876   */\n      dup2\n        /* \"#utility.yul\":7872:7885   */\n      lt\n        /* \"#utility.yul\":7853:8137   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":7954:7960   */\n      dup2\n        /* \"#utility.yul\":7948:7961   */\n      mload\n        /* \"#utility.yul\":7981:8044   */\n      tag_507\n        /* \"#utility.yul\":8040:8043   */\n      dup9\n        /* \"#utility.yul\":8025:8038   */\n      dup3\n        /* \"#utility.yul\":7981:8044   */\n      tag_384\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":7974:8044   */\n      swap8\n      pop\n        /* \"#utility.yul\":8067:8127   */\n      tag_508\n        /* \"#utility.yul\":8120:8126   */\n      dup4\n        /* \"#utility.yul\":8067:8127   */\n      tag_385\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":8057:8127   */\n      swap3\n      pop\n        /* \"#utility.yul\":7913:8137   */\n      pop\n        /* \"#utility.yul\":7900:7901   */\n      0x01\n        /* \"#utility.yul\":7897:7898   */\n      dup2\n        /* \"#utility.yul\":7893:7902   */\n      add\n        /* \"#utility.yul\":7888:7902   */\n      swap1\n      pop\n        /* \"#utility.yul\":7853:8137   */\n      jump(tag_504)\n    tag_506:\n        /* \"#utility.yul\":7857:7871   */\n      pop\n        /* \"#utility.yul\":8153:8156   */\n      dup6\n        /* \"#utility.yul\":8146:8156   */\n      swap4\n      pop\n        /* \"#utility.yul\":7554:8162   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":7430:8162   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8168:8541   */\n    tag_122:\n        /* \"#utility.yul\":8311:8315   */\n      0x00\n        /* \"#utility.yul\":8349:8351   */\n      0x20\n        /* \"#utility.yul\":8338:8347   */\n      dup3\n        /* \"#utility.yul\":8334:8352   */\n      add\n        /* \"#utility.yul\":8326:8352   */\n      swap1\n      pop\n        /* \"#utility.yul\":8398:8407   */\n      dup2\n        /* \"#utility.yul\":8392:8396   */\n      dup2\n        /* \"#utility.yul\":8388:8408   */\n      sub\n        /* \"#utility.yul\":8384:8385   */\n      0x00\n        /* \"#utility.yul\":8373:8382   */\n      dup4\n        /* \"#utility.yul\":8369:8386   */\n      add\n        /* \"#utility.yul\":8362:8409   */\n      mstore\n        /* \"#utility.yul\":8426:8534   */\n      tag_510\n        /* \"#utility.yul\":8529:8533   */\n      dup2\n        /* \"#utility.yul\":8520:8526   */\n      dup5\n        /* \"#utility.yul\":8426:8534   */\n      tag_386\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":8418:8534   */\n      swap1\n      pop\n        /* \"#utility.yul\":8168:8541   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8547:8727   */\n    tag_158:\n        /* \"#utility.yul\":8595:8672   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8592:8593   */\n      0x00\n        /* \"#utility.yul\":8585:8673   */\n      mstore\n        /* \"#utility.yul\":8692:8696   */\n      0x32\n        /* \"#utility.yul\":8689:8690   */\n      0x04\n        /* \"#utility.yul\":8682:8697   */\n      mstore\n        /* \"#utility.yul\":8716:8720   */\n      0x24\n        /* \"#utility.yul\":8713:8714   */\n      0x00\n        /* \"#utility.yul\":8706:8721   */\n      revert\n        /* \"#utility.yul\":8733:8913   */\n    tag_387:\n        /* \"#utility.yul\":8781:8858   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8778:8779   */\n      0x00\n        /* \"#utility.yul\":8771:8859   */\n      mstore\n        /* \"#utility.yul\":8878:8882   */\n      0x11\n        /* \"#utility.yul\":8875:8876   */\n      0x04\n        /* \"#utility.yul\":8868:8883   */\n      mstore\n        /* \"#utility.yul\":8902:8906   */\n      0x24\n        /* \"#utility.yul\":8899:8900   */\n      0x00\n        /* \"#utility.yul\":8892:8907   */\n      revert\n        /* \"#utility.yul\":8919:9110   */\n    tag_164:\n        /* \"#utility.yul\":8959:8962   */\n      0x00\n        /* \"#utility.yul\":8978:8998   */\n      tag_514\n        /* \"#utility.yul\":8996:8997   */\n      dup3\n        /* \"#utility.yul\":8978:8998   */\n      tag_367\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":8973:8998   */\n      swap2\n      pop\n        /* \"#utility.yul\":9012:9032   */\n      tag_515\n        /* \"#utility.yul\":9030:9031   */\n      dup4\n        /* \"#utility.yul\":9012:9032   */\n      tag_367\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":9007:9032   */\n      swap3\n      pop\n        /* \"#utility.yul\":9055:9056   */\n      dup3\n        /* \"#utility.yul\":9052:9053   */\n      dup3\n        /* \"#utility.yul\":9048:9057   */\n      add\n        /* \"#utility.yul\":9041:9057   */\n      swap1\n      pop\n        /* \"#utility.yul\":9076:9079   */\n      dup1\n        /* \"#utility.yul\":9073:9074   */\n      dup3\n        /* \"#utility.yul\":9070:9080   */\n      gt\n        /* \"#utility.yul\":9067:9103   */\n      iszero\n      tag_516\n      jumpi\n        /* \"#utility.yul\":9083:9101   */\n      tag_517\n      tag_387\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":9067:9103   */\n    tag_516:\n        /* \"#utility.yul\":8919:9110   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9116:9221   */\n    tag_388:\n        /* \"#utility.yul\":9152:9159   */\n      0x00\n        /* \"#utility.yul\":9192:9214   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":9185:9190   */\n      dup3\n        /* \"#utility.yul\":9181:9215   */\n      and\n        /* \"#utility.yul\":9170:9215   */\n      swap1\n      pop\n        /* \"#utility.yul\":9116:9221   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9227:9347   */\n    tag_389:\n        /* \"#utility.yul\":9299:9322   */\n      tag_520\n        /* \"#utility.yul\":9316:9321   */\n      dup2\n        /* \"#utility.yul\":9299:9322   */\n      tag_388\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":9292:9297   */\n      dup2\n        /* \"#utility.yul\":9289:9323   */\n      eq\n        /* \"#utility.yul\":9279:9341   */\n      tag_521\n      jumpi\n        /* \"#utility.yul\":9337:9338   */\n      0x00\n        /* \"#utility.yul\":9334:9335   */\n      0x00\n        /* \"#utility.yul\":9327:9339   */\n      revert\n        /* \"#utility.yul\":9279:9341   */\n    tag_521:\n        /* \"#utility.yul\":9227:9347   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9353:9494   */\n    tag_390:\n        /* \"#utility.yul\":9409:9414   */\n      0x00\n        /* \"#utility.yul\":9440:9446   */\n      dup2\n        /* \"#utility.yul\":9434:9447   */\n      mload\n        /* \"#utility.yul\":9425:9447   */\n      swap1\n      pop\n        /* \"#utility.yul\":9456:9488   */\n      tag_523\n        /* \"#utility.yul\":9482:9487   */\n      dup2\n        /* \"#utility.yul\":9456:9488   */\n      tag_389\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":9353:9494   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9500:9576   */\n    tag_391:\n        /* \"#utility.yul\":9536:9543   */\n      0x00\n        /* \"#utility.yul\":9565:9570   */\n      dup2\n        /* \"#utility.yul\":9554:9570   */\n      swap1\n      pop\n        /* \"#utility.yul\":9500:9576   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9582:9702   */\n    tag_392:\n        /* \"#utility.yul\":9654:9677   */\n      tag_526\n        /* \"#utility.yul\":9671:9676   */\n      dup2\n        /* \"#utility.yul\":9654:9677   */\n      tag_391\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":9647:9652   */\n      dup2\n        /* \"#utility.yul\":9644:9678   */\n      eq\n        /* \"#utility.yul\":9634:9696   */\n      tag_527\n      jumpi\n        /* \"#utility.yul\":9692:9693   */\n      0x00\n        /* \"#utility.yul\":9689:9690   */\n      0x00\n        /* \"#utility.yul\":9682:9694   */\n      revert\n        /* \"#utility.yul\":9634:9696   */\n    tag_527:\n        /* \"#utility.yul\":9582:9702   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9708:9849   */\n    tag_393:\n        /* \"#utility.yul\":9764:9769   */\n      0x00\n        /* \"#utility.yul\":9795:9801   */\n      dup2\n        /* \"#utility.yul\":9789:9802   */\n      mload\n        /* \"#utility.yul\":9780:9802   */\n      swap1\n      pop\n        /* \"#utility.yul\":9811:9843   */\n      tag_529\n        /* \"#utility.yul\":9837:9842   */\n      dup2\n        /* \"#utility.yul\":9811:9843   */\n      tag_392\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":9708:9849   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9855:9998   */\n    tag_394:\n        /* \"#utility.yul\":9912:9917   */\n      0x00\n        /* \"#utility.yul\":9943:9949   */\n      dup2\n        /* \"#utility.yul\":9937:9950   */\n      mload\n        /* \"#utility.yul\":9928:9950   */\n      swap1\n      pop\n        /* \"#utility.yul\":9959:9992   */\n      tag_531\n        /* \"#utility.yul\":9986:9991   */\n      dup2\n        /* \"#utility.yul\":9959:9992   */\n      tag_378\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":9855:9998   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10004:10975   */\n    tag_180:\n        /* \"#utility.yul\":10107:10113   */\n      0x00\n        /* \"#utility.yul\":10115:10121   */\n      0x00\n        /* \"#utility.yul\":10123:10129   */\n      0x00\n        /* \"#utility.yul\":10131:10137   */\n      0x00\n        /* \"#utility.yul\":10139:10145   */\n      0x00\n        /* \"#utility.yul\":10188:10191   */\n      0xa0\n        /* \"#utility.yul\":10176:10185   */\n      dup7\n        /* \"#utility.yul\":10167:10174   */\n      dup9\n        /* \"#utility.yul\":10163:10186   */\n      sub\n        /* \"#utility.yul\":10159:10192   */\n      slt\n        /* \"#utility.yul\":10156:10276   */\n      iszero\n      tag_533\n      jumpi\n        /* \"#utility.yul\":10195:10274   */\n      tag_534\n      tag_356\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":10156:10276   */\n    tag_533:\n        /* \"#utility.yul\":10315:10316   */\n      0x00\n        /* \"#utility.yul\":10340:10403   */\n      tag_535\n        /* \"#utility.yul\":10395:10402   */\n      dup9\n        /* \"#utility.yul\":10386:10392   */\n      dup3\n        /* \"#utility.yul\":10375:10384   */\n      dup10\n        /* \"#utility.yul\":10371:10393   */\n      add\n        /* \"#utility.yul\":10340:10403   */\n      tag_390\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":10330:10403   */\n      swap6\n      pop\n        /* \"#utility.yul\":10286:10413   */\n      pop\n        /* \"#utility.yul\":10452:10454   */\n      0x20\n        /* \"#utility.yul\":10478:10541   */\n      tag_536\n        /* \"#utility.yul\":10533:10540   */\n      dup9\n        /* \"#utility.yul\":10524:10530   */\n      dup3\n        /* \"#utility.yul\":10513:10522   */\n      dup10\n        /* \"#utility.yul\":10509:10531   */\n      add\n        /* \"#utility.yul\":10478:10541   */\n      tag_393\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":10468:10541   */\n      swap5\n      pop\n        /* \"#utility.yul\":10423:10551   */\n      pop\n        /* \"#utility.yul\":10590:10592   */\n      0x40\n        /* \"#utility.yul\":10616:10680   */\n      tag_537\n        /* \"#utility.yul\":10672:10679   */\n      dup9\n        /* \"#utility.yul\":10663:10669   */\n      dup3\n        /* \"#utility.yul\":10652:10661   */\n      dup10\n        /* \"#utility.yul\":10648:10670   */\n      add\n        /* \"#utility.yul\":10616:10680   */\n      tag_394\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":10606:10680   */\n      swap4\n      pop\n        /* \"#utility.yul\":10561:10690   */\n      pop\n        /* \"#utility.yul\":10729:10731   */\n      0x60\n        /* \"#utility.yul\":10755:10819   */\n      tag_538\n        /* \"#utility.yul\":10811:10818   */\n      dup9\n        /* \"#utility.yul\":10802:10808   */\n      dup3\n        /* \"#utility.yul\":10791:10800   */\n      dup10\n        /* \"#utility.yul\":10787:10809   */\n      add\n        /* \"#utility.yul\":10755:10819   */\n      tag_394\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":10745:10819   */\n      swap3\n      pop\n        /* \"#utility.yul\":10700:10829   */\n      pop\n        /* \"#utility.yul\":10868:10871   */\n      0x80\n        /* \"#utility.yul\":10895:10958   */\n      tag_539\n        /* \"#utility.yul\":10950:10957   */\n      dup9\n        /* \"#utility.yul\":10941:10947   */\n      dup3\n        /* \"#utility.yul\":10930:10939   */\n      dup10\n        /* \"#utility.yul\":10926:10948   */\n      add\n        /* \"#utility.yul\":10895:10958   */\n      tag_390\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":10885:10958   */\n      swap2\n      pop\n        /* \"#utility.yul\":10839:10968   */\n      pop\n        /* \"#utility.yul\":10004:10975   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10981:11214   */\n    tag_205:\n        /* \"#utility.yul\":11020:11023   */\n      0x00\n        /* \"#utility.yul\":11043:11067   */\n      tag_541\n        /* \"#utility.yul\":11061:11066   */\n      dup3\n        /* \"#utility.yul\":11043:11067   */\n      tag_367\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":11034:11067   */\n      swap2\n      pop\n        /* \"#utility.yul\":11089:11155   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11082:11087   */\n      dup3\n        /* \"#utility.yul\":11079:11156   */\n      sub\n        /* \"#utility.yul\":11076:11179   */\n      tag_542\n      jumpi\n        /* \"#utility.yul\":11159:11177   */\n      tag_543\n      tag_387\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":11076:11179   */\n    tag_542:\n        /* \"#utility.yul\":11206:11207   */\n      0x01\n        /* \"#utility.yul\":11199:11204   */\n      dup3\n        /* \"#utility.yul\":11195:11208   */\n      add\n        /* \"#utility.yul\":11188:11208   */\n      swap1\n      pop\n        /* \"#utility.yul\":10981:11214   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11220:11552   */\n    tag_209:\n        /* \"#utility.yul\":11341:11345   */\n      0x00\n        /* \"#utility.yul\":11379:11381   */\n      0x40\n        /* \"#utility.yul\":11368:11377   */\n      dup3\n        /* \"#utility.yul\":11364:11382   */\n      add\n        /* \"#utility.yul\":11356:11382   */\n      swap1\n      pop\n        /* \"#utility.yul\":11392:11463   */\n      tag_545\n        /* \"#utility.yul\":11460:11461   */\n      0x00\n        /* \"#utility.yul\":11449:11458   */\n      dup4\n        /* \"#utility.yul\":11445:11462   */\n      add\n        /* \"#utility.yul\":11436:11442   */\n      dup6\n        /* \"#utility.yul\":11392:11463   */\n      tag_368\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":11473:11545   */\n      tag_546\n        /* \"#utility.yul\":11541:11543   */\n      0x20\n        /* \"#utility.yul\":11530:11539   */\n      dup4\n        /* \"#utility.yul\":11526:11544   */\n      add\n        /* \"#utility.yul\":11517:11523   */\n      dup5\n        /* \"#utility.yul\":11473:11545   */\n      tag_368\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":11220:11552   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11558:11752   */\n    tag_245:\n        /* \"#utility.yul\":11598:11602   */\n      0x00\n        /* \"#utility.yul\":11618:11638   */\n      tag_548\n        /* \"#utility.yul\":11636:11637   */\n      dup3\n        /* \"#utility.yul\":11618:11638   */\n      tag_367\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":11613:11638   */\n      swap2\n      pop\n        /* \"#utility.yul\":11652:11672   */\n      tag_549\n        /* \"#utility.yul\":11670:11671   */\n      dup4\n        /* \"#utility.yul\":11652:11672   */\n      tag_367\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":11647:11672   */\n      swap3\n      pop\n        /* \"#utility.yul\":11696:11697   */\n      dup3\n        /* \"#utility.yul\":11693:11694   */\n      dup3\n        /* \"#utility.yul\":11689:11698   */\n      sub\n        /* \"#utility.yul\":11681:11698   */\n      swap1\n      pop\n        /* \"#utility.yul\":11720:11721   */\n      dup2\n        /* \"#utility.yul\":11714:11718   */\n      dup2\n        /* \"#utility.yul\":11711:11722   */\n      gt\n        /* \"#utility.yul\":11708:11745   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":11725:11743   */\n      tag_551\n      tag_387\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":11708:11745   */\n    tag_550:\n        /* \"#utility.yul\":11558:11752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11758:11938   */\n    tag_254:\n        /* \"#utility.yul\":11806:11883   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11803:11804   */\n      0x00\n        /* \"#utility.yul\":11796:11884   */\n      mstore\n        /* \"#utility.yul\":11903:11907   */\n      0x31\n        /* \"#utility.yul\":11900:11901   */\n      0x04\n        /* \"#utility.yul\":11893:11908   */\n      mstore\n        /* \"#utility.yul\":11927:11931   */\n      0x24\n        /* \"#utility.yul\":11924:11925   */\n      0x00\n        /* \"#utility.yul\":11917:11932   */\n      revert\n        /* \"#utility.yul\":11944:12091   */\n    tag_395:\n        /* \"#utility.yul\":12045:12056   */\n      0x00\n        /* \"#utility.yul\":12082:12085   */\n      dup2\n        /* \"#utility.yul\":12067:12085   */\n      swap1\n      pop\n        /* \"#utility.yul\":11944:12091   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12097:12211   */\n    tag_396:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12217:12615   */\n    tag_397:\n        /* \"#utility.yul\":12376:12379   */\n      0x00\n        /* \"#utility.yul\":12397:12480   */\n      tag_556\n        /* \"#utility.yul\":12478:12479   */\n      0x00\n        /* \"#utility.yul\":12473:12476   */\n      dup4\n        /* \"#utility.yul\":12397:12480   */\n      tag_395\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":12390:12480   */\n      swap2\n      pop\n        /* \"#utility.yul\":12489:12582   */\n      tag_557\n        /* \"#utility.yul\":12578:12581   */\n      dup3\n        /* \"#utility.yul\":12489:12582   */\n      tag_396\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":12607:12608   */\n      0x00\n        /* \"#utility.yul\":12602:12605   */\n      dup3\n        /* \"#utility.yul\":12598:12609   */\n      add\n        /* \"#utility.yul\":12591:12609   */\n      swap1\n      pop\n        /* \"#utility.yul\":12217:12615   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12621:13000   */\n    tag_271:\n        /* \"#utility.yul\":12805:12808   */\n      0x00\n        /* \"#utility.yul\":12827:12974   */\n      tag_559\n        /* \"#utility.yul\":12970:12973   */\n      dup3\n        /* \"#utility.yul\":12827:12974   */\n      tag_397\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":12820:12974   */\n      swap2\n      pop\n        /* \"#utility.yul\":12991:12994   */\n      dup2\n        /* \"#utility.yul\":12984:12994   */\n      swap1\n      pop\n        /* \"#utility.yul\":12621:13000   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13006:13092   */\n    tag_398:\n        /* \"#utility.yul\":13041:13048   */\n      0x00\n        /* \"#utility.yul\":13081:13085   */\n      0xff\n        /* \"#utility.yul\":13074:13079   */\n      dup3\n        /* \"#utility.yul\":13070:13086   */\n      and\n        /* \"#utility.yul\":13059:13086   */\n      swap1\n      pop\n        /* \"#utility.yul\":13006:13092   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13098:13216   */\n    tag_399:\n        /* \"#utility.yul\":13169:13191   */\n      tag_562\n        /* \"#utility.yul\":13185:13190   */\n      dup2\n        /* \"#utility.yul\":13169:13191   */\n      tag_398\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":13162:13167   */\n      dup2\n        /* \"#utility.yul\":13159:13192   */\n      eq\n        /* \"#utility.yul\":13149:13210   */\n      tag_563\n      jumpi\n        /* \"#utility.yul\":13206:13207   */\n      0x00\n        /* \"#utility.yul\":13203:13204   */\n      0x00\n        /* \"#utility.yul\":13196:13208   */\n      revert\n        /* \"#utility.yul\":13149:13210   */\n    tag_563:\n        /* \"#utility.yul\":13098:13216   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13222:13361   */\n    tag_400:\n        /* \"#utility.yul\":13277:13282   */\n      0x00\n        /* \"#utility.yul\":13308:13314   */\n      dup2\n        /* \"#utility.yul\":13302:13315   */\n      mload\n        /* \"#utility.yul\":13293:13315   */\n      swap1\n      pop\n        /* \"#utility.yul\":13324:13355   */\n      tag_565\n        /* \"#utility.yul\":13349:13354   */\n      dup2\n        /* \"#utility.yul\":13324:13355   */\n      tag_399\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":13222:13361   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13367:13714   */\n    tag_290:\n        /* \"#utility.yul\":13435:13441   */\n      0x00\n        /* \"#utility.yul\":13484:13486   */\n      0x20\n        /* \"#utility.yul\":13472:13481   */\n      dup3\n        /* \"#utility.yul\":13463:13470   */\n      dup5\n        /* \"#utility.yul\":13459:13482   */\n      sub\n        /* \"#utility.yul\":13455:13487   */\n      slt\n        /* \"#utility.yul\":13452:13571   */\n      iszero\n      tag_567\n      jumpi\n        /* \"#utility.yul\":13490:13569   */\n      tag_568\n      tag_356\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":13452:13571   */\n    tag_567:\n        /* \"#utility.yul\":13610:13611   */\n      0x00\n        /* \"#utility.yul\":13635:13697   */\n      tag_569\n        /* \"#utility.yul\":13689:13696   */\n      dup5\n        /* \"#utility.yul\":13680:13686   */\n      dup3\n        /* \"#utility.yul\":13669:13678   */\n      dup6\n        /* \"#utility.yul\":13665:13687   */\n      add\n        /* \"#utility.yul\":13635:13697   */\n      tag_400\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":13625:13697   */\n      swap2\n      pop\n        /* \"#utility.yul\":13581:13707   */\n      pop\n        /* \"#utility.yul\":13367:13714   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13720:14130   */\n    tag_294:\n        /* \"#utility.yul\":13760:13767   */\n      0x00\n        /* \"#utility.yul\":13783:13803   */\n      tag_571\n        /* \"#utility.yul\":13801:13802   */\n      dup3\n        /* \"#utility.yul\":13783:13803   */\n      tag_367\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":13778:13803   */\n      swap2\n      pop\n        /* \"#utility.yul\":13817:13837   */\n      tag_572\n        /* \"#utility.yul\":13835:13836   */\n      dup4\n        /* \"#utility.yul\":13817:13837   */\n      tag_367\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":13812:13837   */\n      swap3\n      pop\n        /* \"#utility.yul\":13872:13873   */\n      dup3\n        /* \"#utility.yul\":13869:13870   */\n      dup3\n        /* \"#utility.yul\":13865:13874   */\n      mul\n        /* \"#utility.yul\":13894:13924   */\n      tag_573\n        /* \"#utility.yul\":13912:13923   */\n      dup2\n        /* \"#utility.yul\":13894:13924   */\n      tag_367\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":13883:13924   */\n      swap2\n      pop\n        /* \"#utility.yul\":14073:14074   */\n      dup3\n        /* \"#utility.yul\":14064:14071   */\n      dup3\n        /* \"#utility.yul\":14060:14075   */\n      div\n        /* \"#utility.yul\":14057:14058   */\n      dup5\n        /* \"#utility.yul\":14054:14076   */\n      eq\n        /* \"#utility.yul\":14034:14035   */\n      dup4\n        /* \"#utility.yul\":14027:14036   */\n      iszero\n        /* \"#utility.yul\":14007:14090   */\n      or\n        /* \"#utility.yul\":13984:14123   */\n      tag_574\n      jumpi\n        /* \"#utility.yul\":14103:14121   */\n      tag_575\n      tag_387\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":13984:14123   */\n    tag_574:\n        /* \"#utility.yul\":13768:14130   */\n      pop\n        /* \"#utility.yul\":13720:14130   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14136:14316   */\n    tag_401:\n        /* \"#utility.yul\":14184:14261   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14181:14182   */\n      0x00\n        /* \"#utility.yul\":14174:14262   */\n      mstore\n        /* \"#utility.yul\":14281:14285   */\n      0x12\n        /* \"#utility.yul\":14278:14279   */\n      0x04\n        /* \"#utility.yul\":14271:14286   */\n      mstore\n        /* \"#utility.yul\":14305:14309   */\n      0x24\n        /* \"#utility.yul\":14302:14303   */\n      0x00\n        /* \"#utility.yul\":14295:14310   */\n      revert\n        /* \"#utility.yul\":14322:14507   */\n    tag_296:\n        /* \"#utility.yul\":14362:14363   */\n      0x00\n        /* \"#utility.yul\":14379:14399   */\n      tag_578\n        /* \"#utility.yul\":14397:14398   */\n      dup3\n        /* \"#utility.yul\":14379:14399   */\n      tag_367\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":14374:14399   */\n      swap2\n      pop\n        /* \"#utility.yul\":14413:14433   */\n      tag_579\n        /* \"#utility.yul\":14431:14432   */\n      dup4\n        /* \"#utility.yul\":14413:14433   */\n      tag_367\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":14408:14433   */\n      swap3\n      pop\n        /* \"#utility.yul\":14452:14453   */\n      dup3\n        /* \"#utility.yul\":14442:14477   */\n      tag_580\n      jumpi\n        /* \"#utility.yul\":14457:14475   */\n      tag_581\n      tag_401\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":14442:14477   */\n    tag_580:\n        /* \"#utility.yul\":14499:14500   */\n      dup3\n        /* \"#utility.yul\":14496:14497   */\n      dup3\n        /* \"#utility.yul\":14492:14501   */\n      div\n        /* \"#utility.yul\":14487:14501   */\n      swap1\n      pop\n        /* \"#utility.yul\":14322:14507   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14513:14682   */\n    tag_402:\n        /* \"#utility.yul\":14597:14608   */\n      0x00\n        /* \"#utility.yul\":14631:14637   */\n      dup3\n        /* \"#utility.yul\":14626:14629   */\n      dup3\n        /* \"#utility.yul\":14619:14638   */\n      mstore\n        /* \"#utility.yul\":14671:14675   */\n      0x20\n        /* \"#utility.yul\":14666:14669   */\n      dup3\n        /* \"#utility.yul\":14662:14676   */\n      add\n        /* \"#utility.yul\":14647:14676   */\n      swap1\n      pop\n        /* \"#utility.yul\":14513:14682   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14688:14869   */\n    tag_403:\n        /* \"#utility.yul\":14828:14861   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":14824:14825   */\n      0x00\n        /* \"#utility.yul\":14816:14822   */\n      dup3\n        /* \"#utility.yul\":14812:14826   */\n      add\n        /* \"#utility.yul\":14805:14862   */\n      mstore\n        /* \"#utility.yul\":14688:14869   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14875:15241   */\n    tag_404:\n        /* \"#utility.yul\":15017:15020   */\n      0x00\n        /* \"#utility.yul\":15038:15105   */\n      tag_585\n        /* \"#utility.yul\":15102:15104   */\n      0x1f\n        /* \"#utility.yul\":15097:15100   */\n      dup4\n        /* \"#utility.yul\":15038:15105   */\n      tag_402\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":15031:15105   */\n      swap2\n      pop\n        /* \"#utility.yul\":15114:15207   */\n      tag_586\n        /* \"#utility.yul\":15203:15206   */\n      dup3\n        /* \"#utility.yul\":15114:15207   */\n      tag_403\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":15232:15234   */\n      0x20\n        /* \"#utility.yul\":15227:15230   */\n      dup3\n        /* \"#utility.yul\":15223:15235   */\n      add\n        /* \"#utility.yul\":15216:15235   */\n      swap1\n      pop\n        /* \"#utility.yul\":14875:15241   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15247:15666   */\n    tag_319:\n        /* \"#utility.yul\":15413:15417   */\n      0x00\n        /* \"#utility.yul\":15451:15453   */\n      0x20\n        /* \"#utility.yul\":15440:15449   */\n      dup3\n        /* \"#utility.yul\":15436:15454   */\n      add\n        /* \"#utility.yul\":15428:15454   */\n      swap1\n      pop\n        /* \"#utility.yul\":15500:15509   */\n      dup2\n        /* \"#utility.yul\":15494:15498   */\n      dup2\n        /* \"#utility.yul\":15490:15510   */\n      sub\n        /* \"#utility.yul\":15486:15487   */\n      0x00\n        /* \"#utility.yul\":15475:15484   */\n      dup4\n        /* \"#utility.yul\":15471:15488   */\n      add\n        /* \"#utility.yul\":15464:15511   */\n      mstore\n        /* \"#utility.yul\":15528:15659   */\n      tag_588\n        /* \"#utility.yul\":15654:15658   */\n      dup2\n        /* \"#utility.yul\":15528:15659   */\n      tag_404\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":15520:15659   */\n      swap1\n      pop\n        /* \"#utility.yul\":15247:15666   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15672:15790   */\n    tag_405:\n        /* \"#utility.yul\":15759:15783   */\n      tag_590\n        /* \"#utility.yul\":15777:15782   */\n      dup2\n        /* \"#utility.yul\":15759:15783   */\n      tag_364\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":15754:15757   */\n      dup3\n        /* \"#utility.yul\":15747:15784   */\n      mstore\n        /* \"#utility.yul\":15672:15790   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15796:16238   */\n    tag_323:\n        /* \"#utility.yul\":15945:15949   */\n      0x00\n        /* \"#utility.yul\":15983:15985   */\n      0x60\n        /* \"#utility.yul\":15972:15981   */\n      dup3\n        /* \"#utility.yul\":15968:15986   */\n      add\n        /* \"#utility.yul\":15960:15986   */\n      swap1\n      pop\n        /* \"#utility.yul\":15996:16067   */\n      tag_592\n        /* \"#utility.yul\":16064:16065   */\n      0x00\n        /* \"#utility.yul\":16053:16062   */\n      dup4\n        /* \"#utility.yul\":16049:16066   */\n      add\n        /* \"#utility.yul\":16040:16046   */\n      dup7\n        /* \"#utility.yul\":15996:16067   */\n      tag_405\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":16077:16149   */\n      tag_593\n        /* \"#utility.yul\":16145:16147   */\n      0x20\n        /* \"#utility.yul\":16134:16143   */\n      dup4\n        /* \"#utility.yul\":16130:16148   */\n      add\n        /* \"#utility.yul\":16121:16127   */\n      dup6\n        /* \"#utility.yul\":16077:16149   */\n      tag_405\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":16159:16231   */\n      tag_594\n        /* \"#utility.yul\":16227:16229   */\n      0x40\n        /* \"#utility.yul\":16216:16225   */\n      dup4\n        /* \"#utility.yul\":16212:16230   */\n      add\n        /* \"#utility.yul\":16203:16209   */\n      dup5\n        /* \"#utility.yul\":16159:16231   */\n      tag_368\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":15796:16238   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16244:16576   */\n    tag_329:\n        /* \"#utility.yul\":16365:16369   */\n      0x00\n        /* \"#utility.yul\":16403:16405   */\n      0x40\n        /* \"#utility.yul\":16392:16401   */\n      dup3\n        /* \"#utility.yul\":16388:16406   */\n      add\n        /* \"#utility.yul\":16380:16406   */\n      swap1\n      pop\n        /* \"#utility.yul\":16416:16487   */\n      tag_596\n        /* \"#utility.yul\":16484:16485   */\n      0x00\n        /* \"#utility.yul\":16473:16482   */\n      dup4\n        /* \"#utility.yul\":16469:16486   */\n      add\n        /* \"#utility.yul\":16460:16466   */\n      dup6\n        /* \"#utility.yul\":16416:16487   */\n      tag_405\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":16497:16569   */\n      tag_597\n        /* \"#utility.yul\":16565:16567   */\n      0x20\n        /* \"#utility.yul\":16554:16563   */\n      dup4\n        /* \"#utility.yul\":16550:16568   */\n      add\n        /* \"#utility.yul\":16541:16547   */\n      dup5\n        /* \"#utility.yul\":16497:16569   */\n      tag_368\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":16244:16576   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16582:16773   */\n    tag_333:\n        /* \"#utility.yul\":16620:16624   */\n      0x00\n        /* \"#utility.yul\":16640:16658   */\n      tag_599\n        /* \"#utility.yul\":16656:16657   */\n      dup3\n        /* \"#utility.yul\":16640:16658   */\n      tag_398\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":16635:16658   */\n      swap2\n      pop\n        /* \"#utility.yul\":16672:16690   */\n      tag_600\n        /* \"#utility.yul\":16688:16689   */\n      dup4\n        /* \"#utility.yul\":16672:16690   */\n      tag_398\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":16667:16690   */\n      swap3\n      pop\n        /* \"#utility.yul\":16714:16715   */\n      dup3\n        /* \"#utility.yul\":16711:16712   */\n      dup3\n        /* \"#utility.yul\":16707:16716   */\n      sub\n        /* \"#utility.yul\":16699:16716   */\n      swap1\n      pop\n        /* \"#utility.yul\":16738:16742   */\n      0xff\n        /* \"#utility.yul\":16732:16736   */\n      dup2\n        /* \"#utility.yul\":16729:16743   */\n      gt\n        /* \"#utility.yul\":16726:16766   */\n      iszero\n      tag_601\n      jumpi\n        /* \"#utility.yul\":16746:16764   */\n      tag_602\n      tag_387\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":16726:16766   */\n    tag_601:\n        /* \"#utility.yul\":16582:16773   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16779:16881   */\n    tag_406:\n        /* \"#utility.yul\":16821:16829   */\n      0x00\n        /* \"#utility.yul\":16868:16873   */\n      dup2\n        /* \"#utility.yul\":16865:16866   */\n      0x01\n        /* \"#utility.yul\":16861:16874   */\n      shr\n        /* \"#utility.yul\":16840:16874   */\n      swap1\n      pop\n        /* \"#utility.yul\":16779:16881   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16887:17735   */\n    tag_407:\n        /* \"#utility.yul\":16948:16953   */\n      0x00\n        /* \"#utility.yul\":16955:16959   */\n      0x00\n        /* \"#utility.yul\":16979:16985   */\n      dup3\n        /* \"#utility.yul\":16970:16985   */\n      swap2\n      pop\n        /* \"#utility.yul\":17003:17008   */\n      dup4\n        /* \"#utility.yul\":16994:17008   */\n      swap1\n      pop\n        /* \"#utility.yul\":17017:17729   */\n    tag_605:\n        /* \"#utility.yul\":17038:17039   */\n      0x01\n        /* \"#utility.yul\":17028:17036   */\n      dup6\n        /* \"#utility.yul\":17025:17040   */\n      gt\n        /* \"#utility.yul\":17017:17729   */\n      iszero\n      tag_607\n      jumpi\n        /* \"#utility.yul\":17133:17137   */\n      dup1\n        /* \"#utility.yul\":17128:17131   */\n      dup7\n        /* \"#utility.yul\":17124:17138   */\n      div\n        /* \"#utility.yul\":17118:17122   */\n      dup2\n        /* \"#utility.yul\":17115:17139   */\n      gt\n        /* \"#utility.yul\":17112:17162   */\n      iszero\n      tag_608\n      jumpi\n        /* \"#utility.yul\":17142:17160   */\n      tag_609\n      tag_387\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":17112:17162   */\n    tag_608:\n        /* \"#utility.yul\":17192:17193   */\n      0x01\n        /* \"#utility.yul\":17182:17190   */\n      dup6\n        /* \"#utility.yul\":17178:17194   */\n      and\n        /* \"#utility.yul\":17175:17626   */\n      iszero\n      tag_610\n      jumpi\n        /* \"#utility.yul\":17607:17611   */\n      dup1\n        /* \"#utility.yul\":17600:17605   */\n      dup3\n        /* \"#utility.yul\":17596:17612   */\n      mul\n        /* \"#utility.yul\":17587:17612   */\n      swap2\n      pop\n        /* \"#utility.yul\":17175:17626   */\n    tag_610:\n        /* \"#utility.yul\":17657:17661   */\n      dup1\n        /* \"#utility.yul\":17651:17655   */\n      dup2\n        /* \"#utility.yul\":17647:17662   */\n      mul\n        /* \"#utility.yul\":17639:17662   */\n      swap1\n      pop\n        /* \"#utility.yul\":17687:17719   */\n      tag_611\n        /* \"#utility.yul\":17710:17718   */\n      dup6\n        /* \"#utility.yul\":17687:17719   */\n      tag_406\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":17675:17719   */\n      swap5\n      pop\n        /* \"#utility.yul\":17017:17729   */\n      jump(tag_605)\n    tag_607:\n        /* \"#utility.yul\":16887:17735   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17741:18814   */\n    tag_408:\n        /* \"#utility.yul\":17795:17800   */\n      0x00\n        /* \"#utility.yul\":17986:17994   */\n      dup3\n        /* \"#utility.yul\":17976:18016   */\n      tag_613\n      jumpi\n        /* \"#utility.yul\":18007:18008   */\n      0x01\n        /* \"#utility.yul\":17998:18008   */\n      swap1\n      pop\n        /* \"#utility.yul\":18009:18014   */\n      jump(tag_612)\n        /* \"#utility.yul\":17976:18016   */\n    tag_613:\n        /* \"#utility.yul\":18035:18039   */\n      dup2\n        /* \"#utility.yul\":18025:18061   */\n      tag_614\n      jumpi\n        /* \"#utility.yul\":18052:18053   */\n      0x00\n        /* \"#utility.yul\":18043:18053   */\n      swap1\n      pop\n        /* \"#utility.yul\":18054:18059   */\n      jump(tag_612)\n        /* \"#utility.yul\":18025:18061   */\n    tag_614:\n        /* \"#utility.yul\":18121:18125   */\n      dup2\n        /* \"#utility.yul\":18169:18170   */\n      0x01\n        /* \"#utility.yul\":18164:18191   */\n      dup2\n      eq\n      tag_616\n      jumpi\n        /* \"#utility.yul\":18205:18206   */\n      0x02\n        /* \"#utility.yul\":18200:18391   */\n      dup2\n      eq\n      tag_617\n      jumpi\n        /* \"#utility.yul\":18114:18391   */\n      jump(tag_615)\n        /* \"#utility.yul\":18164:18191   */\n    tag_616:\n        /* \"#utility.yul\":18182:18183   */\n      0x01\n        /* \"#utility.yul\":18173:18183   */\n      swap2\n      pop\n        /* \"#utility.yul\":18184:18189   */\n      pop\n      jump(tag_612)\n        /* \"#utility.yul\":18200:18391   */\n    tag_617:\n        /* \"#utility.yul\":18245:18248   */\n      0xff\n        /* \"#utility.yul\":18235:18243   */\n      dup5\n        /* \"#utility.yul\":18232:18249   */\n      gt\n        /* \"#utility.yul\":18229:18272   */\n      iszero\n      tag_618\n      jumpi\n        /* \"#utility.yul\":18252:18270   */\n      tag_619\n      tag_387\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":18229:18272   */\n    tag_618:\n        /* \"#utility.yul\":18301:18309   */\n      dup4\n        /* \"#utility.yul\":18298:18299   */\n      0x02\n        /* \"#utility.yul\":18294:18310   */\n      exp\n        /* \"#utility.yul\":18285:18310   */\n      swap2\n      pop\n        /* \"#utility.yul\":18336:18339   */\n      dup5\n        /* \"#utility.yul\":18329:18334   */\n      dup3\n        /* \"#utility.yul\":18326:18340   */\n      gt\n        /* \"#utility.yul\":18323:18363   */\n      iszero\n      tag_620\n      jumpi\n        /* \"#utility.yul\":18343:18361   */\n      tag_621\n      tag_387\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":18323:18363   */\n    tag_620:\n        /* \"#utility.yul\":18376:18381   */\n      pop\n      jump(tag_612)\n        /* \"#utility.yul\":18114:18391   */\n    tag_615:\n      pop\n        /* \"#utility.yul\":18500:18502   */\n      0x20\n        /* \"#utility.yul\":18490:18498   */\n      dup4\n        /* \"#utility.yul\":18487:18503   */\n      lt\n        /* \"#utility.yul\":18481:18484   */\n      0x0133\n        /* \"#utility.yul\":18475:18479   */\n      dup4\n        /* \"#utility.yul\":18472:18485   */\n      lt\n        /* \"#utility.yul\":18468:18504   */\n      and\n        /* \"#utility.yul\":18450:18452   */\n      0x4e\n        /* \"#utility.yul\":18440:18448   */\n      dup5\n        /* \"#utility.yul\":18437:18453   */\n      lt\n        /* \"#utility.yul\":18432:18434   */\n      0x0b\n        /* \"#utility.yul\":18426:18430   */\n      dup5\n        /* \"#utility.yul\":18423:18435   */\n      lt\n        /* \"#utility.yul\":18419:18454   */\n      and\n        /* \"#utility.yul\":18403:18514   */\n      or\n        /* \"#utility.yul\":18400:18646   */\n      iszero\n      tag_622\n      jumpi\n        /* \"#utility.yul\":18556:18564   */\n      dup3\n        /* \"#utility.yul\":18550:18554   */\n      dup3\n        /* \"#utility.yul\":18546:18565   */\n      exp\n        /* \"#utility.yul\":18537:18565   */\n      swap1\n      pop\n        /* \"#utility.yul\":18591:18594   */\n      dup4\n        /* \"#utility.yul\":18584:18589   */\n      dup2\n        /* \"#utility.yul\":18581:18595   */\n      gt\n        /* \"#utility.yul\":18578:18618   */\n      iszero\n      tag_623\n      jumpi\n        /* \"#utility.yul\":18598:18616   */\n      tag_624\n      tag_387\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":18578:18618   */\n    tag_623:\n        /* \"#utility.yul\":18631:18636   */\n      jump(tag_612)\n        /* \"#utility.yul\":18400:18646   */\n    tag_622:\n        /* \"#utility.yul\":18671:18713   */\n      tag_625\n        /* \"#utility.yul\":18709:18712   */\n      dup5\n        /* \"#utility.yul\":18699:18707   */\n      dup5\n        /* \"#utility.yul\":18693:18697   */\n      dup5\n        /* \"#utility.yul\":18690:18691   */\n      0x01\n        /* \"#utility.yul\":18671:18713   */\n      tag_407\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":18656:18713   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":18745:18749   */\n      dup2\n        /* \"#utility.yul\":18740:18743   */\n      dup5\n        /* \"#utility.yul\":18736:18750   */\n      div\n        /* \"#utility.yul\":18729:18734   */\n      dup2\n        /* \"#utility.yul\":18726:18751   */\n      gt\n        /* \"#utility.yul\":18723:18774   */\n      iszero\n      tag_626\n      jumpi\n        /* \"#utility.yul\":18754:18772   */\n      tag_627\n      tag_387\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":18723:18774   */\n    tag_626:\n        /* \"#utility.yul\":18803:18807   */\n      dup2\n        /* \"#utility.yul\":18796:18801   */\n      dup2\n        /* \"#utility.yul\":18792:18808   */\n      mul\n        /* \"#utility.yul\":18783:18808   */\n      swap1\n      pop\n        /* \"#utility.yul\":17741:18814   */\n    tag_612:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18820:19101   */\n    tag_335:\n        /* \"#utility.yul\":18878:18883   */\n      0x00\n        /* \"#utility.yul\":18902:18925   */\n      tag_629\n        /* \"#utility.yul\":18920:18924   */\n      dup3\n        /* \"#utility.yul\":18902:18925   */\n      tag_367\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":18894:18925   */\n      swap2\n      pop\n        /* \"#utility.yul\":18946:18971   */\n      tag_630\n        /* \"#utility.yul\":18962:18970   */\n      dup4\n        /* \"#utility.yul\":18946:18971   */\n      tag_398\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":18934:18971   */\n      swap3\n      pop\n        /* \"#utility.yul\":18990:19094   */\n      tag_631\n        /* \"#utility.yul\":19027:19093   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19017:19025   */\n      dup5\n        /* \"#utility.yul\":19011:19015   */\n      dup5\n        /* \"#utility.yul\":18990:19094   */\n      tag_408\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":18981:19094   */\n      swap1\n      pop\n        /* \"#utility.yul\":18820:19101   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19107:19439   */\n    tag_347:\n        /* \"#utility.yul\":19228:19232   */\n      0x00\n        /* \"#utility.yul\":19266:19268   */\n      0x40\n        /* \"#utility.yul\":19255:19264   */\n      dup3\n        /* \"#utility.yul\":19251:19269   */\n      add\n        /* \"#utility.yul\":19243:19269   */\n      swap1\n      pop\n        /* \"#utility.yul\":19279:19350   */\n      tag_633\n        /* \"#utility.yul\":19347:19348   */\n      0x00\n        /* \"#utility.yul\":19336:19345   */\n      dup4\n        /* \"#utility.yul\":19332:19349   */\n      add\n        /* \"#utility.yul\":19323:19329   */\n      dup6\n        /* \"#utility.yul\":19279:19350   */\n      tag_405\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":19360:19432   */\n      tag_634\n        /* \"#utility.yul\":19428:19430   */\n      0x20\n        /* \"#utility.yul\":19417:19426   */\n      dup4\n        /* \"#utility.yul\":19413:19431   */\n      add\n        /* \"#utility.yul\":19404:19410   */\n      dup5\n        /* \"#utility.yul\":19360:19432   */\n      tag_372\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":19107:19439   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19445:19667   */\n    tag_354:\n        /* \"#utility.yul\":19538:19542   */\n      0x00\n        /* \"#utility.yul\":19576:19578   */\n      0x20\n        /* \"#utility.yul\":19565:19574   */\n      dup3\n        /* \"#utility.yul\":19561:19579   */\n      add\n        /* \"#utility.yul\":19553:19579   */\n      swap1\n      pop\n        /* \"#utility.yul\":19589:19660   */\n      tag_636\n        /* \"#utility.yul\":19657:19658   */\n      0x00\n        /* \"#utility.yul\":19646:19655   */\n      dup4\n        /* \"#utility.yul\":19642:19659   */\n      add\n        /* \"#utility.yul\":19633:19639   */\n      dup5\n        /* \"#utility.yul\":19589:19660   */\n      tag_405\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":19445:19667   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220185bc13f375add1f081d4958d6750a25250b43993e3ab57652cee2f38f00fd8264736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1425": {
									"entryPoint": null,
									"id": 1425,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_534": {
									"entryPoint": null,
									"id": 534,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_grantRole_303": {
									"entryPoint": 415,
									"id": 303,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1160": {
									"entryPoint": 759,
									"id": 1160,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_127": {
									"entryPoint": 660,
									"id": 127,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_address_fromMemory": {
									"entryPoint": 911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 852,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 766,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 869,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1871:14",
										"nodeType": "YulBlock",
										"src": "0:1871:14",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:14",
													"nodeType": "YulBlock",
													"src": "47:35:14",
													"statements": [
														{
															"nativeSrc": "57:19:14",
															"nodeType": "YulAssignment",
															"src": "57:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:14",
																		"nodeType": "YulLiteral",
																		"src": "73:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:14"
																},
																"nativeSrc": "67:9:14",
																"nodeType": "YulFunctionCall",
																"src": "67:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:14",
														"nodeType": "YulTypedName",
														"src": "40:6:14",
														"type": ""
													}
												],
												"src": "7:75:14"
											},
											{
												"body": {
													"nativeSrc": "177:28:14",
													"nodeType": "YulBlock",
													"src": "177:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:14",
																		"nodeType": "YulLiteral",
																		"src": "194:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:14",
																		"nodeType": "YulLiteral",
																		"src": "197:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:14"
																},
																"nativeSrc": "187:12:14",
																"nodeType": "YulFunctionCall",
																"src": "187:12:14"
															},
															"nativeSrc": "187:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:14"
											},
											{
												"body": {
													"nativeSrc": "300:28:14",
													"nodeType": "YulBlock",
													"src": "300:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:14",
																		"nodeType": "YulLiteral",
																		"src": "317:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:14",
																		"nodeType": "YulLiteral",
																		"src": "320:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:14"
																},
																"nativeSrc": "310:12:14",
																"nodeType": "YulFunctionCall",
																"src": "310:12:14"
															},
															"nativeSrc": "310:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:14"
											},
											{
												"body": {
													"nativeSrc": "379:32:14",
													"nodeType": "YulBlock",
													"src": "379:32:14",
													"statements": [
														{
															"nativeSrc": "389:16:14",
															"nodeType": "YulAssignment",
															"src": "389:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:14",
																"nodeType": "YulIdentifier",
																"src": "400:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:14",
														"nodeType": "YulTypedName",
														"src": "361:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:14",
														"nodeType": "YulTypedName",
														"src": "371:7:14",
														"type": ""
													}
												],
												"src": "334:77:14"
											},
											{
												"body": {
													"nativeSrc": "460:79:14",
													"nodeType": "YulBlock",
													"src": "460:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:14",
																"nodeType": "YulBlock",
																"src": "517:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:14",
																					"nodeType": "YulLiteral",
																					"src": "526:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:14",
																					"nodeType": "YulLiteral",
																					"src": "529:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:14"
																			},
																			"nativeSrc": "519:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:14"
																		},
																		"nativeSrc": "519:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:14"
																				},
																				"nativeSrc": "490:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:14"
																		},
																		"nativeSrc": "480:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:14"
																},
																"nativeSrc": "473:43:14",
																"nodeType": "YulFunctionCall",
																"src": "473:43:14"
															},
															"nativeSrc": "470:63:14",
															"nodeType": "YulIf",
															"src": "470:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:14",
														"nodeType": "YulTypedName",
														"src": "453:5:14",
														"type": ""
													}
												],
												"src": "417:122:14"
											},
											{
												"body": {
													"nativeSrc": "608:80:14",
													"nodeType": "YulBlock",
													"src": "608:80:14",
													"statements": [
														{
															"nativeSrc": "618:22:14",
															"nodeType": "YulAssignment",
															"src": "618:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:14"
																},
																"nativeSrc": "627:13:14",
																"nodeType": "YulFunctionCall",
																"src": "627:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:14"
																},
																"nativeSrc": "649:33:14",
																"nodeType": "YulFunctionCall",
																"src": "649:33:14"
															},
															"nativeSrc": "649:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:14",
														"nodeType": "YulTypedName",
														"src": "586:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:14",
														"nodeType": "YulTypedName",
														"src": "594:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:14",
														"nodeType": "YulTypedName",
														"src": "602:5:14",
														"type": ""
													}
												],
												"src": "545:143:14"
											},
											{
												"body": {
													"nativeSrc": "739:81:14",
													"nodeType": "YulBlock",
													"src": "739:81:14",
													"statements": [
														{
															"nativeSrc": "749:65:14",
															"nodeType": "YulAssignment",
															"src": "749:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "764:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "764:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "771:42:14",
																		"nodeType": "YulLiteral",
																		"src": "771:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "760:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "760:3:14"
																},
																"nativeSrc": "760:54:14",
																"nodeType": "YulFunctionCall",
																"src": "760:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "749:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "749:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "694:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "721:5:14",
														"nodeType": "YulTypedName",
														"src": "721:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "731:7:14",
														"nodeType": "YulTypedName",
														"src": "731:7:14",
														"type": ""
													}
												],
												"src": "694:126:14"
											},
											{
												"body": {
													"nativeSrc": "871:51:14",
													"nodeType": "YulBlock",
													"src": "871:51:14",
													"statements": [
														{
															"nativeSrc": "881:35:14",
															"nodeType": "YulAssignment",
															"src": "881:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "910:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "910:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "892:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "892:17:14"
																},
																"nativeSrc": "892:24:14",
																"nodeType": "YulFunctionCall",
																"src": "892:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "881:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "881:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "826:96:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "853:5:14",
														"nodeType": "YulTypedName",
														"src": "853:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "863:7:14",
														"nodeType": "YulTypedName",
														"src": "863:7:14",
														"type": ""
													}
												],
												"src": "826:96:14"
											},
											{
												"body": {
													"nativeSrc": "971:79:14",
													"nodeType": "YulBlock",
													"src": "971:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:14",
																"nodeType": "YulBlock",
																"src": "1028:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:14"
																			},
																			"nativeSrc": "1030:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:14"
																		},
																		"nativeSrc": "1030:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1001:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:14"
																				},
																				"nativeSrc": "1001:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:14"
																		},
																		"nativeSrc": "991:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:14"
																},
																"nativeSrc": "984:43:14",
																"nodeType": "YulFunctionCall",
																"src": "984:43:14"
															},
															"nativeSrc": "981:63:14",
															"nodeType": "YulIf",
															"src": "981:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "928:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:14",
														"nodeType": "YulTypedName",
														"src": "964:5:14",
														"type": ""
													}
												],
												"src": "928:122:14"
											},
											{
												"body": {
													"nativeSrc": "1119:80:14",
													"nodeType": "YulBlock",
													"src": "1119:80:14",
													"statements": [
														{
															"nativeSrc": "1129:22:14",
															"nodeType": "YulAssignment",
															"src": "1129:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:14"
																},
																"nativeSrc": "1138:13:14",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1160:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:14"
																},
																"nativeSrc": "1160:33:14",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:14"
															},
															"nativeSrc": "1160:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:14"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "1056:143:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:14",
														"nodeType": "YulTypedName",
														"src": "1097:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:14",
														"nodeType": "YulTypedName",
														"src": "1105:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:14",
														"nodeType": "YulTypedName",
														"src": "1113:5:14",
														"type": ""
													}
												],
												"src": "1056:143:14"
											},
											{
												"body": {
													"nativeSrc": "1316:552:14",
													"nodeType": "YulBlock",
													"src": "1316:552:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1362:83:14",
																"nodeType": "YulBlock",
																"src": "1362:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1364:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "1364:77:14"
																			},
																			"nativeSrc": "1364:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1364:79:14"
																		},
																		"nativeSrc": "1364:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1337:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1337:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1346:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1333:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1333:3:14"
																		},
																		"nativeSrc": "1333:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1333:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1358:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1358:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1329:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1329:3:14"
																},
																"nativeSrc": "1329:32:14",
																"nodeType": "YulFunctionCall",
																"src": "1329:32:14"
															},
															"nativeSrc": "1326:119:14",
															"nodeType": "YulIf",
															"src": "1326:119:14"
														},
														{
															"nativeSrc": "1455:128:14",
															"nodeType": "YulBlock",
															"src": "1455:128:14",
															"statements": [
																{
																	"nativeSrc": "1470:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1470:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1484:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1474:6:14",
																			"nodeType": "YulTypedName",
																			"src": "1474:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1499:74:14",
																	"nodeType": "YulAssignment",
																	"src": "1499:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1545:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "1545:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1556:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1556:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1541:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1541:3:14"
																				},
																				"nativeSrc": "1541:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1541:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1565:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1565:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1509:31:14",
																			"nodeType": "YulIdentifier",
																			"src": "1509:31:14"
																		},
																		"nativeSrc": "1509:64:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1509:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1499:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "1499:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1593:129:14",
															"nodeType": "YulBlock",
															"src": "1593:129:14",
															"statements": [
																{
																	"nativeSrc": "1608:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1608:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1622:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1622:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1612:6:14",
																			"nodeType": "YulTypedName",
																			"src": "1612:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1638:74:14",
																	"nodeType": "YulAssignment",
																	"src": "1638:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1684:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "1684:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1695:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1695:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1680:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1680:3:14"
																				},
																				"nativeSrc": "1680:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1680:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1704:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1704:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1648:31:14",
																			"nodeType": "YulIdentifier",
																			"src": "1648:31:14"
																		},
																		"nativeSrc": "1648:64:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1648:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1638:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "1638:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1732:129:14",
															"nodeType": "YulBlock",
															"src": "1732:129:14",
															"statements": [
																{
																	"nativeSrc": "1747:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1747:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1761:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1761:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1751:6:14",
																			"nodeType": "YulTypedName",
																			"src": "1751:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1777:74:14",
																	"nodeType": "YulAssignment",
																	"src": "1777:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1823:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "1823:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1834:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1834:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1819:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1819:3:14"
																				},
																				"nativeSrc": "1819:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1819:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1843:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1843:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1787:31:14",
																			"nodeType": "YulIdentifier",
																			"src": "1787:31:14"
																		},
																		"nativeSrc": "1787:64:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1787:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1777:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "1777:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_address_fromMemory",
												"nativeSrc": "1205:663:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1270:9:14",
														"nodeType": "YulTypedName",
														"src": "1270:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1281:7:14",
														"nodeType": "YulTypedName",
														"src": "1281:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1293:6:14",
														"nodeType": "YulTypedName",
														"src": "1293:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1301:6:14",
														"nodeType": "YulTypedName",
														"src": "1301:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1309:6:14",
														"nodeType": "YulTypedName",
														"src": "1309:6:14",
														"type": ""
													}
												],
												"src": "1205:663:14"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60e060405234801561000f575f5ffd5b506040516131c43803806131c48339818101604052810190610031919061038f565b600180819055505f8303610071576040517ff1f13a3800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f82036100aa576040517fafea1c5700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361010f576040517f9589a27d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82608081815250508160a081815250508073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250506101655f5f1b3361019f60201b60201c565b506101967f2d95a8186db49da8bd2356c70cf02038f7de0d6ed39f6766fe2d93d5e77856163361019f60201b60201c565b505050506103df565b5f6101b0838361029460201b60201c565b61028a5760015f5f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506102276102f760201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905061028e565b5f90505b92915050565b5f5f5f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f5ffd5b5f819050919050565b61031481610302565b811461031e575f5ffd5b50565b5f8151905061032f8161030b565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61035e82610335565b9050919050565b61036e81610354565b8114610378575f5ffd5b50565b5f8151905061038981610365565b92915050565b5f5f5f606084860312156103a6576103a56102fe565b5b5f6103b386828701610321565b93505060206103c486828701610321565b92505060406103d58682870161037b565b9150509250925092565b60805160a05160c051612da661041e5f395f81816108970152610f9e01525f8181610c51015261133301525f8181610fc201526117e80152612da65ff3fe60806040526004361061014e575f3560e01c806391d14854116100b5578063d547741f1161006e578063d547741f14610513578063e7d66d631461053b578063ee3d686614610565578063f21570521461058d578063f3fef3a3146105b7578063f4443d9a146105df57610185565b806391d14854146103f557806392b9f8f514610431578063a217fddf14610459578063a773a50014610483578063b3d8bcdc146104ad578063d3c7c2c7146104e957610185565b806336568abe1161010757806336568abe146102f957806347e7ef24146103215780636805d6ad1461033d57806376e11286146103795780638009b7bd146103a15780638c0ff5b7146103cb57610185565b806301ffc9a7146101b75780631e604ea3146101f3578063248a9ca31461022f5780632e3441a91461026b5780632f2ff15d146102a757806330c0b9ec146102cf57610185565b36610185576040517f3ee6509d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f3921c70300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3480156101c2575f5ffd5b506101dd60048036038101906101d8919061233f565b61061b565b6040516101ea9190612384565b60405180910390f35b3480156101fe575f5ffd5b50610219600480360381019061021491906123f7565b610694565b604051610226919061243a565b60405180910390f35b34801561023a575f5ffd5b5061025560048036038101906102509190612486565b610825565b60405161026291906124c0565b60405180910390f35b348015610276575f5ffd5b50610291600480360381019061028c91906123f7565b610841565b60405161029e9190612534565b60405180910390f35b3480156102b2575f5ffd5b506102cd60048036038101906102c8919061254d565b610871565b005b3480156102da575f5ffd5b506102e3610893565b6040516102f0919061243a565b60405180910390f35b348015610304575f5ffd5b5061031f600480360381019061031a919061254d565b61092f565b005b61033b600480360381019061033691906125b5565b6109aa565b005b348015610348575f5ffd5b50610363600480360381019061035e91906125f3565b610db1565b604051610370919061243a565b60405180910390f35b348015610384575f5ffd5b5061039f600480360381019061039a91906125f3565b610e33565b005b3480156103ac575f5ffd5b506103b5610f9c565b6040516103c29190612534565b60405180910390f35b3480156103d6575f5ffd5b506103df610fc0565b6040516103ec919061243a565b60405180910390f35b348015610400575f5ffd5b5061041b6004803603810190610416919061254d565b610fe4565b6040516104289190612384565b60405180910390f35b34801561043c575f5ffd5b50610457600480360381019061045291906125f3565b611047565b005b348015610464575f5ffd5b5061046d61132b565b60405161047a91906124c0565b60405180910390f35b34801561048e575f5ffd5b50610497611331565b6040516104a4919061243a565b60405180910390f35b3480156104b8575f5ffd5b506104d360048036038101906104ce91906123f7565b611355565b6040516104e0919061243a565b60405180910390f35b3480156104f4575f5ffd5b506104fd61136a565b60405161050a91906126e8565b60405180910390f35b34801561051e575f5ffd5b506105396004803603810190610534919061254d565b6113f5565b005b348015610546575f5ffd5b5061054f611417565b60405161055c919061243a565b60405180910390f35b348015610570575f5ffd5b5061058b600480360381019061058691906123f7565b61141d565b005b348015610598575f5ffd5b506105a1611781565b6040516105ae91906124c0565b60405180910390f35b3480156105c2575f5ffd5b506105dd60048036038101906105d891906125b5565b6117a5565b005b3480156105ea575f5ffd5b50610605600480360381019061060091906123f7565b611bb0565b604051610612919061243a565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061068d575061068c82611bc5565b5b9050919050565b5f5f5f90505b600680549050811015610791575f600682815481106106bc576106bb612708565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f60035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f811115610782576107748282611c2e565b8461077f9190612762565b93505b5050808060010191505061069a565b5061081360035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611e0c565b8161081e9190612762565b9050919050565b5f5f5f8381526020019081526020015f20600101549050919050565b6002602052805f5260405f205f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61087a82610825565b61088381611e3b565b61088d8383611e4f565b50505050565b5f5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156108fe573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610922919061281b565b5050509150508091505090565b610937611f38565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461099b576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109a58282611f3f565b505050565b6109b2612028565b5f5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610abd575f3403610a1f576040517f8615019900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a2834611e0c565b90503460035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610ab19190612762565b92505081905550610c3e565b60075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610b3d576040517f3dd1b30500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8203610b76576040517f8615019900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ba33330848673ffffffffffffffffffffffffffffffffffffffff16612077909392919063ffffffff16565b610bad8383611c2e565b90508160035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610c369190612762565b925050819055505b5f81600854610c4d9190612762565b90507f0000000000000000000000000000000000000000000000000000000000000000811115610ca9576040517f448f3ca800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060088190555060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f815480929190610cfd90612892565b91905055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f57bad7e3c9efecf6e1f60bbd846b999e9da4a409224287a8df09779f2330135e5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614610d8a5785610d8c565b345b85604051610d9b9291906128d9565b60405180910390a35050610dad6120f9565b5050565b5f60035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b7f2d95a8186db49da8bd2356c70cf02038f7de0d6ed39f6766fe2d93d5e7785616610e5d81611e3b565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ec2576040517f9589a27d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fd2d8394cf7549a5ddbc2ba3dd7b2de8d53c891472d1f2907008ed6a10045fdae60405160405180910390a3505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f5f5f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b7f2d95a8186db49da8bd2356c70cf02038f7de0d6ed39f6766fe2d93d5e778561661107181611e3b565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110d6576040517f3dd1b30500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1661121d57600683908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160075f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff167fea3145306a87baeba6bb1a8b5c8d3744f840a81cb436b3509f64fc978600cdfb60405160405180910390a25b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611326578160025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fd2d8394cf7549a5ddbc2ba3dd7b2de8d53c891472d1f2907008ed6a10045fdae60405160405180910390a35b505050565b5f5f1b81565b7f000000000000000000000000000000000000000000000000000000000000000081565b6005602052805f5260405f205f915090505481565b606060068054806020026020016040519081016040528092919081815260200182805480156113eb57602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116113a2575b5050505050905090565b6113fe82610825565b61140781611e3b565b6114118383611f3f565b50505050565b60085481565b7f2d95a8186db49da8bd2356c70cf02038f7de0d6ed39f6766fe2d93d5e778561661144781611e3b565b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166114c7576040517f3dd1b30500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505f5f90505b600680549050811015611697578273ffffffffffffffffffffffffffffffffffffffff166006828154811061155857611557612708565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361168a57600660016006805490506115af9190612900565b815481106115c0576115bf612708565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600682815481106115fc576115fb612708565b5b905f5260205f20015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600680548061165357611652612933565b5b600190038181905f5260205f20015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055611697565b8080600101915050611520565b5060025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690558173ffffffffffffffffffffffffffffffffffffffff167ff940d38196f30e7ff3eb255dd42db8d99a75c1ac112199d4fc314ce6460bfc0c60405160405180910390a28173ffffffffffffffffffffffffffffffffffffffff167ffd58461c4683df397133c7e91fe2aa71559919b405f9e09c9c3af7e875f54e3b60405160405180910390a25050565b7f2d95a8186db49da8bd2356c70cf02038f7de0d6ed39f6766fe2d93d5e778561681565b6117ad612028565b5f81036117e6576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000811115611840576040517f73a7c91000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156118f6576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614611939576119348484611c2e565b611943565b61194283611e0c565b5b905082826119519190612900565b60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508060085f8282546119de9190612900565b9250508190555060055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f815480929190611a3290612892565b91905055505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611b0f575f3373ffffffffffffffffffffffffffffffffffffffff1684604051611a8f9061298d565b5f6040518083038185875af1925050503d805f8114611ac9576040519150601f19603f3d011682016040523d82523d5f602084013e611ace565b606091505b5050905080611b09576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50611b3b565b611b3a33848673ffffffffffffffffffffffffffffffffffffffff166121029092919063ffffffff16565b5b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fde1d532173c6de1e3937c7af1cb92745c738980729f53ac451a725f929f3b7988584604051611b9a9291906128d9565b60405180910390a35050611bac6120f9565b5050565b6004602052805f5260405f205f915090505481565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f5f60025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611cf4576040517f9589a27d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015611d3e573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d62919061281b565b5050509150505f8573ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611db2573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611dd691906129d7565b90505f611de38683612181565b90506305f5e1008382611df69190612a02565b611e009190612a70565b94505050505092915050565b5f5f611e16610893565b90506305f5e1008184611e299190612a02565b611e339190612a70565b915050919050565b611e4c81611e47611f38565b6121fa565b50565b5f611e5a8383610fe4565b611f2e5760015f5f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611ecb611f38565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050611f32565b5f90505b92915050565b5f33905090565b5f611f4a8383610fe4565b1561201e575f5f5f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611fbb611f38565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050612022565b5f90505b92915050565b60026001540361206d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161206490612afa565b60405180910390fd5b6002600181905550565b6120f3848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016120ac93929190612b27565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061224b565b50505050565b60018081905550565b61217c838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401612135929190612b5c565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061224b565b505050565b5f60068260ff1611156121b95760068261219b9190612b83565b600a6121a79190612ce6565b836121b29190612a70565b90506121f4565b60068260ff1610156121f0578160066121d29190612b83565b600a6121de9190612ce6565b836121e99190612a02565b90506121f4565b8290505b92915050565b6122048282610fe4565b6122475780826040517fe2517d3f00000000000000000000000000000000000000000000000000000000815260040161223e929190612d30565b60405180910390fd5b5050565b5f5f60205f8451602086015f885af18061226a576040513d5f823e3d81fd5b3d92505f519150505f821461228357600181141561229e565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b156122e057836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016122d79190612d57565b60405180910390fd5b50505050565b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61231e816122ea565b8114612328575f5ffd5b50565b5f8135905061233981612315565b92915050565b5f60208284031215612354576123536122e6565b5b5f6123618482850161232b565b91505092915050565b5f8115159050919050565b61237e8161236a565b82525050565b5f6020820190506123975f830184612375565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6123c68261239d565b9050919050565b6123d6816123bc565b81146123e0575f5ffd5b50565b5f813590506123f1816123cd565b92915050565b5f6020828403121561240c5761240b6122e6565b5b5f612419848285016123e3565b91505092915050565b5f819050919050565b61243481612422565b82525050565b5f60208201905061244d5f83018461242b565b92915050565b5f819050919050565b61246581612453565b811461246f575f5ffd5b50565b5f813590506124808161245c565b92915050565b5f6020828403121561249b5761249a6122e6565b5b5f6124a884828501612472565b91505092915050565b6124ba81612453565b82525050565b5f6020820190506124d35f8301846124b1565b92915050565b5f819050919050565b5f6124fc6124f76124f28461239d565b6124d9565b61239d565b9050919050565b5f61250d826124e2565b9050919050565b5f61251e82612503565b9050919050565b61252e81612514565b82525050565b5f6020820190506125475f830184612525565b92915050565b5f5f60408385031215612563576125626122e6565b5b5f61257085828601612472565b9250506020612581858286016123e3565b9150509250929050565b61259481612422565b811461259e575f5ffd5b50565b5f813590506125af8161258b565b92915050565b5f5f604083850312156125cb576125ca6122e6565b5b5f6125d8858286016123e3565b92505060206125e9858286016125a1565b9150509250929050565b5f5f60408385031215612609576126086122e6565b5b5f612616858286016123e3565b9250506020612627858286016123e3565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b612663816123bc565b82525050565b5f612674838361265a565b60208301905092915050565b5f602082019050919050565b5f61269682612631565b6126a0818561263b565b93506126ab8361264b565b805f5b838110156126db5781516126c28882612669565b97506126cd83612680565b9250506001810190506126ae565b5085935050505092915050565b5f6020820190508181035f830152612700818461268c565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61276c82612422565b915061277783612422565b925082820190508082111561278f5761278e612735565b5b92915050565b5f69ffffffffffffffffffff82169050919050565b6127b381612795565b81146127bd575f5ffd5b50565b5f815190506127ce816127aa565b92915050565b5f819050919050565b6127e6816127d4565b81146127f0575f5ffd5b50565b5f81519050612801816127dd565b92915050565b5f815190506128158161258b565b92915050565b5f5f5f5f5f60a08688031215612834576128336122e6565b5b5f612841888289016127c0565b9550506020612852888289016127f3565b945050604061286388828901612807565b935050606061287488828901612807565b9250506080612885888289016127c0565b9150509295509295909350565b5f61289c82612422565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036128ce576128cd612735565b5b600182019050919050565b5f6040820190506128ec5f83018561242b565b6128f9602083018461242b565b9392505050565b5f61290a82612422565b915061291583612422565b925082820390508181111561292d5761292c612735565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffd5b5f81905092915050565b50565b5f6129785f83612960565b91506129838261296a565b5f82019050919050565b5f6129978261296d565b9150819050919050565b5f60ff82169050919050565b6129b6816129a1565b81146129c0575f5ffd5b50565b5f815190506129d1816129ad565b92915050565b5f602082840312156129ec576129eb6122e6565b5b5f6129f9848285016129c3565b91505092915050565b5f612a0c82612422565b9150612a1783612422565b9250828202612a2581612422565b91508282048414831517612a3c57612a3b612735565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f612a7a82612422565b9150612a8583612422565b925082612a9557612a94612a43565b5b828204905092915050565b5f82825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612ae4601f83612aa0565b9150612aef82612ab0565b602082019050919050565b5f6020820190508181035f830152612b1181612ad8565b9050919050565b612b21816123bc565b82525050565b5f606082019050612b3a5f830186612b18565b612b476020830185612b18565b612b54604083018461242b565b949350505050565b5f604082019050612b6f5f830185612b18565b612b7c602083018461242b565b9392505050565b5f612b8d826129a1565b9150612b98836129a1565b9250828203905060ff811115612bb157612bb0612735565b5b92915050565b5f8160011c9050919050565b5f5f8291508390505b6001851115612c0c57808604811115612be857612be7612735565b5b6001851615612bf75780820291505b8081029050612c0585612bb7565b9450612bcc565b94509492505050565b5f82612c245760019050612cdf565b81612c31575f9050612cdf565b8160018114612c475760028114612c5157612c80565b6001915050612cdf565b60ff841115612c6357612c62612735565b5b8360020a915084821115612c7a57612c79612735565b5b50612cdf565b5060208310610133831016604e8410600b8410161715612cb55782820a905083811115612cb057612caf612735565b5b612cdf565b612cc28484846001612bc3565b92509050818404811115612cd957612cd8612735565b5b81810290505b9392505050565b5f612cf082612422565b9150612cfb836129a1565b9250612d287fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612c15565b905092915050565b5f604082019050612d435f830185612b18565b612d5060208301846124b1565b9392505050565b5f602082019050612d6a5f830184612b18565b9291505056fea2646970667358221220185bc13f375add1f081d4958d6750a25250b43993e3ab57652cee2f38f00fd8264736f6c634300081e0033",
							"opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x31C4 CODESIZE SUB DUP1 PUSH2 0x31C4 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x38F JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH0 DUP4 SUB PUSH2 0x71 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF1F13A3800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 SUB PUSH2 0xAA JUMPI PUSH1 0x40 MLOAD PUSH32 0xAFEA1C5700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10F JUMPI PUSH1 0x40 MLOAD PUSH32 0x9589A27D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x80 DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x165 PUSH0 PUSH0 SHL CALLER PUSH2 0x19F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x196 PUSH32 0x2D95A8186DB49DA8BD2356C70CF02038F7DE0D6ED39F6766FE2D93D5E7785616 CALLER PUSH2 0x19F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP PUSH2 0x3DF JUMP JUMPDEST PUSH0 PUSH2 0x1B0 DUP4 DUP4 PUSH2 0x294 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x28A JUMPI PUSH1 0x1 PUSH0 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x227 PUSH2 0x2F7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x28E JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x314 DUP2 PUSH2 0x302 JUMP JUMPDEST DUP2 EQ PUSH2 0x31E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x32F DUP2 PUSH2 0x30B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x35E DUP3 PUSH2 0x335 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x36E DUP2 PUSH2 0x354 JUMP JUMPDEST DUP2 EQ PUSH2 0x378 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x389 DUP2 PUSH2 0x365 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3A6 JUMPI PUSH2 0x3A5 PUSH2 0x2FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3B3 DUP7 DUP3 DUP8 ADD PUSH2 0x321 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3C4 DUP7 DUP3 DUP8 ADD PUSH2 0x321 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3D5 DUP7 DUP3 DUP8 ADD PUSH2 0x37B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x2DA6 PUSH2 0x41E PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x897 ADD MSTORE PUSH2 0xF9E ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0xC51 ADD MSTORE PUSH2 0x1333 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0xFC2 ADD MSTORE PUSH2 0x17E8 ADD MSTORE PUSH2 0x2DA6 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0xB5 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x513 JUMPI DUP1 PUSH4 0xE7D66D63 EQ PUSH2 0x53B JUMPI DUP1 PUSH4 0xEE3D6866 EQ PUSH2 0x565 JUMPI DUP1 PUSH4 0xF2157052 EQ PUSH2 0x58D JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x5B7 JUMPI DUP1 PUSH4 0xF4443D9A EQ PUSH2 0x5DF JUMPI PUSH2 0x185 JUMP JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0x92B9F8F5 EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0xA773A500 EQ PUSH2 0x483 JUMPI DUP1 PUSH4 0xB3D8BCDC EQ PUSH2 0x4AD JUMPI DUP1 PUSH4 0xD3C7C2C7 EQ PUSH2 0x4E9 JUMPI PUSH2 0x185 JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0x107 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0x6805D6AD EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x76E11286 EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x8009B7BD EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0x8C0FF5B7 EQ PUSH2 0x3CB JUMPI PUSH2 0x185 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x1E604EA3 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x2E3441A9 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x30C0B9EC EQ PUSH2 0x2CF JUMPI PUSH2 0x185 JUMP JUMPDEST CALLDATASIZE PUSH2 0x185 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE6509D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x3921C70300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x233F JUMP JUMPDEST PUSH2 0x61B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x2384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x23F7 JUMP JUMPDEST PUSH2 0x694 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x243A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x2486 JUMP JUMPDEST PUSH2 0x825 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x24C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x276 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x291 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x23F7 JUMP JUMPDEST PUSH2 0x841 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x2534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x254D JUMP JUMPDEST PUSH2 0x871 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2E3 PUSH2 0x893 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x243A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x304 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x31F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x254D JUMP JUMPDEST PUSH2 0x92F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x25B5 JUMP JUMPDEST PUSH2 0x9AA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x348 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x363 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35E SWAP2 SWAP1 PUSH2 0x25F3 JUMP JUMPDEST PUSH2 0xDB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x243A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x384 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x39F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39A SWAP2 SWAP1 PUSH2 0x25F3 JUMP JUMPDEST PUSH2 0xE33 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3B5 PUSH2 0xF9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C2 SWAP2 SWAP1 PUSH2 0x2534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3DF PUSH2 0xFC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0x243A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x400 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x41B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x416 SWAP2 SWAP1 PUSH2 0x254D JUMP JUMPDEST PUSH2 0xFE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x2384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x457 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x25F3 JUMP JUMPDEST PUSH2 0x1047 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x464 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x46D PUSH2 0x132B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x24C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x497 PUSH2 0x1331 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A4 SWAP2 SWAP1 PUSH2 0x243A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4CE SWAP2 SWAP1 PUSH2 0x23F7 JUMP JUMPDEST PUSH2 0x1355 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E0 SWAP2 SWAP1 PUSH2 0x243A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4FD PUSH2 0x136A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50A SWAP2 SWAP1 PUSH2 0x26E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x539 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x534 SWAP2 SWAP1 PUSH2 0x254D JUMP JUMPDEST PUSH2 0x13F5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x546 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x54F PUSH2 0x1417 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55C SWAP2 SWAP1 PUSH2 0x243A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x570 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x58B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x586 SWAP2 SWAP1 PUSH2 0x23F7 JUMP JUMPDEST PUSH2 0x141D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x598 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x5A1 PUSH2 0x1781 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5AE SWAP2 SWAP1 PUSH2 0x24C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x5DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D8 SWAP2 SWAP1 PUSH2 0x25B5 JUMP JUMPDEST PUSH2 0x17A5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x605 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x600 SWAP2 SWAP1 PUSH2 0x23F7 JUMP JUMPDEST PUSH2 0x1BB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x612 SWAP2 SWAP1 PUSH2 0x243A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x68D JUMPI POP PUSH2 0x68C DUP3 PUSH2 0x1BC5 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x791 JUMPI PUSH0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x6BC JUMPI PUSH2 0x6BB PUSH2 0x2708 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x782 JUMPI PUSH2 0x774 DUP3 DUP3 PUSH2 0x1C2E JUMP JUMPDEST DUP5 PUSH2 0x77F SWAP2 SWAP1 PUSH2 0x2762 JUMP JUMPDEST SWAP4 POP JUMPDEST POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x69A JUMP JUMPDEST POP PUSH2 0x813 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1E0C JUMP JUMPDEST DUP2 PUSH2 0x81E SWAP2 SWAP1 PUSH2 0x2762 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x87A DUP3 PUSH2 0x825 JUMP JUMPDEST PUSH2 0x883 DUP2 PUSH2 0x1E3B JUMP JUMPDEST PUSH2 0x88D DUP4 DUP4 PUSH2 0x1E4F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8FE JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x922 SWAP2 SWAP1 PUSH2 0x281B JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x937 PUSH2 0x1F38 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x99B JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9A5 DUP3 DUP3 PUSH2 0x1F3F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x9B2 PUSH2 0x2028 JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xABD JUMPI PUSH0 CALLVALUE SUB PUSH2 0xA1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8615019900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA28 CALLVALUE PUSH2 0x1E0C JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xAB1 SWAP2 SWAP1 PUSH2 0x2762 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xC3E JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xB3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x3DD1B30500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 SUB PUSH2 0xB76 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8615019900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBA3 CALLER ADDRESS DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2077 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xBAD DUP4 DUP4 PUSH2 0x1C2E JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC36 SWAP2 SWAP1 PUSH2 0x2762 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 DUP2 PUSH1 0x8 SLOAD PUSH2 0xC4D SWAP2 SWAP1 PUSH2 0x2762 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 DUP2 GT ISZERO PUSH2 0xCA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x448F3CA800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xCFD SWAP1 PUSH2 0x2892 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x57BAD7E3C9EFECF6E1F60BBD846B999E9DA4A409224287A8DF09779F2330135E PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD8A JUMPI DUP6 PUSH2 0xD8C JUMP JUMPDEST CALLVALUE JUMPDEST DUP6 PUSH1 0x40 MLOAD PUSH2 0xD9B SWAP3 SWAP2 SWAP1 PUSH2 0x28D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0xDAD PUSH2 0x20F9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2D95A8186DB49DA8BD2356C70CF02038F7DE0D6ED39F6766FE2D93D5E7785616 PUSH2 0xE5D DUP2 PUSH2 0x1E3B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9589A27D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD2D8394CF7549A5DDBC2BA3DD7B2DE8D53C891472D1F2907008ED6A10045FDAE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2D95A8186DB49DA8BD2356C70CF02038F7DE0D6ED39F6766FE2D93D5E7785616 PUSH2 0x1071 DUP2 PUSH2 0x1E3B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3DD1B30500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x121D JUMPI PUSH1 0x6 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA3145306A87BAEBA6BB1A8B5C8D3744F840A81CB436B3509F64FC978600CDFB PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1326 JUMPI DUP2 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD2D8394CF7549A5DDBC2BA3DD7B2DE8D53C891472D1F2907008ED6A10045FDAE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x13EB JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x13A2 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x13FE DUP3 PUSH2 0x825 JUMP JUMPDEST PUSH2 0x1407 DUP2 PUSH2 0x1E3B JUMP JUMPDEST PUSH2 0x1411 DUP4 DUP4 PUSH2 0x1F3F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x2D95A8186DB49DA8BD2356C70CF02038F7DE0D6ED39F6766FE2D93D5E7785616 PUSH2 0x1447 DUP2 PUSH2 0x1E3B JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x14C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3DD1B30500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1697 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1558 JUMPI PUSH2 0x1557 PUSH2 0x2708 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x168A JUMPI PUSH1 0x6 PUSH1 0x1 PUSH1 0x6 DUP1 SLOAD SWAP1 POP PUSH2 0x15AF SWAP2 SWAP1 PUSH2 0x2900 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x15C0 JUMPI PUSH2 0x15BF PUSH2 0x2708 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x15FC JUMPI PUSH2 0x15FB PUSH2 0x2708 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 DUP1 SLOAD DUP1 PUSH2 0x1653 JUMPI PUSH2 0x1652 PUSH2 0x2933 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE PUSH2 0x1697 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1520 JUMP JUMPDEST POP PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF940D38196F30E7FF3EB255DD42DB8D99A75C1AC112199D4FC314CE6460BFC0C PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFD58461C4683DF397133C7E91FE2AA71559919B405F9E09C9C3AF7E875F54E3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH32 0x2D95A8186DB49DA8BD2356C70CF02038F7DE0D6ED39F6766FE2D93D5E7785616 DUP2 JUMP JUMPDEST PUSH2 0x17AD PUSH2 0x2028 JUMP JUMPDEST PUSH0 DUP2 SUB PUSH2 0x17E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP2 GT ISZERO PUSH2 0x1840 JUMPI PUSH1 0x40 MLOAD PUSH32 0x73A7C91000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x18F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1939 JUMPI PUSH2 0x1934 DUP5 DUP5 PUSH2 0x1C2E JUMP JUMPDEST PUSH2 0x1943 JUMP JUMPDEST PUSH2 0x1942 DUP4 PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST SWAP1 POP DUP3 DUP3 PUSH2 0x1951 SWAP2 SWAP1 PUSH2 0x2900 JUMP JUMPDEST PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x19DE SWAP2 SWAP1 PUSH2 0x2900 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1A32 SWAP1 PUSH2 0x2892 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B0F JUMPI PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1A8F SWAP1 PUSH2 0x298D JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1AC9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1ACE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1B09 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0x1B3A CALLER DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2102 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDE1D532173C6DE1E3937C7AF1CB92745C738980729F53AC451A725F929F3B798 DUP6 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1B9A SWAP3 SWAP2 SWAP1 PUSH2 0x28D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0x1BAC PUSH2 0x20F9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9589A27D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D3E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D62 SWAP2 SWAP1 PUSH2 0x281B JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DB2 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DD6 SWAP2 SWAP1 PUSH2 0x29D7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1DE3 DUP7 DUP4 PUSH2 0x2181 JUMP JUMPDEST SWAP1 POP PUSH4 0x5F5E100 DUP4 DUP3 PUSH2 0x1DF6 SWAP2 SWAP1 PUSH2 0x2A02 JUMP JUMPDEST PUSH2 0x1E00 SWAP2 SWAP1 PUSH2 0x2A70 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x1E16 PUSH2 0x893 JUMP JUMPDEST SWAP1 POP PUSH4 0x5F5E100 DUP2 DUP5 PUSH2 0x1E29 SWAP2 SWAP1 PUSH2 0x2A02 JUMP JUMPDEST PUSH2 0x1E33 SWAP2 SWAP1 PUSH2 0x2A70 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E4C DUP2 PUSH2 0x1E47 PUSH2 0x1F38 JUMP JUMPDEST PUSH2 0x21FA JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1E5A DUP4 DUP4 PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0x1F2E JUMPI PUSH1 0x1 PUSH0 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1ECB PUSH2 0x1F38 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1F32 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x1F4A DUP4 DUP4 PUSH2 0xFE4 JUMP JUMPDEST ISZERO PUSH2 0x201E JUMPI PUSH0 PUSH0 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1FBB PUSH2 0x1F38 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x2022 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x206D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2064 SWAP1 PUSH2 0x2AFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x20F3 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x20AC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x224B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x217C DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2135 SWAP3 SWAP2 SWAP1 PUSH2 0x2B5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x224B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 DUP3 PUSH1 0xFF AND GT ISZERO PUSH2 0x21B9 JUMPI PUSH1 0x6 DUP3 PUSH2 0x219B SWAP2 SWAP1 PUSH2 0x2B83 JUMP JUMPDEST PUSH1 0xA PUSH2 0x21A7 SWAP2 SWAP1 PUSH2 0x2CE6 JUMP JUMPDEST DUP4 PUSH2 0x21B2 SWAP2 SWAP1 PUSH2 0x2A70 JUMP JUMPDEST SWAP1 POP PUSH2 0x21F4 JUMP JUMPDEST PUSH1 0x6 DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0x21F0 JUMPI DUP2 PUSH1 0x6 PUSH2 0x21D2 SWAP2 SWAP1 PUSH2 0x2B83 JUMP JUMPDEST PUSH1 0xA PUSH2 0x21DE SWAP2 SWAP1 PUSH2 0x2CE6 JUMP JUMPDEST DUP4 PUSH2 0x21E9 SWAP2 SWAP1 PUSH2 0x2A02 JUMP JUMPDEST SWAP1 POP PUSH2 0x21F4 JUMP JUMPDEST DUP3 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2204 DUP3 DUP3 PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0x2247 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x223E SWAP3 SWAP2 SWAP1 PUSH2 0x2D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x226A JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x2283 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x229E JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x22E0 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22D7 SWAP2 SWAP1 PUSH2 0x2D57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x231E DUP2 PUSH2 0x22EA JUMP JUMPDEST DUP2 EQ PUSH2 0x2328 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2339 DUP2 PUSH2 0x2315 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2354 JUMPI PUSH2 0x2353 PUSH2 0x22E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2361 DUP5 DUP3 DUP6 ADD PUSH2 0x232B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x237E DUP2 PUSH2 0x236A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2397 PUSH0 DUP4 ADD DUP5 PUSH2 0x2375 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23C6 DUP3 PUSH2 0x239D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23D6 DUP2 PUSH2 0x23BC JUMP JUMPDEST DUP2 EQ PUSH2 0x23E0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23F1 DUP2 PUSH2 0x23CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x240C JUMPI PUSH2 0x240B PUSH2 0x22E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2419 DUP5 DUP3 DUP6 ADD PUSH2 0x23E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2434 DUP2 PUSH2 0x2422 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x244D PUSH0 DUP4 ADD DUP5 PUSH2 0x242B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2465 DUP2 PUSH2 0x2453 JUMP JUMPDEST DUP2 EQ PUSH2 0x246F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2480 DUP2 PUSH2 0x245C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x249B JUMPI PUSH2 0x249A PUSH2 0x22E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24A8 DUP5 DUP3 DUP6 ADD PUSH2 0x2472 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x24BA DUP2 PUSH2 0x2453 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24D3 PUSH0 DUP4 ADD DUP5 PUSH2 0x24B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24FC PUSH2 0x24F7 PUSH2 0x24F2 DUP5 PUSH2 0x239D JUMP JUMPDEST PUSH2 0x24D9 JUMP JUMPDEST PUSH2 0x239D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x250D DUP3 PUSH2 0x24E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x251E DUP3 PUSH2 0x2503 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x252E DUP2 PUSH2 0x2514 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2547 PUSH0 DUP4 ADD DUP5 PUSH2 0x2525 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2563 JUMPI PUSH2 0x2562 PUSH2 0x22E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2570 DUP6 DUP3 DUP7 ADD PUSH2 0x2472 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2581 DUP6 DUP3 DUP7 ADD PUSH2 0x23E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2594 DUP2 PUSH2 0x2422 JUMP JUMPDEST DUP2 EQ PUSH2 0x259E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25AF DUP2 PUSH2 0x258B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25CB JUMPI PUSH2 0x25CA PUSH2 0x22E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25D8 DUP6 DUP3 DUP7 ADD PUSH2 0x23E3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x25E9 DUP6 DUP3 DUP7 ADD PUSH2 0x25A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2609 JUMPI PUSH2 0x2608 PUSH2 0x22E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2616 DUP6 DUP3 DUP7 ADD PUSH2 0x23E3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2627 DUP6 DUP3 DUP7 ADD PUSH2 0x23E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2663 DUP2 PUSH2 0x23BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2674 DUP4 DUP4 PUSH2 0x265A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2696 DUP3 PUSH2 0x2631 JUMP JUMPDEST PUSH2 0x26A0 DUP2 DUP6 PUSH2 0x263B JUMP JUMPDEST SWAP4 POP PUSH2 0x26AB DUP4 PUSH2 0x264B JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x26DB JUMPI DUP2 MLOAD PUSH2 0x26C2 DUP9 DUP3 PUSH2 0x2669 JUMP JUMPDEST SWAP8 POP PUSH2 0x26CD DUP4 PUSH2 0x2680 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x26AE JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2700 DUP2 DUP5 PUSH2 0x268C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x276C DUP3 PUSH2 0x2422 JUMP JUMPDEST SWAP2 POP PUSH2 0x2777 DUP4 PUSH2 0x2422 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x278F JUMPI PUSH2 0x278E PUSH2 0x2735 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27B3 DUP2 PUSH2 0x2795 JUMP JUMPDEST DUP2 EQ PUSH2 0x27BD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x27CE DUP2 PUSH2 0x27AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27E6 DUP2 PUSH2 0x27D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x27F0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2801 DUP2 PUSH2 0x27DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2815 DUP2 PUSH2 0x258B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2834 JUMPI PUSH2 0x2833 PUSH2 0x22E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2841 DUP9 DUP3 DUP10 ADD PUSH2 0x27C0 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2852 DUP9 DUP3 DUP10 ADD PUSH2 0x27F3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2863 DUP9 DUP3 DUP10 ADD PUSH2 0x2807 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2874 DUP9 DUP3 DUP10 ADD PUSH2 0x2807 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2885 DUP9 DUP3 DUP10 ADD PUSH2 0x27C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH2 0x289C DUP3 PUSH2 0x2422 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x28CE JUMPI PUSH2 0x28CD PUSH2 0x2735 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x28EC PUSH0 DUP4 ADD DUP6 PUSH2 0x242B JUMP JUMPDEST PUSH2 0x28F9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x242B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x290A DUP3 PUSH2 0x2422 JUMP JUMPDEST SWAP2 POP PUSH2 0x2915 DUP4 PUSH2 0x2422 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x292D JUMPI PUSH2 0x292C PUSH2 0x2735 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x2978 PUSH0 DUP4 PUSH2 0x2960 JUMP JUMPDEST SWAP2 POP PUSH2 0x2983 DUP3 PUSH2 0x296A JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2997 DUP3 PUSH2 0x296D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29B6 DUP2 PUSH2 0x29A1 JUMP JUMPDEST DUP2 EQ PUSH2 0x29C0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x29D1 DUP2 PUSH2 0x29AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29EC JUMPI PUSH2 0x29EB PUSH2 0x22E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29F9 DUP5 DUP3 DUP6 ADD PUSH2 0x29C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2A0C DUP3 PUSH2 0x2422 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A17 DUP4 PUSH2 0x2422 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2A25 DUP2 PUSH2 0x2422 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2A3C JUMPI PUSH2 0x2A3B PUSH2 0x2735 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2A7A DUP3 PUSH2 0x2422 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A85 DUP4 PUSH2 0x2422 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2A95 JUMPI PUSH2 0x2A94 PUSH2 0x2A43 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2AE4 PUSH1 0x1F DUP4 PUSH2 0x2AA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AEF DUP3 PUSH2 0x2AB0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B11 DUP2 PUSH2 0x2AD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B21 DUP2 PUSH2 0x23BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2B3A PUSH0 DUP4 ADD DUP7 PUSH2 0x2B18 JUMP JUMPDEST PUSH2 0x2B47 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2B18 JUMP JUMPDEST PUSH2 0x2B54 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x242B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2B6F PUSH0 DUP4 ADD DUP6 PUSH2 0x2B18 JUMP JUMPDEST PUSH2 0x2B7C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x242B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2B8D DUP3 PUSH2 0x29A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B98 DUP4 PUSH2 0x29A1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0x2BB1 JUMPI PUSH2 0x2BB0 PUSH2 0x2735 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x2C0C JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x2BE8 JUMPI PUSH2 0x2BE7 PUSH2 0x2735 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x2BF7 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x2C05 DUP6 PUSH2 0x2BB7 JUMP JUMPDEST SWAP5 POP PUSH2 0x2BCC JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2C24 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x2CDF JUMP JUMPDEST DUP2 PUSH2 0x2C31 JUMPI PUSH0 SWAP1 POP PUSH2 0x2CDF JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2C47 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2C51 JUMPI PUSH2 0x2C80 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2CDF JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2C63 JUMPI PUSH2 0x2C62 PUSH2 0x2735 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x2C7A JUMPI PUSH2 0x2C79 PUSH2 0x2735 JUMP JUMPDEST JUMPDEST POP PUSH2 0x2CDF JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2CB5 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x2CB0 JUMPI PUSH2 0x2CAF PUSH2 0x2735 JUMP JUMPDEST JUMPDEST PUSH2 0x2CDF JUMP JUMPDEST PUSH2 0x2CC2 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x2BC3 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x2CD9 JUMPI PUSH2 0x2CD8 PUSH2 0x2735 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2CF0 DUP3 PUSH2 0x2422 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CFB DUP4 PUSH2 0x29A1 JUMP JUMPDEST SWAP3 POP PUSH2 0x2D28 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x2C15 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2D43 PUSH0 DUP4 ADD DUP6 PUSH2 0x2B18 JUMP JUMPDEST PUSH2 0x2D50 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x24B1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D6A PUSH0 DUP4 ADD DUP5 PUSH2 0x2B18 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR JUMPDEST 0xC1 EXTCODEHASH CALLDATACOPY GAS 0xDD 0x1F ADDMOD SAR BLOBHASH PC 0xD6 PUSH22 0xA25250B43993E3AB57652CEE2F38F00FD8264736F6C PUSH4 0x4300081E STOP CALLER ",
							"sourceMap": "814:13783:13:-:0;;;5834:589;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:6;1821:7;:22;;;;5951:1:13;5933:14;:19;5929:58;;5961:26;;;;;;;;;;;;;;5929:58;6023:1;6002:17;:22;5998:56;;6033:21;;;;;;;;;;;;;;5998:56;6092:1;6069:25;;:11;:25;;;6065:53;;6103:15;;;;;;;;;;;;;;6065:53;6148:14;6132:30;;;;;;6196:17;6173:40;;;;;;6259:11;6224:47;;;;;;;;;;6321:42;2241:4:1;6332:18:13;;6352:10;6321;;;:42;;:::i;:::-;;6374:41;1039:30;6404:10;6374;;;:41;;:::i;:::-;;5834:589;;;814:13783;;6155:316:1;6232:4;6253:22;6261:4;6267:7;6253;;;:22;;:::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;;;:12;;:::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;2830:136::-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;656:96:10:-;709:7;735:10;728:17;;656:96;:::o;88:117:14:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:126::-;731:7;771:42;764:5;760:54;749:65;;694:126;;;:::o;826:96::-;863:7;892:24;910:5;892:24;:::i;:::-;881:35;;826:96;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:663::-;1293:6;1301;1309;1358:2;1346:9;1337:7;1333:23;1329:32;1326:119;;;1364:79;;:::i;:::-;1326:119;1484:1;1509:64;1565:7;1556:6;1545:9;1541:22;1509:64;:::i;:::-;1499:74;;1455:128;1622:2;1648:64;1704:7;1695:6;1684:9;1680:22;1648:64;:::i;:::-;1638:74;;1593:129;1761:2;1787:64;1843:7;1834:6;1823:9;1819:22;1787:64;:::i;:::-;1777:74;;1732:129;1205:663;;;;;:::o;814:13783:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BANK_MANAGER_ROLE_1235": {
									"entryPoint": 6017,
									"id": 1235,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_76": {
									"entryPoint": 4907,
									"id": 76,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2112": {
									"entryPoint": null,
									"id": 2112,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2119": {
									"entryPoint": null,
									"id": 2119,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1106": {
									"entryPoint": 8779,
									"id": 1106,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_140": {
									"entryPoint": 7739,
									"id": 140,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_161": {
									"entryPoint": 8698,
									"id": 161,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_convertEthToUSD_2000": {
									"entryPoint": 7692,
									"id": 2000,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_convertTokenToUSD_2061": {
									"entryPoint": 7214,
									"id": 2061,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_grantRole_303": {
									"entryPoint": 7759,
									"id": 303,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1160": {
									"entryPoint": 7992,
									"id": 1160,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_568": {
									"entryPoint": 8441,
									"id": 568,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_560": {
									"entryPoint": 8232,
									"id": 560,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_normalizeToUSDCDecimals_2105": {
									"entryPoint": 8577,
									"id": 2105,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_revokeRole_341": {
									"entryPoint": 7999,
									"id": 341,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@depositCount_1262": {
									"entryPoint": 7088,
									"id": 1262,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_1733": {
									"entryPoint": 2474,
									"id": 1733,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@ethUsdFeed_1245": {
									"entryPoint": 3996,
									"id": 1245,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getLatestEthPrice_1921": {
									"entryPoint": 2195,
									"id": 1921,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRoleAdmin_175": {
									"entryPoint": 2085,
									"id": 175,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getSupportedTokens_1880": {
									"entryPoint": 4970,
									"id": 1880,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTotalDepositsInUSD_1980": {
									"entryPoint": 1684,
									"id": 1980,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUserBalance_1871": {
									"entryPoint": 3505,
									"id": 1871,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@grantRole_194": {
									"entryPoint": 2161,
									"id": 194,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_127": {
									"entryPoint": 4068,
									"id": 127,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@maxWithdrawal_1238": {
									"entryPoint": 4032,
									"id": 1238,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@priceFeedForToken_1250": {
									"entryPoint": 2113,
									"id": 1250,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceRole_236": {
									"entryPoint": 2351,
									"id": 236,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_213": {
									"entryPoint": 5109,
									"id": 213,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_756": {
									"entryPoint": 8311,
									"id": 756,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_729": {
									"entryPoint": 8450,
									"id": 729,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setPriceFeed_1598": {
									"entryPoint": 3635,
									"id": 1598,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportToken_1490": {
									"entryPoint": 4167,
									"id": 1490,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_109": {
									"entryPoint": 1563,
									"id": 109,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1201": {
									"entryPoint": 7109,
									"id": 1201,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalBankCapacityUSD_1241": {
									"entryPoint": 4913,
									"id": 1241,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalDepositsUSD_1277": {
									"entryPoint": 5143,
									"id": 1277,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unsupportToken_1564": {
									"entryPoint": 5149,
									"id": 1564,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_1854": {
									"entryPoint": 6053,
									"id": 1854,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@withdrawalCount_1267": {
									"entryPoint": 4949,
									"id": 1267,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 9187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 9330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 9003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 10227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 9633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 10247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 10176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 10691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 9207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 9653,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 9350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 9549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 9023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 10267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 10711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 9833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 9818,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 11032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 9868,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 9077,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 9393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack": {
									"entryPoint": 9509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 9259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 11607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11047,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 11568,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11100,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 9960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 9092,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 9408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed": {
									"entryPoint": 9524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 9274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10457,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 9803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 9777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 9856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 9787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 10912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 10864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 11203,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 11494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 11285,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 10754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 10496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint8": {
									"entryPoint": 11139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 9148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 9066,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 9299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 8938,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 10196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 9117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 9250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 10657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 10133,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_AggregatorV3Interface_$45_to_t_address": {
									"entryPoint": 9492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 9475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 9442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 9433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 10386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10037,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 10819,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 10547,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9992,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8934,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_right_1_unsigned": {
									"entryPoint": 11191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 10602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 10928,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 9165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 9308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 8981,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 10205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 9611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 10669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 10154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:19670:14",
										"nodeType": "YulBlock",
										"src": "0:19670:14",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:14",
													"nodeType": "YulBlock",
													"src": "47:35:14",
													"statements": [
														{
															"nativeSrc": "57:19:14",
															"nodeType": "YulAssignment",
															"src": "57:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:14",
																		"nodeType": "YulLiteral",
																		"src": "73:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:14"
																},
																"nativeSrc": "67:9:14",
																"nodeType": "YulFunctionCall",
																"src": "67:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:14",
														"nodeType": "YulTypedName",
														"src": "40:6:14",
														"type": ""
													}
												],
												"src": "7:75:14"
											},
											{
												"body": {
													"nativeSrc": "177:28:14",
													"nodeType": "YulBlock",
													"src": "177:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:14",
																		"nodeType": "YulLiteral",
																		"src": "194:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:14",
																		"nodeType": "YulLiteral",
																		"src": "197:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:14"
																},
																"nativeSrc": "187:12:14",
																"nodeType": "YulFunctionCall",
																"src": "187:12:14"
															},
															"nativeSrc": "187:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:14"
											},
											{
												"body": {
													"nativeSrc": "300:28:14",
													"nodeType": "YulBlock",
													"src": "300:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:14",
																		"nodeType": "YulLiteral",
																		"src": "317:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:14",
																		"nodeType": "YulLiteral",
																		"src": "320:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:14"
																},
																"nativeSrc": "310:12:14",
																"nodeType": "YulFunctionCall",
																"src": "310:12:14"
															},
															"nativeSrc": "310:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:14"
											},
											{
												"body": {
													"nativeSrc": "378:105:14",
													"nodeType": "YulBlock",
													"src": "378:105:14",
													"statements": [
														{
															"nativeSrc": "388:89:14",
															"nodeType": "YulAssignment",
															"src": "388:89:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:14",
																		"nodeType": "YulLiteral",
																		"src": "410:66:14",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:14"
																},
																"nativeSrc": "399:78:14",
																"nodeType": "YulFunctionCall",
																"src": "399:78:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:14",
														"nodeType": "YulTypedName",
														"src": "360:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:14",
														"nodeType": "YulTypedName",
														"src": "370:7:14",
														"type": ""
													}
												],
												"src": "334:149:14"
											},
											{
												"body": {
													"nativeSrc": "531:78:14",
													"nodeType": "YulBlock",
													"src": "531:78:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:14",
																"nodeType": "YulBlock",
																"src": "587:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:14",
																					"nodeType": "YulLiteral",
																					"src": "596:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:14",
																					"nodeType": "YulLiteral",
																					"src": "599:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:14"
																			},
																			"nativeSrc": "589:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:14"
																		},
																		"nativeSrc": "589:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:14",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:14"
																				},
																				"nativeSrc": "561:23:14",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:14"
																		},
																		"nativeSrc": "551:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:14"
																},
																"nativeSrc": "544:42:14",
																"nodeType": "YulFunctionCall",
																"src": "544:42:14"
															},
															"nativeSrc": "541:62:14",
															"nodeType": "YulIf",
															"src": "541:62:14"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:14",
														"nodeType": "YulTypedName",
														"src": "524:5:14",
														"type": ""
													}
												],
												"src": "489:120:14"
											},
											{
												"body": {
													"nativeSrc": "666:86:14",
													"nodeType": "YulBlock",
													"src": "666:86:14",
													"statements": [
														{
															"nativeSrc": "676:29:14",
															"nodeType": "YulAssignment",
															"src": "676:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:14"
																},
																"nativeSrc": "685:20:14",
																"nodeType": "YulFunctionCall",
																"src": "685:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:14"
																},
																"nativeSrc": "714:32:14",
																"nodeType": "YulFunctionCall",
																"src": "714:32:14"
															},
															"nativeSrc": "714:32:14",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:14"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:14",
														"nodeType": "YulTypedName",
														"src": "644:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:14",
														"nodeType": "YulTypedName",
														"src": "652:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:14",
														"nodeType": "YulTypedName",
														"src": "660:5:14",
														"type": ""
													}
												],
												"src": "615:137:14"
											},
											{
												"body": {
													"nativeSrc": "823:262:14",
													"nodeType": "YulBlock",
													"src": "823:262:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:14",
																"nodeType": "YulBlock",
																"src": "869:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:14"
																			},
																			"nativeSrc": "871:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:14"
																		},
																		"nativeSrc": "871:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:14"
																		},
																		"nativeSrc": "840:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:14",
																		"nodeType": "YulLiteral",
																		"src": "865:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:14"
																},
																"nativeSrc": "836:32:14",
																"nodeType": "YulFunctionCall",
																"src": "836:32:14"
															},
															"nativeSrc": "833:119:14",
															"nodeType": "YulIf",
															"src": "833:119:14"
														},
														{
															"nativeSrc": "962:116:14",
															"nodeType": "YulBlock",
															"src": "962:116:14",
															"statements": [
																{
																	"nativeSrc": "977:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:14",
																		"nodeType": "YulLiteral",
																		"src": "991:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:14",
																			"nodeType": "YulTypedName",
																			"src": "981:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:14",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:14"
																				},
																				"nativeSrc": "1036:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:14",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:14"
																		},
																		"nativeSrc": "1016:52:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:14",
														"nodeType": "YulTypedName",
														"src": "793:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:14",
														"nodeType": "YulTypedName",
														"src": "804:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:14",
														"nodeType": "YulTypedName",
														"src": "816:6:14",
														"type": ""
													}
												],
												"src": "758:327:14"
											},
											{
												"body": {
													"nativeSrc": "1133:48:14",
													"nodeType": "YulBlock",
													"src": "1133:48:14",
													"statements": [
														{
															"nativeSrc": "1143:32:14",
															"nodeType": "YulAssignment",
															"src": "1143:32:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:14"
																		},
																		"nativeSrc": "1161:13:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:14"
																},
																"nativeSrc": "1154:21:14",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:14",
														"nodeType": "YulTypedName",
														"src": "1115:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:14",
														"nodeType": "YulTypedName",
														"src": "1125:7:14",
														"type": ""
													}
												],
												"src": "1091:90:14"
											},
											{
												"body": {
													"nativeSrc": "1246:50:14",
													"nodeType": "YulBlock",
													"src": "1246:50:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:14",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:14"
																		},
																		"nativeSrc": "1268:21:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:14"
																},
																"nativeSrc": "1256:34:14",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:14"
															},
															"nativeSrc": "1256:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:14"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:14",
														"nodeType": "YulTypedName",
														"src": "1234:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:14",
														"nodeType": "YulTypedName",
														"src": "1241:3:14",
														"type": ""
													}
												],
												"src": "1187:109:14"
											},
											{
												"body": {
													"nativeSrc": "1394:118:14",
													"nodeType": "YulBlock",
													"src": "1394:118:14",
													"statements": [
														{
															"nativeSrc": "1404:26:14",
															"nodeType": "YulAssignment",
															"src": "1404:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:14"
																},
																"nativeSrc": "1412:18:14",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:14",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:14"
																		},
																		"nativeSrc": "1487:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:14",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:14"
																},
																"nativeSrc": "1440:65:14",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:14"
															},
															"nativeSrc": "1440:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:14",
														"nodeType": "YulTypedName",
														"src": "1366:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:14",
														"nodeType": "YulTypedName",
														"src": "1378:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:14",
														"nodeType": "YulTypedName",
														"src": "1389:4:14",
														"type": ""
													}
												],
												"src": "1302:210:14"
											},
											{
												"body": {
													"nativeSrc": "1563:81:14",
													"nodeType": "YulBlock",
													"src": "1563:81:14",
													"statements": [
														{
															"nativeSrc": "1573:65:14",
															"nodeType": "YulAssignment",
															"src": "1573:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1588:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1588:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1595:42:14",
																		"nodeType": "YulLiteral",
																		"src": "1595:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1584:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1584:3:14"
																},
																"nativeSrc": "1584:54:14",
																"nodeType": "YulFunctionCall",
																"src": "1584:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1518:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:14",
														"nodeType": "YulTypedName",
														"src": "1545:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:14",
														"nodeType": "YulTypedName",
														"src": "1555:7:14",
														"type": ""
													}
												],
												"src": "1518:126:14"
											},
											{
												"body": {
													"nativeSrc": "1695:51:14",
													"nodeType": "YulBlock",
													"src": "1695:51:14",
													"statements": [
														{
															"nativeSrc": "1705:35:14",
															"nodeType": "YulAssignment",
															"src": "1705:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1734:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1734:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1716:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "1716:17:14"
																},
																"nativeSrc": "1716:24:14",
																"nodeType": "YulFunctionCall",
																"src": "1716:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1705:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "1705:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1650:96:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1677:5:14",
														"nodeType": "YulTypedName",
														"src": "1677:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1687:7:14",
														"nodeType": "YulTypedName",
														"src": "1687:7:14",
														"type": ""
													}
												],
												"src": "1650:96:14"
											},
											{
												"body": {
													"nativeSrc": "1795:79:14",
													"nodeType": "YulBlock",
													"src": "1795:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1852:16:14",
																"nodeType": "YulBlock",
																"src": "1852:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1861:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1861:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1864:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1864:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1854:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1854:6:14"
																			},
																			"nativeSrc": "1854:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1854:12:14"
																		},
																		"nativeSrc": "1854:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1854:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1818:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "1818:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1843:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "1843:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1825:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "1825:17:14"
																				},
																				"nativeSrc": "1825:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1825:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1815:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "1815:2:14"
																		},
																		"nativeSrc": "1815:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1815:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1808:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:14"
																},
																"nativeSrc": "1808:43:14",
																"nodeType": "YulFunctionCall",
																"src": "1808:43:14"
															},
															"nativeSrc": "1805:63:14",
															"nodeType": "YulIf",
															"src": "1805:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1752:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1788:5:14",
														"nodeType": "YulTypedName",
														"src": "1788:5:14",
														"type": ""
													}
												],
												"src": "1752:122:14"
											},
											{
												"body": {
													"nativeSrc": "1932:87:14",
													"nodeType": "YulBlock",
													"src": "1932:87:14",
													"statements": [
														{
															"nativeSrc": "1942:29:14",
															"nodeType": "YulAssignment",
															"src": "1942:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1964:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1964:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1951:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "1951:12:14"
																},
																"nativeSrc": "1951:20:14",
																"nodeType": "YulFunctionCall",
																"src": "1951:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1942:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1942:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2007:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2007:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1980:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "1980:26:14"
																},
																"nativeSrc": "1980:33:14",
																"nodeType": "YulFunctionCall",
																"src": "1980:33:14"
															},
															"nativeSrc": "1980:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "1980:33:14"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1880:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1910:6:14",
														"nodeType": "YulTypedName",
														"src": "1910:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1918:3:14",
														"nodeType": "YulTypedName",
														"src": "1918:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1926:5:14",
														"nodeType": "YulTypedName",
														"src": "1926:5:14",
														"type": ""
													}
												],
												"src": "1880:139:14"
											},
											{
												"body": {
													"nativeSrc": "2091:263:14",
													"nodeType": "YulBlock",
													"src": "2091:263:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2137:83:14",
																"nodeType": "YulBlock",
																"src": "2137:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2139:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "2139:77:14"
																			},
																			"nativeSrc": "2139:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2139:79:14"
																		},
																		"nativeSrc": "2139:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2139:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2112:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2112:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2121:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2121:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2108:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2108:3:14"
																		},
																		"nativeSrc": "2108:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2108:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2133:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2133:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2104:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2104:3:14"
																},
																"nativeSrc": "2104:32:14",
																"nodeType": "YulFunctionCall",
																"src": "2104:32:14"
															},
															"nativeSrc": "2101:119:14",
															"nodeType": "YulIf",
															"src": "2101:119:14"
														},
														{
															"nativeSrc": "2230:117:14",
															"nodeType": "YulBlock",
															"src": "2230:117:14",
															"statements": [
																{
																	"nativeSrc": "2245:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2245:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2259:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2259:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2249:6:14",
																			"nodeType": "YulTypedName",
																			"src": "2249:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2274:63:14",
																	"nodeType": "YulAssignment",
																	"src": "2274:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2309:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "2309:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2320:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "2320:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2305:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2305:3:14"
																				},
																				"nativeSrc": "2305:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2305:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2329:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2329:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2284:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "2284:20:14"
																		},
																		"nativeSrc": "2284:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2284:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2274:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "2274:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2025:329:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2061:9:14",
														"nodeType": "YulTypedName",
														"src": "2061:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2072:7:14",
														"nodeType": "YulTypedName",
														"src": "2072:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2084:6:14",
														"nodeType": "YulTypedName",
														"src": "2084:6:14",
														"type": ""
													}
												],
												"src": "2025:329:14"
											},
											{
												"body": {
													"nativeSrc": "2405:32:14",
													"nodeType": "YulBlock",
													"src": "2405:32:14",
													"statements": [
														{
															"nativeSrc": "2415:16:14",
															"nodeType": "YulAssignment",
															"src": "2415:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "2426:5:14",
																"nodeType": "YulIdentifier",
																"src": "2426:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2415:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "2415:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2360:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2387:5:14",
														"nodeType": "YulTypedName",
														"src": "2387:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2397:7:14",
														"nodeType": "YulTypedName",
														"src": "2397:7:14",
														"type": ""
													}
												],
												"src": "2360:77:14"
											},
											{
												"body": {
													"nativeSrc": "2508:53:14",
													"nodeType": "YulBlock",
													"src": "2508:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2525:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2525:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2548:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2548:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2530:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "2530:17:14"
																		},
																		"nativeSrc": "2530:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2530:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2518:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2518:6:14"
																},
																"nativeSrc": "2518:37:14",
																"nodeType": "YulFunctionCall",
																"src": "2518:37:14"
															},
															"nativeSrc": "2518:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "2518:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2443:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2496:5:14",
														"nodeType": "YulTypedName",
														"src": "2496:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2503:3:14",
														"nodeType": "YulTypedName",
														"src": "2503:3:14",
														"type": ""
													}
												],
												"src": "2443:118:14"
											},
											{
												"body": {
													"nativeSrc": "2665:124:14",
													"nodeType": "YulBlock",
													"src": "2665:124:14",
													"statements": [
														{
															"nativeSrc": "2675:26:14",
															"nodeType": "YulAssignment",
															"src": "2675:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2687:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2687:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2698:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2698:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2683:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2683:3:14"
																},
																"nativeSrc": "2683:18:14",
																"nodeType": "YulFunctionCall",
																"src": "2683:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2675:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "2675:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2755:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2755:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2768:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2768:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2779:1:14",
																				"nodeType": "YulLiteral",
																				"src": "2779:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2764:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2764:3:14"
																		},
																		"nativeSrc": "2764:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2764:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2711:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "2711:43:14"
																},
																"nativeSrc": "2711:71:14",
																"nodeType": "YulFunctionCall",
																"src": "2711:71:14"
															},
															"nativeSrc": "2711:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "2711:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2567:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2637:9:14",
														"nodeType": "YulTypedName",
														"src": "2637:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2649:6:14",
														"nodeType": "YulTypedName",
														"src": "2649:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2660:4:14",
														"nodeType": "YulTypedName",
														"src": "2660:4:14",
														"type": ""
													}
												],
												"src": "2567:222:14"
											},
											{
												"body": {
													"nativeSrc": "2840:32:14",
													"nodeType": "YulBlock",
													"src": "2840:32:14",
													"statements": [
														{
															"nativeSrc": "2850:16:14",
															"nodeType": "YulAssignment",
															"src": "2850:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "2861:5:14",
																"nodeType": "YulIdentifier",
																"src": "2861:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2850:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "2850:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "2795:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2822:5:14",
														"nodeType": "YulTypedName",
														"src": "2822:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2832:7:14",
														"nodeType": "YulTypedName",
														"src": "2832:7:14",
														"type": ""
													}
												],
												"src": "2795:77:14"
											},
											{
												"body": {
													"nativeSrc": "2921:79:14",
													"nodeType": "YulBlock",
													"src": "2921:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2978:16:14",
																"nodeType": "YulBlock",
																"src": "2978:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2987:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2987:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2990:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2990:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2980:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2980:6:14"
																			},
																			"nativeSrc": "2980:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2980:12:14"
																		},
																		"nativeSrc": "2980:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2980:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2944:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2944:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2969:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "2969:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "2951:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "2951:17:14"
																				},
																				"nativeSrc": "2951:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2951:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2941:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "2941:2:14"
																		},
																		"nativeSrc": "2941:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2941:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2934:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2934:6:14"
																},
																"nativeSrc": "2934:43:14",
																"nodeType": "YulFunctionCall",
																"src": "2934:43:14"
															},
															"nativeSrc": "2931:63:14",
															"nodeType": "YulIf",
															"src": "2931:63:14"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "2878:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2914:5:14",
														"nodeType": "YulTypedName",
														"src": "2914:5:14",
														"type": ""
													}
												],
												"src": "2878:122:14"
											},
											{
												"body": {
													"nativeSrc": "3058:87:14",
													"nodeType": "YulBlock",
													"src": "3058:87:14",
													"statements": [
														{
															"nativeSrc": "3068:29:14",
															"nodeType": "YulAssignment",
															"src": "3068:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3090:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3090:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3077:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "3077:12:14"
																},
																"nativeSrc": "3077:20:14",
																"nodeType": "YulFunctionCall",
																"src": "3077:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3068:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "3068:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3133:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "3133:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "3106:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "3106:26:14"
																},
																"nativeSrc": "3106:33:14",
																"nodeType": "YulFunctionCall",
																"src": "3106:33:14"
															},
															"nativeSrc": "3106:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "3106:33:14"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "3006:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3036:6:14",
														"nodeType": "YulTypedName",
														"src": "3036:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3044:3:14",
														"nodeType": "YulTypedName",
														"src": "3044:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3052:5:14",
														"nodeType": "YulTypedName",
														"src": "3052:5:14",
														"type": ""
													}
												],
												"src": "3006:139:14"
											},
											{
												"body": {
													"nativeSrc": "3217:263:14",
													"nodeType": "YulBlock",
													"src": "3217:263:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3263:83:14",
																"nodeType": "YulBlock",
																"src": "3263:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3265:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "3265:77:14"
																			},
																			"nativeSrc": "3265:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3265:79:14"
																		},
																		"nativeSrc": "3265:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3265:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3238:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3238:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3247:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3247:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3234:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3234:3:14"
																		},
																		"nativeSrc": "3234:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3234:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3259:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3259:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3230:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3230:3:14"
																},
																"nativeSrc": "3230:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3230:32:14"
															},
															"nativeSrc": "3227:119:14",
															"nodeType": "YulIf",
															"src": "3227:119:14"
														},
														{
															"nativeSrc": "3356:117:14",
															"nodeType": "YulBlock",
															"src": "3356:117:14",
															"statements": [
																{
																	"nativeSrc": "3371:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3371:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3385:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3385:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3375:6:14",
																			"nodeType": "YulTypedName",
																			"src": "3375:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3400:63:14",
																	"nodeType": "YulAssignment",
																	"src": "3400:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3435:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "3435:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3446:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "3446:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3431:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3431:3:14"
																				},
																				"nativeSrc": "3431:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3431:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3455:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3455:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "3410:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "3410:20:14"
																		},
																		"nativeSrc": "3410:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3410:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3400:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "3400:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "3151:329:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:14",
														"nodeType": "YulTypedName",
														"src": "3187:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3198:7:14",
														"nodeType": "YulTypedName",
														"src": "3198:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3210:6:14",
														"nodeType": "YulTypedName",
														"src": "3210:6:14",
														"type": ""
													}
												],
												"src": "3151:329:14"
											},
											{
												"body": {
													"nativeSrc": "3551:53:14",
													"nodeType": "YulBlock",
													"src": "3551:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3568:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "3568:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3591:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3591:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "3573:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "3573:17:14"
																		},
																		"nativeSrc": "3573:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3573:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3561:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3561:6:14"
																},
																"nativeSrc": "3561:37:14",
																"nodeType": "YulFunctionCall",
																"src": "3561:37:14"
															},
															"nativeSrc": "3561:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "3561:37:14"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "3486:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3539:5:14",
														"nodeType": "YulTypedName",
														"src": "3539:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3546:3:14",
														"nodeType": "YulTypedName",
														"src": "3546:3:14",
														"type": ""
													}
												],
												"src": "3486:118:14"
											},
											{
												"body": {
													"nativeSrc": "3708:124:14",
													"nodeType": "YulBlock",
													"src": "3708:124:14",
													"statements": [
														{
															"nativeSrc": "3718:26:14",
															"nodeType": "YulAssignment",
															"src": "3718:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3730:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3730:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3741:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3741:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3726:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3726:3:14"
																},
																"nativeSrc": "3726:18:14",
																"nodeType": "YulFunctionCall",
																"src": "3726:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3718:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "3718:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3798:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3798:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3811:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3811:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3822:1:14",
																				"nodeType": "YulLiteral",
																				"src": "3822:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3807:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3807:3:14"
																		},
																		"nativeSrc": "3807:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3807:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "3754:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "3754:43:14"
																},
																"nativeSrc": "3754:71:14",
																"nodeType": "YulFunctionCall",
																"src": "3754:71:14"
															},
															"nativeSrc": "3754:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "3754:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "3610:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3680:9:14",
														"nodeType": "YulTypedName",
														"src": "3680:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3692:6:14",
														"nodeType": "YulTypedName",
														"src": "3692:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3703:4:14",
														"nodeType": "YulTypedName",
														"src": "3703:4:14",
														"type": ""
													}
												],
												"src": "3610:222:14"
											},
											{
												"body": {
													"nativeSrc": "3870:28:14",
													"nodeType": "YulBlock",
													"src": "3870:28:14",
													"statements": [
														{
															"nativeSrc": "3880:12:14",
															"nodeType": "YulAssignment",
															"src": "3880:12:14",
															"value": {
																"name": "value",
																"nativeSrc": "3887:5:14",
																"nodeType": "YulIdentifier",
																"src": "3887:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3880:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3880:3:14"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3838:60:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3856:5:14",
														"nodeType": "YulTypedName",
														"src": "3856:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3866:3:14",
														"nodeType": "YulTypedName",
														"src": "3866:3:14",
														"type": ""
													}
												],
												"src": "3838:60:14"
											},
											{
												"body": {
													"nativeSrc": "3964:82:14",
													"nodeType": "YulBlock",
													"src": "3964:82:14",
													"statements": [
														{
															"nativeSrc": "3974:66:14",
															"nodeType": "YulAssignment",
															"src": "3974:66:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4032:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "4032:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "4014:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "4014:17:14"
																				},
																				"nativeSrc": "4014:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4014:24:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4005:8:14",
																			"nodeType": "YulIdentifier",
																			"src": "4005:8:14"
																		},
																		"nativeSrc": "4005:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4005:34:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3987:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "3987:17:14"
																},
																"nativeSrc": "3987:53:14",
																"nodeType": "YulFunctionCall",
																"src": "3987:53:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3974:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "3974:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "3904:142:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3944:5:14",
														"nodeType": "YulTypedName",
														"src": "3944:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3954:9:14",
														"nodeType": "YulTypedName",
														"src": "3954:9:14",
														"type": ""
													}
												],
												"src": "3904:142:14"
											},
											{
												"body": {
													"nativeSrc": "4112:66:14",
													"nodeType": "YulBlock",
													"src": "4112:66:14",
													"statements": [
														{
															"nativeSrc": "4122:50:14",
															"nodeType": "YulAssignment",
															"src": "4122:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4166:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "4166:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "4135:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "4135:30:14"
																},
																"nativeSrc": "4135:37:14",
																"nodeType": "YulFunctionCall",
																"src": "4135:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4122:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "4122:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "4052:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4092:5:14",
														"nodeType": "YulTypedName",
														"src": "4092:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4102:9:14",
														"nodeType": "YulTypedName",
														"src": "4102:9:14",
														"type": ""
													}
												],
												"src": "4052:126:14"
											},
											{
												"body": {
													"nativeSrc": "4272:66:14",
													"nodeType": "YulBlock",
													"src": "4272:66:14",
													"statements": [
														{
															"nativeSrc": "4282:50:14",
															"nodeType": "YulAssignment",
															"src": "4282:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4326:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "4326:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "4295:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "4295:30:14"
																},
																"nativeSrc": "4295:37:14",
																"nodeType": "YulFunctionCall",
																"src": "4295:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4282:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "4282:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_AggregatorV3Interface_$45_to_t_address",
												"nativeSrc": "4184:154:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4252:5:14",
														"nodeType": "YulTypedName",
														"src": "4252:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4262:9:14",
														"nodeType": "YulTypedName",
														"src": "4262:9:14",
														"type": ""
													}
												],
												"src": "4184:154:14"
											},
											{
												"body": {
													"nativeSrc": "4437:94:14",
													"nodeType": "YulBlock",
													"src": "4437:94:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4454:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "4454:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4518:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "4518:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_AggregatorV3Interface_$45_to_t_address",
																			"nativeSrc": "4459:58:14",
																			"nodeType": "YulIdentifier",
																			"src": "4459:58:14"
																		},
																		"nativeSrc": "4459:65:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4459:65:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4447:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4447:6:14"
																},
																"nativeSrc": "4447:78:14",
																"nodeType": "YulFunctionCall",
																"src": "4447:78:14"
															},
															"nativeSrc": "4447:78:14",
															"nodeType": "YulExpressionStatement",
															"src": "4447:78:14"
														}
													]
												},
												"name": "abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack",
												"nativeSrc": "4344:187:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4425:5:14",
														"nodeType": "YulTypedName",
														"src": "4425:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4432:3:14",
														"nodeType": "YulTypedName",
														"src": "4432:3:14",
														"type": ""
													}
												],
												"src": "4344:187:14"
											},
											{
												"body": {
													"nativeSrc": "4663:152:14",
													"nodeType": "YulBlock",
													"src": "4663:152:14",
													"statements": [
														{
															"nativeSrc": "4673:26:14",
															"nodeType": "YulAssignment",
															"src": "4673:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4685:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4685:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4696:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4696:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4681:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4681:3:14"
																},
																"nativeSrc": "4681:18:14",
																"nodeType": "YulFunctionCall",
																"src": "4681:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4673:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "4673:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4781:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4781:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4794:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4794:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4805:1:14",
																				"nodeType": "YulLiteral",
																				"src": "4805:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4790:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4790:3:14"
																		},
																		"nativeSrc": "4790:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4790:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack",
																	"nativeSrc": "4709:71:14",
																	"nodeType": "YulIdentifier",
																	"src": "4709:71:14"
																},
																"nativeSrc": "4709:99:14",
																"nodeType": "YulFunctionCall",
																"src": "4709:99:14"
															},
															"nativeSrc": "4709:99:14",
															"nodeType": "YulExpressionStatement",
															"src": "4709:99:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed",
												"nativeSrc": "4537:278:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4635:9:14",
														"nodeType": "YulTypedName",
														"src": "4635:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4647:6:14",
														"nodeType": "YulTypedName",
														"src": "4647:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4658:4:14",
														"nodeType": "YulTypedName",
														"src": "4658:4:14",
														"type": ""
													}
												],
												"src": "4537:278:14"
											},
											{
												"body": {
													"nativeSrc": "4904:391:14",
													"nodeType": "YulBlock",
													"src": "4904:391:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "4950:83:14",
																"nodeType": "YulBlock",
																"src": "4950:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4952:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "4952:77:14"
																			},
																			"nativeSrc": "4952:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4952:79:14"
																		},
																		"nativeSrc": "4952:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4952:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4925:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4925:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4934:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4934:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4921:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4921:3:14"
																		},
																		"nativeSrc": "4921:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4921:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4946:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4946:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4917:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4917:3:14"
																},
																"nativeSrc": "4917:32:14",
																"nodeType": "YulFunctionCall",
																"src": "4917:32:14"
															},
															"nativeSrc": "4914:119:14",
															"nodeType": "YulIf",
															"src": "4914:119:14"
														},
														{
															"nativeSrc": "5043:117:14",
															"nodeType": "YulBlock",
															"src": "5043:117:14",
															"statements": [
																{
																	"nativeSrc": "5058:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5058:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5072:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5072:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5062:6:14",
																			"nodeType": "YulTypedName",
																			"src": "5062:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5087:63:14",
																	"nodeType": "YulAssignment",
																	"src": "5087:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5122:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "5122:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5133:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "5133:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5118:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5118:3:14"
																				},
																				"nativeSrc": "5118:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5118:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5142:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5142:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "5097:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "5097:20:14"
																		},
																		"nativeSrc": "5097:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5097:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5087:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "5087:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5170:118:14",
															"nodeType": "YulBlock",
															"src": "5170:118:14",
															"statements": [
																{
																	"nativeSrc": "5185:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5185:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5199:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5199:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5189:6:14",
																			"nodeType": "YulTypedName",
																			"src": "5189:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5215:63:14",
																	"nodeType": "YulAssignment",
																	"src": "5215:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5250:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "5250:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5261:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "5261:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5246:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5246:3:14"
																				},
																				"nativeSrc": "5246:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5246:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5270:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5270:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5225:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "5225:20:14"
																		},
																		"nativeSrc": "5225:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5225:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5215:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "5215:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "4821:474:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4866:9:14",
														"nodeType": "YulTypedName",
														"src": "4866:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4877:7:14",
														"nodeType": "YulTypedName",
														"src": "4877:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4889:6:14",
														"nodeType": "YulTypedName",
														"src": "4889:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4897:6:14",
														"nodeType": "YulTypedName",
														"src": "4897:6:14",
														"type": ""
													}
												],
												"src": "4821:474:14"
											},
											{
												"body": {
													"nativeSrc": "5344:79:14",
													"nodeType": "YulBlock",
													"src": "5344:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "5401:16:14",
																"nodeType": "YulBlock",
																"src": "5401:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5410:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5410:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5413:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5413:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5403:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5403:6:14"
																			},
																			"nativeSrc": "5403:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5403:12:14"
																		},
																		"nativeSrc": "5403:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5403:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5367:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5367:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5392:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "5392:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5374:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "5374:17:14"
																				},
																				"nativeSrc": "5374:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5374:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5364:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "5364:2:14"
																		},
																		"nativeSrc": "5364:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5364:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5357:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5357:6:14"
																},
																"nativeSrc": "5357:43:14",
																"nodeType": "YulFunctionCall",
																"src": "5357:43:14"
															},
															"nativeSrc": "5354:63:14",
															"nodeType": "YulIf",
															"src": "5354:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "5301:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5337:5:14",
														"nodeType": "YulTypedName",
														"src": "5337:5:14",
														"type": ""
													}
												],
												"src": "5301:122:14"
											},
											{
												"body": {
													"nativeSrc": "5481:87:14",
													"nodeType": "YulBlock",
													"src": "5481:87:14",
													"statements": [
														{
															"nativeSrc": "5491:29:14",
															"nodeType": "YulAssignment",
															"src": "5491:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5513:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5513:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5500:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "5500:12:14"
																},
																"nativeSrc": "5500:20:14",
																"nodeType": "YulFunctionCall",
																"src": "5500:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5491:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "5491:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5556:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5556:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "5529:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "5529:26:14"
																},
																"nativeSrc": "5529:33:14",
																"nodeType": "YulFunctionCall",
																"src": "5529:33:14"
															},
															"nativeSrc": "5529:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "5529:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "5429:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5459:6:14",
														"nodeType": "YulTypedName",
														"src": "5459:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5467:3:14",
														"nodeType": "YulTypedName",
														"src": "5467:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5475:5:14",
														"nodeType": "YulTypedName",
														"src": "5475:5:14",
														"type": ""
													}
												],
												"src": "5429:139:14"
											},
											{
												"body": {
													"nativeSrc": "5657:391:14",
													"nodeType": "YulBlock",
													"src": "5657:391:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "5703:83:14",
																"nodeType": "YulBlock",
																"src": "5703:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5705:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "5705:77:14"
																			},
																			"nativeSrc": "5705:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5705:79:14"
																		},
																		"nativeSrc": "5705:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5705:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5678:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5678:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5687:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5687:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5674:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5674:3:14"
																		},
																		"nativeSrc": "5674:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5674:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5699:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5699:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5670:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5670:3:14"
																},
																"nativeSrc": "5670:32:14",
																"nodeType": "YulFunctionCall",
																"src": "5670:32:14"
															},
															"nativeSrc": "5667:119:14",
															"nodeType": "YulIf",
															"src": "5667:119:14"
														},
														{
															"nativeSrc": "5796:117:14",
															"nodeType": "YulBlock",
															"src": "5796:117:14",
															"statements": [
																{
																	"nativeSrc": "5811:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5811:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5825:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5825:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5815:6:14",
																			"nodeType": "YulTypedName",
																			"src": "5815:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5840:63:14",
																	"nodeType": "YulAssignment",
																	"src": "5840:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5875:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "5875:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5886:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "5886:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5871:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5871:3:14"
																				},
																				"nativeSrc": "5871:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5871:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5895:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5895:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5850:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "5850:20:14"
																		},
																		"nativeSrc": "5850:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5850:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5840:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "5840:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5923:118:14",
															"nodeType": "YulBlock",
															"src": "5923:118:14",
															"statements": [
																{
																	"nativeSrc": "5938:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5938:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5952:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5952:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5942:6:14",
																			"nodeType": "YulTypedName",
																			"src": "5942:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5968:63:14",
																	"nodeType": "YulAssignment",
																	"src": "5968:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6003:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "6003:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6014:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "6014:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5999:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5999:3:14"
																				},
																				"nativeSrc": "5999:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5999:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6023:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "6023:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5978:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "5978:20:14"
																		},
																		"nativeSrc": "5978:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5978:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5968:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "5968:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "5574:474:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5619:9:14",
														"nodeType": "YulTypedName",
														"src": "5619:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5630:7:14",
														"nodeType": "YulTypedName",
														"src": "5630:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5642:6:14",
														"nodeType": "YulTypedName",
														"src": "5642:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5650:6:14",
														"nodeType": "YulTypedName",
														"src": "5650:6:14",
														"type": ""
													}
												],
												"src": "5574:474:14"
											},
											{
												"body": {
													"nativeSrc": "6137:391:14",
													"nodeType": "YulBlock",
													"src": "6137:391:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "6183:83:14",
																"nodeType": "YulBlock",
																"src": "6183:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6185:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "6185:77:14"
																			},
																			"nativeSrc": "6185:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6185:79:14"
																		},
																		"nativeSrc": "6185:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6185:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6158:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "6158:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6167:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6167:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6154:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6154:3:14"
																		},
																		"nativeSrc": "6154:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6154:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6179:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6179:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6150:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6150:3:14"
																},
																"nativeSrc": "6150:32:14",
																"nodeType": "YulFunctionCall",
																"src": "6150:32:14"
															},
															"nativeSrc": "6147:119:14",
															"nodeType": "YulIf",
															"src": "6147:119:14"
														},
														{
															"nativeSrc": "6276:117:14",
															"nodeType": "YulBlock",
															"src": "6276:117:14",
															"statements": [
																{
																	"nativeSrc": "6291:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6291:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6305:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6305:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6295:6:14",
																			"nodeType": "YulTypedName",
																			"src": "6295:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6320:63:14",
																	"nodeType": "YulAssignment",
																	"src": "6320:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6355:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "6355:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6366:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "6366:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6351:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "6351:3:14"
																				},
																				"nativeSrc": "6351:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6351:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6375:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "6375:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6330:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "6330:20:14"
																		},
																		"nativeSrc": "6330:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6330:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6320:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "6320:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6403:118:14",
															"nodeType": "YulBlock",
															"src": "6403:118:14",
															"statements": [
																{
																	"nativeSrc": "6418:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6418:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6432:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6432:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6422:6:14",
																			"nodeType": "YulTypedName",
																			"src": "6422:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6448:63:14",
																	"nodeType": "YulAssignment",
																	"src": "6448:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6483:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "6483:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6494:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "6494:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6479:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "6479:3:14"
																				},
																				"nativeSrc": "6479:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6479:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6503:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "6503:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6458:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "6458:20:14"
																		},
																		"nativeSrc": "6458:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6458:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6448:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "6448:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6054:474:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6099:9:14",
														"nodeType": "YulTypedName",
														"src": "6099:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6110:7:14",
														"nodeType": "YulTypedName",
														"src": "6110:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6122:6:14",
														"nodeType": "YulTypedName",
														"src": "6122:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6130:6:14",
														"nodeType": "YulTypedName",
														"src": "6130:6:14",
														"type": ""
													}
												],
												"src": "6054:474:14"
											},
											{
												"body": {
													"nativeSrc": "6608:40:14",
													"nodeType": "YulBlock",
													"src": "6608:40:14",
													"statements": [
														{
															"nativeSrc": "6619:22:14",
															"nodeType": "YulAssignment",
															"src": "6619:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6635:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "6635:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6629:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "6629:5:14"
																},
																"nativeSrc": "6629:12:14",
																"nodeType": "YulFunctionCall",
																"src": "6629:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6619:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6619:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "6534:114:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6591:5:14",
														"nodeType": "YulTypedName",
														"src": "6591:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6601:6:14",
														"nodeType": "YulTypedName",
														"src": "6601:6:14",
														"type": ""
													}
												],
												"src": "6534:114:14"
											},
											{
												"body": {
													"nativeSrc": "6765:73:14",
													"nodeType": "YulBlock",
													"src": "6765:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6782:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6782:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6787:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6787:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6775:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6775:6:14"
																},
																"nativeSrc": "6775:19:14",
																"nodeType": "YulFunctionCall",
																"src": "6775:19:14"
															},
															"nativeSrc": "6775:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "6775:19:14"
														},
														{
															"nativeSrc": "6803:29:14",
															"nodeType": "YulAssignment",
															"src": "6803:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6822:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6822:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6827:4:14",
																		"nodeType": "YulLiteral",
																		"src": "6827:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6818:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6818:3:14"
																},
																"nativeSrc": "6818:14:14",
																"nodeType": "YulFunctionCall",
																"src": "6818:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6803:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "6803:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nativeSrc": "6654:184:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6737:3:14",
														"nodeType": "YulTypedName",
														"src": "6737:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6742:6:14",
														"nodeType": "YulTypedName",
														"src": "6742:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6753:11:14",
														"nodeType": "YulTypedName",
														"src": "6753:11:14",
														"type": ""
													}
												],
												"src": "6654:184:14"
											},
											{
												"body": {
													"nativeSrc": "6916:60:14",
													"nodeType": "YulBlock",
													"src": "6916:60:14",
													"statements": [
														{
															"nativeSrc": "6926:11:14",
															"nodeType": "YulAssignment",
															"src": "6926:11:14",
															"value": {
																"name": "ptr",
																"nativeSrc": "6934:3:14",
																"nodeType": "YulIdentifier",
																"src": "6934:3:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6926:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6926:4:14"
																}
															]
														},
														{
															"nativeSrc": "6947:22:14",
															"nodeType": "YulAssignment",
															"src": "6947:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6959:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6959:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6964:4:14",
																		"nodeType": "YulLiteral",
																		"src": "6964:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6955:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6955:3:14"
																},
																"nativeSrc": "6955:14:14",
																"nodeType": "YulFunctionCall",
																"src": "6955:14:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6947:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6947:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "6844:132:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6903:3:14",
														"nodeType": "YulTypedName",
														"src": "6903:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "6911:4:14",
														"nodeType": "YulTypedName",
														"src": "6911:4:14",
														"type": ""
													}
												],
												"src": "6844:132:14"
											},
											{
												"body": {
													"nativeSrc": "7037:53:14",
													"nodeType": "YulBlock",
													"src": "7037:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7054:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7054:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7077:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "7077:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7059:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "7059:17:14"
																		},
																		"nativeSrc": "7059:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7059:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7047:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7047:6:14"
																},
																"nativeSrc": "7047:37:14",
																"nodeType": "YulFunctionCall",
																"src": "7047:37:14"
															},
															"nativeSrc": "7047:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "7047:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "6982:108:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7025:5:14",
														"nodeType": "YulTypedName",
														"src": "7025:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7032:3:14",
														"nodeType": "YulTypedName",
														"src": "7032:3:14",
														"type": ""
													}
												],
												"src": "6982:108:14"
											},
											{
												"body": {
													"nativeSrc": "7176:99:14",
													"nodeType": "YulBlock",
													"src": "7176:99:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7220:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7220:6:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7228:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7228:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nativeSrc": "7186:33:14",
																	"nodeType": "YulIdentifier",
																	"src": "7186:33:14"
																},
																"nativeSrc": "7186:46:14",
																"nodeType": "YulFunctionCall",
																"src": "7186:46:14"
															},
															"nativeSrc": "7186:46:14",
															"nodeType": "YulExpressionStatement",
															"src": "7186:46:14"
														},
														{
															"nativeSrc": "7241:28:14",
															"nodeType": "YulAssignment",
															"src": "7241:28:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7259:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7259:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7264:4:14",
																		"nodeType": "YulLiteral",
																		"src": "7264:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7255:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7255:3:14"
																},
																"nativeSrc": "7255:14:14",
																"nodeType": "YulFunctionCall",
																"src": "7255:14:14"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "7241:10:14",
																	"nodeType": "YulIdentifier",
																	"src": "7241:10:14"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nativeSrc": "7096:179:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "7149:6:14",
														"nodeType": "YulTypedName",
														"src": "7149:6:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7157:3:14",
														"nodeType": "YulTypedName",
														"src": "7157:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "7165:10:14",
														"nodeType": "YulTypedName",
														"src": "7165:10:14",
														"type": ""
													}
												],
												"src": "7096:179:14"
											},
											{
												"body": {
													"nativeSrc": "7356:38:14",
													"nodeType": "YulBlock",
													"src": "7356:38:14",
													"statements": [
														{
															"nativeSrc": "7366:22:14",
															"nodeType": "YulAssignment",
															"src": "7366:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "7378:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7378:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7383:4:14",
																		"nodeType": "YulLiteral",
																		"src": "7383:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7374:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7374:3:14"
																},
																"nativeSrc": "7374:14:14",
																"nodeType": "YulFunctionCall",
																"src": "7374:14:14"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "7366:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "7366:4:14"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "7281:113:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "7343:3:14",
														"nodeType": "YulTypedName",
														"src": "7343:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "7351:4:14",
														"nodeType": "YulTypedName",
														"src": "7351:4:14",
														"type": ""
													}
												],
												"src": "7281:113:14"
											},
											{
												"body": {
													"nativeSrc": "7554:608:14",
													"nodeType": "YulBlock",
													"src": "7554:608:14",
													"statements": [
														{
															"nativeSrc": "7564:68:14",
															"nodeType": "YulVariableDeclaration",
															"src": "7564:68:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7626:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "7626:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "7578:47:14",
																	"nodeType": "YulIdentifier",
																	"src": "7578:47:14"
																},
																"nativeSrc": "7578:54:14",
																"nodeType": "YulFunctionCall",
																"src": "7578:54:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7568:6:14",
																	"nodeType": "YulTypedName",
																	"src": "7568:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7641:93:14",
															"nodeType": "YulAssignment",
															"src": "7641:93:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7722:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7722:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7727:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7727:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "7648:73:14",
																	"nodeType": "YulIdentifier",
																	"src": "7648:73:14"
																},
																"nativeSrc": "7648:86:14",
																"nodeType": "YulFunctionCall",
																"src": "7648:86:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7641:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7641:3:14"
																}
															]
														},
														{
															"nativeSrc": "7743:71:14",
															"nodeType": "YulVariableDeclaration",
															"src": "7743:71:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7808:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "7808:5:14"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "7758:49:14",
																	"nodeType": "YulIdentifier",
																	"src": "7758:49:14"
																},
																"nativeSrc": "7758:56:14",
																"nodeType": "YulFunctionCall",
																"src": "7758:56:14"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "7747:7:14",
																	"nodeType": "YulTypedName",
																	"src": "7747:7:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7823:21:14",
															"nodeType": "YulVariableDeclaration",
															"src": "7823:21:14",
															"value": {
																"name": "baseRef",
																"nativeSrc": "7837:7:14",
																"nodeType": "YulIdentifier",
																"src": "7837:7:14"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "7827:6:14",
																	"nodeType": "YulTypedName",
																	"src": "7827:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7913:224:14",
																"nodeType": "YulBlock",
																"src": "7913:224:14",
																"statements": [
																	{
																		"nativeSrc": "7927:34:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7927:34:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7954:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "7954:6:14"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "7948:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "7948:5:14"
																			},
																			"nativeSrc": "7948:13:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7948:13:14"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "7931:13:14",
																				"nodeType": "YulTypedName",
																				"src": "7931:13:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7974:70:14",
																		"nodeType": "YulAssignment",
																		"src": "7974:70:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "8025:13:14",
																					"nodeType": "YulIdentifier",
																					"src": "8025:13:14"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "8040:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "8040:3:14"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nativeSrc": "7981:43:14",
																				"nodeType": "YulIdentifier",
																				"src": "7981:43:14"
																			},
																			"nativeSrc": "7981:63:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7981:63:14"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "7974:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "7974:3:14"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8057:70:14",
																		"nodeType": "YulAssignment",
																		"src": "8057:70:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "8120:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "8120:6:14"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nativeSrc": "8067:52:14",
																				"nodeType": "YulIdentifier",
																				"src": "8067:52:14"
																			},
																			"nativeSrc": "8067:60:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8067:60:14"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "8057:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8057:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "7875:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "7875:1:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7878:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7878:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7872:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "7872:2:14"
																},
																"nativeSrc": "7872:13:14",
																"nodeType": "YulFunctionCall",
																"src": "7872:13:14"
															},
															"nativeSrc": "7853:284:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7886:18:14",
																"nodeType": "YulBlock",
																"src": "7886:18:14",
																"statements": [
																	{
																		"nativeSrc": "7888:14:14",
																		"nodeType": "YulAssignment",
																		"src": "7888:14:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "7897:1:14",
																					"nodeType": "YulIdentifier",
																					"src": "7897:1:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7900:1:14",
																					"nodeType": "YulLiteral",
																					"src": "7900:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7893:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "7893:3:14"
																			},
																			"nativeSrc": "7893:9:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7893:9:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "7888:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "7888:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7857:14:14",
																"nodeType": "YulBlock",
																"src": "7857:14:14",
																"statements": [
																	{
																		"nativeSrc": "7859:10:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7859:10:14",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7868:1:14",
																			"nodeType": "YulLiteral",
																			"src": "7868:1:14",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "7863:1:14",
																				"nodeType": "YulTypedName",
																				"src": "7863:1:14",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7853:284:14"
														},
														{
															"nativeSrc": "8146:10:14",
															"nodeType": "YulAssignment",
															"src": "8146:10:14",
															"value": {
																"name": "pos",
																"nativeSrc": "8153:3:14",
																"nodeType": "YulIdentifier",
																"src": "8153:3:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8146:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8146:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nativeSrc": "7430:732:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7533:5:14",
														"nodeType": "YulTypedName",
														"src": "7533:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7540:3:14",
														"nodeType": "YulTypedName",
														"src": "7540:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7549:3:14",
														"nodeType": "YulTypedName",
														"src": "7549:3:14",
														"type": ""
													}
												],
												"src": "7430:732:14"
											},
											{
												"body": {
													"nativeSrc": "8316:225:14",
													"nodeType": "YulBlock",
													"src": "8316:225:14",
													"statements": [
														{
															"nativeSrc": "8326:26:14",
															"nodeType": "YulAssignment",
															"src": "8326:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8338:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8338:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8349:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8349:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8334:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8334:3:14"
																},
																"nativeSrc": "8334:18:14",
																"nodeType": "YulFunctionCall",
																"src": "8334:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8326:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8326:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8373:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8373:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8384:1:14",
																				"nodeType": "YulLiteral",
																				"src": "8384:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8369:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8369:3:14"
																		},
																		"nativeSrc": "8369:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8369:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8392:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "8392:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8398:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8398:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8388:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8388:3:14"
																		},
																		"nativeSrc": "8388:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8388:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8362:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8362:6:14"
																},
																"nativeSrc": "8362:47:14",
																"nodeType": "YulFunctionCall",
																"src": "8362:47:14"
															},
															"nativeSrc": "8362:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "8362:47:14"
														},
														{
															"nativeSrc": "8418:116:14",
															"nodeType": "YulAssignment",
															"src": "8418:116:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8520:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8520:6:14"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8529:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "8529:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "8426:93:14",
																	"nodeType": "YulIdentifier",
																	"src": "8426:93:14"
																},
																"nativeSrc": "8426:108:14",
																"nodeType": "YulFunctionCall",
																"src": "8426:108:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8418:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8418:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "8168:373:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8288:9:14",
														"nodeType": "YulTypedName",
														"src": "8288:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8300:6:14",
														"nodeType": "YulTypedName",
														"src": "8300:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8311:4:14",
														"nodeType": "YulTypedName",
														"src": "8311:4:14",
														"type": ""
													}
												],
												"src": "8168:373:14"
											},
											{
												"body": {
													"nativeSrc": "8575:152:14",
													"nodeType": "YulBlock",
													"src": "8575:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8592:1:14",
																		"nodeType": "YulLiteral",
																		"src": "8592:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8595:77:14",
																		"nodeType": "YulLiteral",
																		"src": "8595:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8585:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8585:6:14"
																},
																"nativeSrc": "8585:88:14",
																"nodeType": "YulFunctionCall",
																"src": "8585:88:14"
															},
															"nativeSrc": "8585:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "8585:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8689:1:14",
																		"nodeType": "YulLiteral",
																		"src": "8689:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8692:4:14",
																		"nodeType": "YulLiteral",
																		"src": "8692:4:14",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8682:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8682:6:14"
																},
																"nativeSrc": "8682:15:14",
																"nodeType": "YulFunctionCall",
																"src": "8682:15:14"
															},
															"nativeSrc": "8682:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "8682:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8713:1:14",
																		"nodeType": "YulLiteral",
																		"src": "8713:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8716:4:14",
																		"nodeType": "YulLiteral",
																		"src": "8716:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8706:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8706:6:14"
																},
																"nativeSrc": "8706:15:14",
																"nodeType": "YulFunctionCall",
																"src": "8706:15:14"
															},
															"nativeSrc": "8706:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "8706:15:14"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "8547:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "8547:180:14"
											},
											{
												"body": {
													"nativeSrc": "8761:152:14",
													"nodeType": "YulBlock",
													"src": "8761:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8778:1:14",
																		"nodeType": "YulLiteral",
																		"src": "8778:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8781:77:14",
																		"nodeType": "YulLiteral",
																		"src": "8781:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8771:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8771:6:14"
																},
																"nativeSrc": "8771:88:14",
																"nodeType": "YulFunctionCall",
																"src": "8771:88:14"
															},
															"nativeSrc": "8771:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "8771:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8875:1:14",
																		"nodeType": "YulLiteral",
																		"src": "8875:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8878:4:14",
																		"nodeType": "YulLiteral",
																		"src": "8878:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8868:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8868:6:14"
																},
																"nativeSrc": "8868:15:14",
																"nodeType": "YulFunctionCall",
																"src": "8868:15:14"
															},
															"nativeSrc": "8868:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "8868:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8899:1:14",
																		"nodeType": "YulLiteral",
																		"src": "8899:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8902:4:14",
																		"nodeType": "YulLiteral",
																		"src": "8902:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8892:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8892:6:14"
																},
																"nativeSrc": "8892:15:14",
																"nodeType": "YulFunctionCall",
																"src": "8892:15:14"
															},
															"nativeSrc": "8892:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "8892:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8733:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "8733:180:14"
											},
											{
												"body": {
													"nativeSrc": "8963:147:14",
													"nodeType": "YulBlock",
													"src": "8963:147:14",
													"statements": [
														{
															"nativeSrc": "8973:25:14",
															"nodeType": "YulAssignment",
															"src": "8973:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8996:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "8996:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8978:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "8978:17:14"
																},
																"nativeSrc": "8978:20:14",
																"nodeType": "YulFunctionCall",
																"src": "8978:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8973:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "8973:1:14"
																}
															]
														},
														{
															"nativeSrc": "9007:25:14",
															"nodeType": "YulAssignment",
															"src": "9007:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9030:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "9030:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9012:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "9012:17:14"
																},
																"nativeSrc": "9012:20:14",
																"nodeType": "YulFunctionCall",
																"src": "9012:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9007:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "9007:1:14"
																}
															]
														},
														{
															"nativeSrc": "9041:16:14",
															"nodeType": "YulAssignment",
															"src": "9041:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9052:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "9052:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9055:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "9055:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9048:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9048:3:14"
																},
																"nativeSrc": "9048:9:14",
																"nodeType": "YulFunctionCall",
																"src": "9048:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9041:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9041:3:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9081:22:14",
																"nodeType": "YulBlock",
																"src": "9081:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9083:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "9083:16:14"
																			},
																			"nativeSrc": "9083:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9083:18:14"
																		},
																		"nativeSrc": "9083:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9083:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9073:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "9073:1:14"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9076:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9076:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9070:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "9070:2:14"
																},
																"nativeSrc": "9070:10:14",
																"nodeType": "YulFunctionCall",
																"src": "9070:10:14"
															},
															"nativeSrc": "9067:36:14",
															"nodeType": "YulIf",
															"src": "9067:36:14"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8919:191:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8950:1:14",
														"nodeType": "YulTypedName",
														"src": "8950:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8953:1:14",
														"nodeType": "YulTypedName",
														"src": "8953:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8959:3:14",
														"nodeType": "YulTypedName",
														"src": "8959:3:14",
														"type": ""
													}
												],
												"src": "8919:191:14"
											},
											{
												"body": {
													"nativeSrc": "9160:61:14",
													"nodeType": "YulBlock",
													"src": "9160:61:14",
													"statements": [
														{
															"nativeSrc": "9170:45:14",
															"nodeType": "YulAssignment",
															"src": "9170:45:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9185:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "9185:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9192:22:14",
																		"nodeType": "YulLiteral",
																		"src": "9192:22:14",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9181:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9181:3:14"
																},
																"nativeSrc": "9181:34:14",
																"nodeType": "YulFunctionCall",
																"src": "9181:34:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9170:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "9170:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nativeSrc": "9116:105:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9142:5:14",
														"nodeType": "YulTypedName",
														"src": "9142:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9152:7:14",
														"nodeType": "YulTypedName",
														"src": "9152:7:14",
														"type": ""
													}
												],
												"src": "9116:105:14"
											},
											{
												"body": {
													"nativeSrc": "9269:78:14",
													"nodeType": "YulBlock",
													"src": "9269:78:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "9325:16:14",
																"nodeType": "YulBlock",
																"src": "9325:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9334:1:14",
																					"nodeType": "YulLiteral",
																					"src": "9334:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9337:1:14",
																					"nodeType": "YulLiteral",
																					"src": "9337:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9327:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "9327:6:14"
																			},
																			"nativeSrc": "9327:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9327:12:14"
																		},
																		"nativeSrc": "9327:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9327:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9292:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "9292:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9316:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "9316:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nativeSrc": "9299:16:14",
																					"nodeType": "YulIdentifier",
																					"src": "9299:16:14"
																				},
																				"nativeSrc": "9299:23:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9299:23:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9289:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "9289:2:14"
																		},
																		"nativeSrc": "9289:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9289:34:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9282:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9282:6:14"
																},
																"nativeSrc": "9282:42:14",
																"nodeType": "YulFunctionCall",
																"src": "9282:42:14"
															},
															"nativeSrc": "9279:62:14",
															"nodeType": "YulIf",
															"src": "9279:62:14"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nativeSrc": "9227:120:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9262:5:14",
														"nodeType": "YulTypedName",
														"src": "9262:5:14",
														"type": ""
													}
												],
												"src": "9227:120:14"
											},
											{
												"body": {
													"nativeSrc": "9415:79:14",
													"nodeType": "YulBlock",
													"src": "9415:79:14",
													"statements": [
														{
															"nativeSrc": "9425:22:14",
															"nodeType": "YulAssignment",
															"src": "9425:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9440:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9440:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9434:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "9434:5:14"
																},
																"nativeSrc": "9434:13:14",
																"nodeType": "YulFunctionCall",
																"src": "9434:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9425:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "9425:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9482:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "9482:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nativeSrc": "9456:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "9456:25:14"
																},
																"nativeSrc": "9456:32:14",
																"nodeType": "YulFunctionCall",
																"src": "9456:32:14"
															},
															"nativeSrc": "9456:32:14",
															"nodeType": "YulExpressionStatement",
															"src": "9456:32:14"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nativeSrc": "9353:141:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9393:6:14",
														"nodeType": "YulTypedName",
														"src": "9393:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9401:3:14",
														"nodeType": "YulTypedName",
														"src": "9401:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9409:5:14",
														"nodeType": "YulTypedName",
														"src": "9409:5:14",
														"type": ""
													}
												],
												"src": "9353:141:14"
											},
											{
												"body": {
													"nativeSrc": "9544:32:14",
													"nodeType": "YulBlock",
													"src": "9544:32:14",
													"statements": [
														{
															"nativeSrc": "9554:16:14",
															"nodeType": "YulAssignment",
															"src": "9554:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "9565:5:14",
																"nodeType": "YulIdentifier",
																"src": "9565:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9554:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "9554:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "9500:76:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9526:5:14",
														"nodeType": "YulTypedName",
														"src": "9526:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9536:7:14",
														"nodeType": "YulTypedName",
														"src": "9536:7:14",
														"type": ""
													}
												],
												"src": "9500:76:14"
											},
											{
												"body": {
													"nativeSrc": "9624:78:14",
													"nodeType": "YulBlock",
													"src": "9624:78:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "9680:16:14",
																"nodeType": "YulBlock",
																"src": "9680:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9689:1:14",
																					"nodeType": "YulLiteral",
																					"src": "9689:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9692:1:14",
																					"nodeType": "YulLiteral",
																					"src": "9692:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9682:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "9682:6:14"
																			},
																			"nativeSrc": "9682:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9682:12:14"
																		},
																		"nativeSrc": "9682:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9682:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9647:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "9647:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9671:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "9671:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nativeSrc": "9654:16:14",
																					"nodeType": "YulIdentifier",
																					"src": "9654:16:14"
																				},
																				"nativeSrc": "9654:23:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9654:23:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9644:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "9644:2:14"
																		},
																		"nativeSrc": "9644:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9644:34:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9637:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9637:6:14"
																},
																"nativeSrc": "9637:42:14",
																"nodeType": "YulFunctionCall",
																"src": "9637:42:14"
															},
															"nativeSrc": "9634:62:14",
															"nodeType": "YulIf",
															"src": "9634:62:14"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nativeSrc": "9582:120:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9617:5:14",
														"nodeType": "YulTypedName",
														"src": "9617:5:14",
														"type": ""
													}
												],
												"src": "9582:120:14"
											},
											{
												"body": {
													"nativeSrc": "9770:79:14",
													"nodeType": "YulBlock",
													"src": "9770:79:14",
													"statements": [
														{
															"nativeSrc": "9780:22:14",
															"nodeType": "YulAssignment",
															"src": "9780:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9795:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9795:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9789:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "9789:5:14"
																},
																"nativeSrc": "9789:13:14",
																"nodeType": "YulFunctionCall",
																"src": "9789:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9780:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "9780:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9837:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "9837:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nativeSrc": "9811:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "9811:25:14"
																},
																"nativeSrc": "9811:32:14",
																"nodeType": "YulFunctionCall",
																"src": "9811:32:14"
															},
															"nativeSrc": "9811:32:14",
															"nodeType": "YulExpressionStatement",
															"src": "9811:32:14"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nativeSrc": "9708:141:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9748:6:14",
														"nodeType": "YulTypedName",
														"src": "9748:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9756:3:14",
														"nodeType": "YulTypedName",
														"src": "9756:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9764:5:14",
														"nodeType": "YulTypedName",
														"src": "9764:5:14",
														"type": ""
													}
												],
												"src": "9708:141:14"
											},
											{
												"body": {
													"nativeSrc": "9918:80:14",
													"nodeType": "YulBlock",
													"src": "9918:80:14",
													"statements": [
														{
															"nativeSrc": "9928:22:14",
															"nodeType": "YulAssignment",
															"src": "9928:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9943:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9943:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9937:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "9937:5:14"
																},
																"nativeSrc": "9937:13:14",
																"nodeType": "YulFunctionCall",
																"src": "9937:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9928:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "9928:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9986:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "9986:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "9959:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "9959:26:14"
																},
																"nativeSrc": "9959:33:14",
																"nodeType": "YulFunctionCall",
																"src": "9959:33:14"
															},
															"nativeSrc": "9959:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "9959:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "9855:143:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9896:6:14",
														"nodeType": "YulTypedName",
														"src": "9896:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9904:3:14",
														"nodeType": "YulTypedName",
														"src": "9904:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9912:5:14",
														"nodeType": "YulTypedName",
														"src": "9912:5:14",
														"type": ""
													}
												],
												"src": "9855:143:14"
											},
											{
												"body": {
													"nativeSrc": "10146:829:14",
													"nodeType": "YulBlock",
													"src": "10146:829:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "10193:83:14",
																"nodeType": "YulBlock",
																"src": "10193:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10195:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "10195:77:14"
																			},
																			"nativeSrc": "10195:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "10195:79:14"
																		},
																		"nativeSrc": "10195:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "10195:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10167:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10167:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10176:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10176:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10163:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10163:3:14"
																		},
																		"nativeSrc": "10163:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10163:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10188:3:14",
																		"nodeType": "YulLiteral",
																		"src": "10188:3:14",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10159:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10159:3:14"
																},
																"nativeSrc": "10159:33:14",
																"nodeType": "YulFunctionCall",
																"src": "10159:33:14"
															},
															"nativeSrc": "10156:120:14",
															"nodeType": "YulIf",
															"src": "10156:120:14"
														},
														{
															"nativeSrc": "10286:127:14",
															"nodeType": "YulBlock",
															"src": "10286:127:14",
															"statements": [
																{
																	"nativeSrc": "10301:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10301:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10315:1:14",
																		"nodeType": "YulLiteral",
																		"src": "10315:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10305:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10305:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10330:73:14",
																	"nodeType": "YulAssignment",
																	"src": "10330:73:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10375:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10375:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10386:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10386:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10371:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10371:3:14"
																				},
																				"nativeSrc": "10371:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10371:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10395:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10395:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "10340:30:14",
																			"nodeType": "YulIdentifier",
																			"src": "10340:30:14"
																		},
																		"nativeSrc": "10340:63:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10340:63:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10330:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "10330:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10423:128:14",
															"nodeType": "YulBlock",
															"src": "10423:128:14",
															"statements": [
																{
																	"nativeSrc": "10438:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10438:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10452:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10452:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10442:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10442:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10468:73:14",
																	"nodeType": "YulAssignment",
																	"src": "10468:73:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10513:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10513:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10524:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10524:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10509:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10509:3:14"
																				},
																				"nativeSrc": "10509:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10509:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10533:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10533:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nativeSrc": "10478:30:14",
																			"nodeType": "YulIdentifier",
																			"src": "10478:30:14"
																		},
																		"nativeSrc": "10478:63:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10478:63:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10468:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "10468:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10561:129:14",
															"nodeType": "YulBlock",
															"src": "10561:129:14",
															"statements": [
																{
																	"nativeSrc": "10576:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10576:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10590:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10590:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10580:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10580:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10606:74:14",
																	"nodeType": "YulAssignment",
																	"src": "10606:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10652:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10652:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10663:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10663:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10648:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10648:3:14"
																				},
																				"nativeSrc": "10648:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10648:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10672:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10672:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "10616:31:14",
																			"nodeType": "YulIdentifier",
																			"src": "10616:31:14"
																		},
																		"nativeSrc": "10616:64:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10616:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10606:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "10606:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10700:129:14",
															"nodeType": "YulBlock",
															"src": "10700:129:14",
															"statements": [
																{
																	"nativeSrc": "10715:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10715:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10729:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10729:2:14",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10719:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10719:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10745:74:14",
																	"nodeType": "YulAssignment",
																	"src": "10745:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10791:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10791:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10802:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10802:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10787:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10787:3:14"
																				},
																				"nativeSrc": "10787:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10787:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10811:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10811:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "10755:31:14",
																			"nodeType": "YulIdentifier",
																			"src": "10755:31:14"
																		},
																		"nativeSrc": "10755:64:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10755:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "10745:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "10745:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10839:129:14",
															"nodeType": "YulBlock",
															"src": "10839:129:14",
															"statements": [
																{
																	"nativeSrc": "10854:17:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10854:17:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10868:3:14",
																		"nodeType": "YulLiteral",
																		"src": "10868:3:14",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10858:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10858:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10885:73:14",
																	"nodeType": "YulAssignment",
																	"src": "10885:73:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10930:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10930:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10941:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10941:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10926:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10926:3:14"
																				},
																				"nativeSrc": "10926:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10926:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10950:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10950:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "10895:30:14",
																			"nodeType": "YulIdentifier",
																			"src": "10895:30:14"
																		},
																		"nativeSrc": "10895:63:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10895:63:14"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "10885:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "10885:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nativeSrc": "10004:971:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10084:9:14",
														"nodeType": "YulTypedName",
														"src": "10084:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10095:7:14",
														"nodeType": "YulTypedName",
														"src": "10095:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10107:6:14",
														"nodeType": "YulTypedName",
														"src": "10107:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10115:6:14",
														"nodeType": "YulTypedName",
														"src": "10115:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10123:6:14",
														"nodeType": "YulTypedName",
														"src": "10123:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10131:6:14",
														"nodeType": "YulTypedName",
														"src": "10131:6:14",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "10139:6:14",
														"nodeType": "YulTypedName",
														"src": "10139:6:14",
														"type": ""
													}
												],
												"src": "10004:971:14"
											},
											{
												"body": {
													"nativeSrc": "11024:190:14",
													"nodeType": "YulBlock",
													"src": "11024:190:14",
													"statements": [
														{
															"nativeSrc": "11034:33:14",
															"nodeType": "YulAssignment",
															"src": "11034:33:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11061:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "11061:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11043:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "11043:17:14"
																},
																"nativeSrc": "11043:24:14",
																"nodeType": "YulFunctionCall",
																"src": "11043:24:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11034:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "11034:5:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11157:22:14",
																"nodeType": "YulBlock",
																"src": "11157:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11159:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "11159:16:14"
																			},
																			"nativeSrc": "11159:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "11159:18:14"
																		},
																		"nativeSrc": "11159:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "11159:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11082:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "11082:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11089:66:14",
																		"nodeType": "YulLiteral",
																		"src": "11089:66:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11079:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "11079:2:14"
																},
																"nativeSrc": "11079:77:14",
																"nodeType": "YulFunctionCall",
																"src": "11079:77:14"
															},
															"nativeSrc": "11076:103:14",
															"nodeType": "YulIf",
															"src": "11076:103:14"
														},
														{
															"nativeSrc": "11188:20:14",
															"nodeType": "YulAssignment",
															"src": "11188:20:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11199:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "11199:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11206:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11206:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11195:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11195:3:14"
																},
																"nativeSrc": "11195:13:14",
																"nodeType": "YulFunctionCall",
																"src": "11195:13:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "11188:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11188:3:14"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "10981:233:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11010:5:14",
														"nodeType": "YulTypedName",
														"src": "11010:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "11020:3:14",
														"nodeType": "YulTypedName",
														"src": "11020:3:14",
														"type": ""
													}
												],
												"src": "10981:233:14"
											},
											{
												"body": {
													"nativeSrc": "11346:206:14",
													"nodeType": "YulBlock",
													"src": "11346:206:14",
													"statements": [
														{
															"nativeSrc": "11356:26:14",
															"nodeType": "YulAssignment",
															"src": "11356:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11368:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "11368:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11379:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11379:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11364:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11364:3:14"
																},
																"nativeSrc": "11364:18:14",
																"nodeType": "YulFunctionCall",
																"src": "11364:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11356:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "11356:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11436:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11436:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11449:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11449:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11460:1:14",
																				"nodeType": "YulLiteral",
																				"src": "11460:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11445:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11445:3:14"
																		},
																		"nativeSrc": "11445:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11445:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11392:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "11392:43:14"
																},
																"nativeSrc": "11392:71:14",
																"nodeType": "YulFunctionCall",
																"src": "11392:71:14"
															},
															"nativeSrc": "11392:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "11392:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11517:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11517:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11530:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11530:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11541:2:14",
																				"nodeType": "YulLiteral",
																				"src": "11541:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11526:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11526:3:14"
																		},
																		"nativeSrc": "11526:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11526:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11473:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "11473:43:14"
																},
																"nativeSrc": "11473:72:14",
																"nodeType": "YulFunctionCall",
																"src": "11473:72:14"
															},
															"nativeSrc": "11473:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "11473:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11220:332:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11310:9:14",
														"nodeType": "YulTypedName",
														"src": "11310:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11322:6:14",
														"nodeType": "YulTypedName",
														"src": "11322:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11330:6:14",
														"nodeType": "YulTypedName",
														"src": "11330:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11341:4:14",
														"nodeType": "YulTypedName",
														"src": "11341:4:14",
														"type": ""
													}
												],
												"src": "11220:332:14"
											},
											{
												"body": {
													"nativeSrc": "11603:149:14",
													"nodeType": "YulBlock",
													"src": "11603:149:14",
													"statements": [
														{
															"nativeSrc": "11613:25:14",
															"nodeType": "YulAssignment",
															"src": "11613:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11636:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "11636:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11618:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "11618:17:14"
																},
																"nativeSrc": "11618:20:14",
																"nodeType": "YulFunctionCall",
																"src": "11618:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11613:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "11613:1:14"
																}
															]
														},
														{
															"nativeSrc": "11647:25:14",
															"nodeType": "YulAssignment",
															"src": "11647:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11670:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "11670:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11652:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "11652:17:14"
																},
																"nativeSrc": "11652:20:14",
																"nodeType": "YulFunctionCall",
																"src": "11652:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11647:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "11647:1:14"
																}
															]
														},
														{
															"nativeSrc": "11681:17:14",
															"nodeType": "YulAssignment",
															"src": "11681:17:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11693:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "11693:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11696:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "11696:1:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11689:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11689:3:14"
																},
																"nativeSrc": "11689:9:14",
																"nodeType": "YulFunctionCall",
																"src": "11689:9:14"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "11681:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "11681:4:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11723:22:14",
																"nodeType": "YulBlock",
																"src": "11723:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11725:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "11725:16:14"
																			},
																			"nativeSrc": "11725:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "11725:18:14"
																		},
																		"nativeSrc": "11725:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "11725:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "11714:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "11714:4:14"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "11720:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "11720:1:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11711:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "11711:2:14"
																},
																"nativeSrc": "11711:11:14",
																"nodeType": "YulFunctionCall",
																"src": "11711:11:14"
															},
															"nativeSrc": "11708:37:14",
															"nodeType": "YulIf",
															"src": "11708:37:14"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "11558:194:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11589:1:14",
														"nodeType": "YulTypedName",
														"src": "11589:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11592:1:14",
														"nodeType": "YulTypedName",
														"src": "11592:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "11598:4:14",
														"nodeType": "YulTypedName",
														"src": "11598:4:14",
														"type": ""
													}
												],
												"src": "11558:194:14"
											},
											{
												"body": {
													"nativeSrc": "11786:152:14",
													"nodeType": "YulBlock",
													"src": "11786:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11803:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11803:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11806:77:14",
																		"nodeType": "YulLiteral",
																		"src": "11806:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11796:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11796:6:14"
																},
																"nativeSrc": "11796:88:14",
																"nodeType": "YulFunctionCall",
																"src": "11796:88:14"
															},
															"nativeSrc": "11796:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "11796:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11900:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11900:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11903:4:14",
																		"nodeType": "YulLiteral",
																		"src": "11903:4:14",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11893:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11893:6:14"
																},
																"nativeSrc": "11893:15:14",
																"nodeType": "YulFunctionCall",
																"src": "11893:15:14"
															},
															"nativeSrc": "11893:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "11893:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11924:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11924:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11927:4:14",
																		"nodeType": "YulLiteral",
																		"src": "11927:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11917:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11917:6:14"
																},
																"nativeSrc": "11917:15:14",
																"nodeType": "YulFunctionCall",
																"src": "11917:15:14"
															},
															"nativeSrc": "11917:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "11917:15:14"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "11758:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "11758:180:14"
											},
											{
												"body": {
													"nativeSrc": "12057:34:14",
													"nodeType": "YulBlock",
													"src": "12057:34:14",
													"statements": [
														{
															"nativeSrc": "12067:18:14",
															"nodeType": "YulAssignment",
															"src": "12067:18:14",
															"value": {
																"name": "pos",
																"nativeSrc": "12082:3:14",
																"nodeType": "YulIdentifier",
																"src": "12082:3:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12067:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "12067:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "11944:147:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12029:3:14",
														"nodeType": "YulTypedName",
														"src": "12029:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12034:6:14",
														"nodeType": "YulTypedName",
														"src": "12034:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12045:11:14",
														"nodeType": "YulTypedName",
														"src": "12045:11:14",
														"type": ""
													}
												],
												"src": "11944:147:14"
											},
											{
												"body": {
													"nativeSrc": "12203:8:14",
													"nodeType": "YulBlock",
													"src": "12203:8:14",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "12097:114:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12195:6:14",
														"nodeType": "YulTypedName",
														"src": "12195:6:14",
														"type": ""
													}
												],
												"src": "12097:114:14"
											},
											{
												"body": {
													"nativeSrc": "12380:235:14",
													"nodeType": "YulBlock",
													"src": "12380:235:14",
													"statements": [
														{
															"nativeSrc": "12390:90:14",
															"nodeType": "YulAssignment",
															"src": "12390:90:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12473:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12473:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12478:1:14",
																		"nodeType": "YulLiteral",
																		"src": "12478:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "12397:75:14",
																	"nodeType": "YulIdentifier",
																	"src": "12397:75:14"
																},
																"nativeSrc": "12397:83:14",
																"nodeType": "YulFunctionCall",
																"src": "12397:83:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12390:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12390:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12578:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12578:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "12489:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "12489:88:14"
																},
																"nativeSrc": "12489:93:14",
																"nodeType": "YulFunctionCall",
																"src": "12489:93:14"
															},
															"nativeSrc": "12489:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "12489:93:14"
														},
														{
															"nativeSrc": "12591:18:14",
															"nodeType": "YulAssignment",
															"src": "12591:18:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12602:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12602:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12607:1:14",
																		"nodeType": "YulLiteral",
																		"src": "12607:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12598:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12598:3:14"
																},
																"nativeSrc": "12598:11:14",
																"nodeType": "YulFunctionCall",
																"src": "12598:11:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12591:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12591:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "12217:398:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12368:3:14",
														"nodeType": "YulTypedName",
														"src": "12368:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12376:3:14",
														"nodeType": "YulTypedName",
														"src": "12376:3:14",
														"type": ""
													}
												],
												"src": "12217:398:14"
											},
											{
												"body": {
													"nativeSrc": "12809:191:14",
													"nodeType": "YulBlock",
													"src": "12809:191:14",
													"statements": [
														{
															"nativeSrc": "12820:154:14",
															"nodeType": "YulAssignment",
															"src": "12820:154:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12970:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12970:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "12827:141:14",
																	"nodeType": "YulIdentifier",
																	"src": "12827:141:14"
																},
																"nativeSrc": "12827:147:14",
																"nodeType": "YulFunctionCall",
																"src": "12827:147:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12820:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12820:3:14"
																}
															]
														},
														{
															"nativeSrc": "12984:10:14",
															"nodeType": "YulAssignment",
															"src": "12984:10:14",
															"value": {
																"name": "pos",
																"nativeSrc": "12991:3:14",
																"nodeType": "YulIdentifier",
																"src": "12991:3:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12984:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12984:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "12621:379:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12796:3:14",
														"nodeType": "YulTypedName",
														"src": "12796:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12805:3:14",
														"nodeType": "YulTypedName",
														"src": "12805:3:14",
														"type": ""
													}
												],
												"src": "12621:379:14"
											},
											{
												"body": {
													"nativeSrc": "13049:43:14",
													"nodeType": "YulBlock",
													"src": "13049:43:14",
													"statements": [
														{
															"nativeSrc": "13059:27:14",
															"nodeType": "YulAssignment",
															"src": "13059:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13074:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "13074:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13081:4:14",
																		"nodeType": "YulLiteral",
																		"src": "13081:4:14",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13070:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13070:3:14"
																},
																"nativeSrc": "13070:16:14",
																"nodeType": "YulFunctionCall",
																"src": "13070:16:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "13059:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "13059:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "13006:86:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13031:5:14",
														"nodeType": "YulTypedName",
														"src": "13031:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "13041:7:14",
														"nodeType": "YulTypedName",
														"src": "13041:7:14",
														"type": ""
													}
												],
												"src": "13006:86:14"
											},
											{
												"body": {
													"nativeSrc": "13139:77:14",
													"nodeType": "YulBlock",
													"src": "13139:77:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "13194:16:14",
																"nodeType": "YulBlock",
																"src": "13194:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13203:1:14",
																					"nodeType": "YulLiteral",
																					"src": "13203:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13206:1:14",
																					"nodeType": "YulLiteral",
																					"src": "13206:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13196:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "13196:6:14"
																			},
																			"nativeSrc": "13196:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "13196:12:14"
																		},
																		"nativeSrc": "13196:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "13196:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13162:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "13162:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13185:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "13185:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "13169:15:14",
																					"nodeType": "YulIdentifier",
																					"src": "13169:15:14"
																				},
																				"nativeSrc": "13169:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13169:22:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "13159:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "13159:2:14"
																		},
																		"nativeSrc": "13159:33:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13159:33:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13152:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "13152:6:14"
																},
																"nativeSrc": "13152:41:14",
																"nodeType": "YulFunctionCall",
																"src": "13152:41:14"
															},
															"nativeSrc": "13149:61:14",
															"nodeType": "YulIf",
															"src": "13149:61:14"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "13098:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13132:5:14",
														"nodeType": "YulTypedName",
														"src": "13132:5:14",
														"type": ""
													}
												],
												"src": "13098:118:14"
											},
											{
												"body": {
													"nativeSrc": "13283:78:14",
													"nodeType": "YulBlock",
													"src": "13283:78:14",
													"statements": [
														{
															"nativeSrc": "13293:22:14",
															"nodeType": "YulAssignment",
															"src": "13293:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13308:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "13308:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13302:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "13302:5:14"
																},
																"nativeSrc": "13302:13:14",
																"nodeType": "YulFunctionCall",
																"src": "13302:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13293:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "13293:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13349:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "13349:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "13324:24:14",
																	"nodeType": "YulIdentifier",
																	"src": "13324:24:14"
																},
																"nativeSrc": "13324:31:14",
																"nodeType": "YulFunctionCall",
																"src": "13324:31:14"
															},
															"nativeSrc": "13324:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "13324:31:14"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nativeSrc": "13222:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13261:6:14",
														"nodeType": "YulTypedName",
														"src": "13261:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13269:3:14",
														"nodeType": "YulTypedName",
														"src": "13269:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13277:5:14",
														"nodeType": "YulTypedName",
														"src": "13277:5:14",
														"type": ""
													}
												],
												"src": "13222:139:14"
											},
											{
												"body": {
													"nativeSrc": "13442:272:14",
													"nodeType": "YulBlock",
													"src": "13442:272:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "13488:83:14",
																"nodeType": "YulBlock",
																"src": "13488:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13490:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "13490:77:14"
																			},
																			"nativeSrc": "13490:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "13490:79:14"
																		},
																		"nativeSrc": "13490:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "13490:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13463:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "13463:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13472:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "13472:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13459:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13459:3:14"
																		},
																		"nativeSrc": "13459:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13459:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13484:2:14",
																		"nodeType": "YulLiteral",
																		"src": "13484:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13455:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13455:3:14"
																},
																"nativeSrc": "13455:32:14",
																"nodeType": "YulFunctionCall",
																"src": "13455:32:14"
															},
															"nativeSrc": "13452:119:14",
															"nodeType": "YulIf",
															"src": "13452:119:14"
														},
														{
															"nativeSrc": "13581:126:14",
															"nodeType": "YulBlock",
															"src": "13581:126:14",
															"statements": [
																{
																	"nativeSrc": "13596:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13596:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13610:1:14",
																		"nodeType": "YulLiteral",
																		"src": "13610:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13600:6:14",
																			"nodeType": "YulTypedName",
																			"src": "13600:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13625:72:14",
																	"nodeType": "YulAssignment",
																	"src": "13625:72:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13669:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "13669:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13680:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "13680:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13665:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "13665:3:14"
																				},
																				"nativeSrc": "13665:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13665:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13689:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "13689:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nativeSrc": "13635:29:14",
																			"nodeType": "YulIdentifier",
																			"src": "13635:29:14"
																		},
																		"nativeSrc": "13635:62:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13635:62:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13625:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "13625:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nativeSrc": "13367:347:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13412:9:14",
														"nodeType": "YulTypedName",
														"src": "13412:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13423:7:14",
														"nodeType": "YulTypedName",
														"src": "13423:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13435:6:14",
														"nodeType": "YulTypedName",
														"src": "13435:6:14",
														"type": ""
													}
												],
												"src": "13367:347:14"
											},
											{
												"body": {
													"nativeSrc": "13768:362:14",
													"nodeType": "YulBlock",
													"src": "13768:362:14",
													"statements": [
														{
															"nativeSrc": "13778:25:14",
															"nodeType": "YulAssignment",
															"src": "13778:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13801:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "13801:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13783:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "13783:17:14"
																},
																"nativeSrc": "13783:20:14",
																"nodeType": "YulFunctionCall",
																"src": "13783:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13778:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "13778:1:14"
																}
															]
														},
														{
															"nativeSrc": "13812:25:14",
															"nodeType": "YulAssignment",
															"src": "13812:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13835:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "13835:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13817:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "13817:17:14"
																},
																"nativeSrc": "13817:20:14",
																"nodeType": "YulFunctionCall",
																"src": "13817:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13812:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "13812:1:14"
																}
															]
														},
														{
															"nativeSrc": "13846:28:14",
															"nodeType": "YulVariableDeclaration",
															"src": "13846:28:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13869:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "13869:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13872:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "13872:1:14"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "13865:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13865:3:14"
																},
																"nativeSrc": "13865:9:14",
																"nodeType": "YulFunctionCall",
																"src": "13865:9:14"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "13850:11:14",
																	"nodeType": "YulTypedName",
																	"src": "13850:11:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13883:41:14",
															"nodeType": "YulAssignment",
															"src": "13883:41:14",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "13912:11:14",
																		"nodeType": "YulIdentifier",
																		"src": "13912:11:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13894:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "13894:17:14"
																},
																"nativeSrc": "13894:30:14",
																"nodeType": "YulFunctionCall",
																"src": "13894:30:14"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "13883:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "13883:7:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14101:22:14",
																"nodeType": "YulBlock",
																"src": "14101:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14103:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "14103:16:14"
																			},
																			"nativeSrc": "14103:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "14103:18:14"
																		},
																		"nativeSrc": "14103:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "14103:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "14034:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "14034:1:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "14027:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "14027:6:14"
																				},
																				"nativeSrc": "14027:9:14",
																				"nodeType": "YulFunctionCall",
																				"src": "14027:9:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "14057:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "14057:1:14"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "14064:7:14",
																								"nodeType": "YulIdentifier",
																								"src": "14064:7:14"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "14073:1:14",
																								"nodeType": "YulIdentifier",
																								"src": "14073:1:14"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "14060:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "14060:3:14"
																						},
																						"nativeSrc": "14060:15:14",
																						"nodeType": "YulFunctionCall",
																						"src": "14060:15:14"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "14054:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "14054:2:14"
																				},
																				"nativeSrc": "14054:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "14054:22:14"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "14007:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "14007:2:14"
																		},
																		"nativeSrc": "14007:83:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14007:83:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13987:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "13987:6:14"
																},
																"nativeSrc": "13987:113:14",
																"nodeType": "YulFunctionCall",
																"src": "13987:113:14"
															},
															"nativeSrc": "13984:139:14",
															"nodeType": "YulIf",
															"src": "13984:139:14"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "13720:410:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13751:1:14",
														"nodeType": "YulTypedName",
														"src": "13751:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13754:1:14",
														"nodeType": "YulTypedName",
														"src": "13754:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "13760:7:14",
														"nodeType": "YulTypedName",
														"src": "13760:7:14",
														"type": ""
													}
												],
												"src": "13720:410:14"
											},
											{
												"body": {
													"nativeSrc": "14164:152:14",
													"nodeType": "YulBlock",
													"src": "14164:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14181:1:14",
																		"nodeType": "YulLiteral",
																		"src": "14181:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14184:77:14",
																		"nodeType": "YulLiteral",
																		"src": "14184:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14174:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14174:6:14"
																},
																"nativeSrc": "14174:88:14",
																"nodeType": "YulFunctionCall",
																"src": "14174:88:14"
															},
															"nativeSrc": "14174:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "14174:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14278:1:14",
																		"nodeType": "YulLiteral",
																		"src": "14278:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14281:4:14",
																		"nodeType": "YulLiteral",
																		"src": "14281:4:14",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14271:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14271:6:14"
																},
																"nativeSrc": "14271:15:14",
																"nodeType": "YulFunctionCall",
																"src": "14271:15:14"
															},
															"nativeSrc": "14271:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "14271:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14302:1:14",
																		"nodeType": "YulLiteral",
																		"src": "14302:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14305:4:14",
																		"nodeType": "YulLiteral",
																		"src": "14305:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14295:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14295:6:14"
																},
																"nativeSrc": "14295:15:14",
																"nodeType": "YulFunctionCall",
																"src": "14295:15:14"
															},
															"nativeSrc": "14295:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "14295:15:14"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "14136:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "14136:180:14"
											},
											{
												"body": {
													"nativeSrc": "14364:143:14",
													"nodeType": "YulBlock",
													"src": "14364:143:14",
													"statements": [
														{
															"nativeSrc": "14374:25:14",
															"nodeType": "YulAssignment",
															"src": "14374:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14397:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "14397:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14379:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "14379:17:14"
																},
																"nativeSrc": "14379:20:14",
																"nodeType": "YulFunctionCall",
																"src": "14379:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14374:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "14374:1:14"
																}
															]
														},
														{
															"nativeSrc": "14408:25:14",
															"nodeType": "YulAssignment",
															"src": "14408:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14431:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "14431:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14413:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "14413:17:14"
																},
																"nativeSrc": "14413:20:14",
																"nodeType": "YulFunctionCall",
																"src": "14413:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14408:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "14408:1:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14455:22:14",
																"nodeType": "YulBlock",
																"src": "14455:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "14457:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "14457:16:14"
																			},
																			"nativeSrc": "14457:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "14457:18:14"
																		},
																		"nativeSrc": "14457:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "14457:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14452:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "14452:1:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14445:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14445:6:14"
																},
																"nativeSrc": "14445:9:14",
																"nodeType": "YulFunctionCall",
																"src": "14445:9:14"
															},
															"nativeSrc": "14442:35:14",
															"nodeType": "YulIf",
															"src": "14442:35:14"
														},
														{
															"nativeSrc": "14487:14:14",
															"nodeType": "YulAssignment",
															"src": "14487:14:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14496:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "14496:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14499:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "14499:1:14"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14492:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14492:3:14"
																},
																"nativeSrc": "14492:9:14",
																"nodeType": "YulFunctionCall",
																"src": "14492:9:14"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "14487:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "14487:1:14"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "14322:185:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14353:1:14",
														"nodeType": "YulTypedName",
														"src": "14353:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14356:1:14",
														"nodeType": "YulTypedName",
														"src": "14356:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "14362:1:14",
														"nodeType": "YulTypedName",
														"src": "14362:1:14",
														"type": ""
													}
												],
												"src": "14322:185:14"
											},
											{
												"body": {
													"nativeSrc": "14609:73:14",
													"nodeType": "YulBlock",
													"src": "14609:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14626:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14626:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14631:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "14631:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14619:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14619:6:14"
																},
																"nativeSrc": "14619:19:14",
																"nodeType": "YulFunctionCall",
																"src": "14619:19:14"
															},
															"nativeSrc": "14619:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "14619:19:14"
														},
														{
															"nativeSrc": "14647:29:14",
															"nodeType": "YulAssignment",
															"src": "14647:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14666:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14666:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14671:4:14",
																		"nodeType": "YulLiteral",
																		"src": "14671:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14662:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14662:3:14"
																},
																"nativeSrc": "14662:14:14",
																"nodeType": "YulFunctionCall",
																"src": "14662:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "14647:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "14647:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "14513:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14581:3:14",
														"nodeType": "YulTypedName",
														"src": "14581:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "14586:6:14",
														"nodeType": "YulTypedName",
														"src": "14586:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "14597:11:14",
														"nodeType": "YulTypedName",
														"src": "14597:11:14",
														"type": ""
													}
												],
												"src": "14513:169:14"
											},
											{
												"body": {
													"nativeSrc": "14794:75:14",
													"nodeType": "YulBlock",
													"src": "14794:75:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14816:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "14816:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14824:1:14",
																				"nodeType": "YulLiteral",
																				"src": "14824:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14812:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14812:3:14"
																		},
																		"nativeSrc": "14812:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14812:14:14"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "14828:33:14",
																		"nodeType": "YulLiteral",
																		"src": "14828:33:14",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14805:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14805:6:14"
																},
																"nativeSrc": "14805:57:14",
																"nodeType": "YulFunctionCall",
																"src": "14805:57:14"
															},
															"nativeSrc": "14805:57:14",
															"nodeType": "YulExpressionStatement",
															"src": "14805:57:14"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "14688:181:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14786:6:14",
														"nodeType": "YulTypedName",
														"src": "14786:6:14",
														"type": ""
													}
												],
												"src": "14688:181:14"
											},
											{
												"body": {
													"nativeSrc": "15021:220:14",
													"nodeType": "YulBlock",
													"src": "15021:220:14",
													"statements": [
														{
															"nativeSrc": "15031:74:14",
															"nodeType": "YulAssignment",
															"src": "15031:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15097:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15097:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15102:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15102:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15038:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "15038:58:14"
																},
																"nativeSrc": "15038:67:14",
																"nodeType": "YulFunctionCall",
																"src": "15038:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15031:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15031:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15203:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15203:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "15114:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "15114:88:14"
																},
																"nativeSrc": "15114:93:14",
																"nodeType": "YulFunctionCall",
																"src": "15114:93:14"
															},
															"nativeSrc": "15114:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "15114:93:14"
														},
														{
															"nativeSrc": "15216:19:14",
															"nodeType": "YulAssignment",
															"src": "15216:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15227:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15227:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15232:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15232:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15223:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15223:3:14"
																},
																"nativeSrc": "15223:12:14",
																"nodeType": "YulFunctionCall",
																"src": "15223:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15216:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15216:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14875:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15009:3:14",
														"nodeType": "YulTypedName",
														"src": "15009:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15017:3:14",
														"nodeType": "YulTypedName",
														"src": "15017:3:14",
														"type": ""
													}
												],
												"src": "14875:366:14"
											},
											{
												"body": {
													"nativeSrc": "15418:248:14",
													"nodeType": "YulBlock",
													"src": "15418:248:14",
													"statements": [
														{
															"nativeSrc": "15428:26:14",
															"nodeType": "YulAssignment",
															"src": "15428:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15440:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "15440:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15451:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15451:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15436:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15436:3:14"
																},
																"nativeSrc": "15436:18:14",
																"nodeType": "YulFunctionCall",
																"src": "15436:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15428:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "15428:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15475:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "15475:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15486:1:14",
																				"nodeType": "YulLiteral",
																				"src": "15486:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15471:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15471:3:14"
																		},
																		"nativeSrc": "15471:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15471:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15494:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "15494:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15500:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "15500:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15490:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15490:3:14"
																		},
																		"nativeSrc": "15490:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15490:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15464:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15464:6:14"
																},
																"nativeSrc": "15464:47:14",
																"nodeType": "YulFunctionCall",
																"src": "15464:47:14"
															},
															"nativeSrc": "15464:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "15464:47:14"
														},
														{
															"nativeSrc": "15520:139:14",
															"nodeType": "YulAssignment",
															"src": "15520:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15654:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "15654:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15528:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "15528:124:14"
																},
																"nativeSrc": "15528:131:14",
																"nodeType": "YulFunctionCall",
																"src": "15528:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15520:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "15520:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15247:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15398:9:14",
														"nodeType": "YulTypedName",
														"src": "15398:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15413:4:14",
														"nodeType": "YulTypedName",
														"src": "15413:4:14",
														"type": ""
													}
												],
												"src": "15247:419:14"
											},
											{
												"body": {
													"nativeSrc": "15737:53:14",
													"nodeType": "YulBlock",
													"src": "15737:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15754:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15754:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15777:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "15777:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "15759:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "15759:17:14"
																		},
																		"nativeSrc": "15759:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15759:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15747:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15747:6:14"
																},
																"nativeSrc": "15747:37:14",
																"nodeType": "YulFunctionCall",
																"src": "15747:37:14"
															},
															"nativeSrc": "15747:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "15747:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "15672:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15725:5:14",
														"nodeType": "YulTypedName",
														"src": "15725:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15732:3:14",
														"nodeType": "YulTypedName",
														"src": "15732:3:14",
														"type": ""
													}
												],
												"src": "15672:118:14"
											},
											{
												"body": {
													"nativeSrc": "15950:288:14",
													"nodeType": "YulBlock",
													"src": "15950:288:14",
													"statements": [
														{
															"nativeSrc": "15960:26:14",
															"nodeType": "YulAssignment",
															"src": "15960:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15972:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "15972:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15983:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15983:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15968:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15968:3:14"
																},
																"nativeSrc": "15968:18:14",
																"nodeType": "YulFunctionCall",
																"src": "15968:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15960:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "15960:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16040:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "16040:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16053:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16053:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16064:1:14",
																				"nodeType": "YulLiteral",
																				"src": "16064:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16049:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16049:3:14"
																		},
																		"nativeSrc": "16049:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16049:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15996:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "15996:43:14"
																},
																"nativeSrc": "15996:71:14",
																"nodeType": "YulFunctionCall",
																"src": "15996:71:14"
															},
															"nativeSrc": "15996:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "15996:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16121:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "16121:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16134:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16134:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16145:2:14",
																				"nodeType": "YulLiteral",
																				"src": "16145:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16130:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16130:3:14"
																		},
																		"nativeSrc": "16130:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16130:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16077:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "16077:43:14"
																},
																"nativeSrc": "16077:72:14",
																"nodeType": "YulFunctionCall",
																"src": "16077:72:14"
															},
															"nativeSrc": "16077:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "16077:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16203:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "16203:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16216:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16216:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16227:2:14",
																				"nodeType": "YulLiteral",
																				"src": "16227:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16212:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16212:3:14"
																		},
																		"nativeSrc": "16212:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16212:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16159:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "16159:43:14"
																},
																"nativeSrc": "16159:72:14",
																"nodeType": "YulFunctionCall",
																"src": "16159:72:14"
															},
															"nativeSrc": "16159:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "16159:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "15796:442:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15906:9:14",
														"nodeType": "YulTypedName",
														"src": "15906:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15918:6:14",
														"nodeType": "YulTypedName",
														"src": "15918:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15926:6:14",
														"nodeType": "YulTypedName",
														"src": "15926:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15934:6:14",
														"nodeType": "YulTypedName",
														"src": "15934:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15945:4:14",
														"nodeType": "YulTypedName",
														"src": "15945:4:14",
														"type": ""
													}
												],
												"src": "15796:442:14"
											},
											{
												"body": {
													"nativeSrc": "16370:206:14",
													"nodeType": "YulBlock",
													"src": "16370:206:14",
													"statements": [
														{
															"nativeSrc": "16380:26:14",
															"nodeType": "YulAssignment",
															"src": "16380:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16392:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "16392:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16403:2:14",
																		"nodeType": "YulLiteral",
																		"src": "16403:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16388:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16388:3:14"
																},
																"nativeSrc": "16388:18:14",
																"nodeType": "YulFunctionCall",
																"src": "16388:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16380:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "16380:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16460:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "16460:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16473:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16473:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16484:1:14",
																				"nodeType": "YulLiteral",
																				"src": "16484:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16469:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16469:3:14"
																		},
																		"nativeSrc": "16469:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16469:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16416:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "16416:43:14"
																},
																"nativeSrc": "16416:71:14",
																"nodeType": "YulFunctionCall",
																"src": "16416:71:14"
															},
															"nativeSrc": "16416:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "16416:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16541:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "16541:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16554:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16554:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16565:2:14",
																				"nodeType": "YulLiteral",
																				"src": "16565:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16550:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16550:3:14"
																		},
																		"nativeSrc": "16550:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16550:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16497:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "16497:43:14"
																},
																"nativeSrc": "16497:72:14",
																"nodeType": "YulFunctionCall",
																"src": "16497:72:14"
															},
															"nativeSrc": "16497:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "16497:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "16244:332:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16334:9:14",
														"nodeType": "YulTypedName",
														"src": "16334:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16346:6:14",
														"nodeType": "YulTypedName",
														"src": "16346:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16354:6:14",
														"nodeType": "YulTypedName",
														"src": "16354:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16365:4:14",
														"nodeType": "YulTypedName",
														"src": "16365:4:14",
														"type": ""
													}
												],
												"src": "16244:332:14"
											},
											{
												"body": {
													"nativeSrc": "16625:148:14",
													"nodeType": "YulBlock",
													"src": "16625:148:14",
													"statements": [
														{
															"nativeSrc": "16635:23:14",
															"nodeType": "YulAssignment",
															"src": "16635:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16656:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "16656:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "16640:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "16640:15:14"
																},
																"nativeSrc": "16640:18:14",
																"nodeType": "YulFunctionCall",
																"src": "16640:18:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16635:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "16635:1:14"
																}
															]
														},
														{
															"nativeSrc": "16667:23:14",
															"nodeType": "YulAssignment",
															"src": "16667:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16688:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "16688:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "16672:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "16672:15:14"
																},
																"nativeSrc": "16672:18:14",
																"nodeType": "YulFunctionCall",
																"src": "16672:18:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16667:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "16667:1:14"
																}
															]
														},
														{
															"nativeSrc": "16699:17:14",
															"nodeType": "YulAssignment",
															"src": "16699:17:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16711:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "16711:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16714:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "16714:1:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "16707:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16707:3:14"
																},
																"nativeSrc": "16707:9:14",
																"nodeType": "YulFunctionCall",
																"src": "16707:9:14"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "16699:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "16699:4:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16744:22:14",
																"nodeType": "YulBlock",
																"src": "16744:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16746:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "16746:16:14"
																			},
																			"nativeSrc": "16746:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "16746:18:14"
																		},
																		"nativeSrc": "16746:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "16746:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "16732:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "16732:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16738:4:14",
																		"nodeType": "YulLiteral",
																		"src": "16738:4:14",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16729:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "16729:2:14"
																},
																"nativeSrc": "16729:14:14",
																"nodeType": "YulFunctionCall",
																"src": "16729:14:14"
															},
															"nativeSrc": "16726:40:14",
															"nodeType": "YulIf",
															"src": "16726:40:14"
														}
													]
												},
												"name": "checked_sub_t_uint8",
												"nativeSrc": "16582:191:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16611:1:14",
														"nodeType": "YulTypedName",
														"src": "16611:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16614:1:14",
														"nodeType": "YulTypedName",
														"src": "16614:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "16620:4:14",
														"nodeType": "YulTypedName",
														"src": "16620:4:14",
														"type": ""
													}
												],
												"src": "16582:191:14"
											},
											{
												"body": {
													"nativeSrc": "16830:51:14",
													"nodeType": "YulBlock",
													"src": "16830:51:14",
													"statements": [
														{
															"nativeSrc": "16840:34:14",
															"nodeType": "YulAssignment",
															"src": "16840:34:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16865:1:14",
																		"nodeType": "YulLiteral",
																		"src": "16865:1:14",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "16868:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "16868:5:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "16861:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16861:3:14"
																},
																"nativeSrc": "16861:13:14",
																"nodeType": "YulFunctionCall",
																"src": "16861:13:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "16840:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "16840:8:14"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "16779:102:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16811:5:14",
														"nodeType": "YulTypedName",
														"src": "16811:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "16821:8:14",
														"nodeType": "YulTypedName",
														"src": "16821:8:14",
														"type": ""
													}
												],
												"src": "16779:102:14"
											},
											{
												"body": {
													"nativeSrc": "16960:775:14",
													"nodeType": "YulBlock",
													"src": "16960:775:14",
													"statements": [
														{
															"nativeSrc": "16970:15:14",
															"nodeType": "YulAssignment",
															"src": "16970:15:14",
															"value": {
																"name": "_power",
																"nativeSrc": "16979:6:14",
																"nodeType": "YulIdentifier",
																"src": "16979:6:14"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "16970:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "16970:5:14"
																}
															]
														},
														{
															"nativeSrc": "16994:14:14",
															"nodeType": "YulAssignment",
															"src": "16994:14:14",
															"value": {
																"name": "_base",
																"nativeSrc": "17003:5:14",
																"nodeType": "YulIdentifier",
																"src": "17003:5:14"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "16994:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "16994:4:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17052:677:14",
																"nodeType": "YulBlock",
																"src": "17052:677:14",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "17140:22:14",
																			"nodeType": "YulBlock",
																			"src": "17140:22:14",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "17142:16:14",
																							"nodeType": "YulIdentifier",
																							"src": "17142:16:14"
																						},
																						"nativeSrc": "17142:18:14",
																						"nodeType": "YulFunctionCall",
																						"src": "17142:18:14"
																					},
																					"nativeSrc": "17142:18:14",
																					"nodeType": "YulExpressionStatement",
																					"src": "17142:18:14"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "17118:4:14",
																					"nodeType": "YulIdentifier",
																					"src": "17118:4:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "17128:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "17128:3:14"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "17133:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "17133:4:14"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "17124:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "17124:3:14"
																					},
																					"nativeSrc": "17124:14:14",
																					"nodeType": "YulFunctionCall",
																					"src": "17124:14:14"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "17115:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "17115:2:14"
																			},
																			"nativeSrc": "17115:24:14",
																			"nodeType": "YulFunctionCall",
																			"src": "17115:24:14"
																		},
																		"nativeSrc": "17112:50:14",
																		"nodeType": "YulIf",
																		"src": "17112:50:14"
																	},
																	{
																		"body": {
																			"nativeSrc": "17207:419:14",
																			"nodeType": "YulBlock",
																			"src": "17207:419:14",
																			"statements": [
																				{
																					"nativeSrc": "17587:25:14",
																					"nodeType": "YulAssignment",
																					"src": "17587:25:14",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "17600:5:14",
																								"nodeType": "YulIdentifier",
																								"src": "17600:5:14"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "17607:4:14",
																								"nodeType": "YulIdentifier",
																								"src": "17607:4:14"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "17596:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "17596:3:14"
																						},
																						"nativeSrc": "17596:16:14",
																						"nodeType": "YulFunctionCall",
																						"src": "17596:16:14"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "17587:5:14",
																							"nodeType": "YulIdentifier",
																							"src": "17587:5:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "17182:8:14",
																					"nodeType": "YulIdentifier",
																					"src": "17182:8:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17192:1:14",
																					"nodeType": "YulLiteral",
																					"src": "17192:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "17178:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "17178:3:14"
																			},
																			"nativeSrc": "17178:16:14",
																			"nodeType": "YulFunctionCall",
																			"src": "17178:16:14"
																		},
																		"nativeSrc": "17175:451:14",
																		"nodeType": "YulIf",
																		"src": "17175:451:14"
																	},
																	{
																		"nativeSrc": "17639:23:14",
																		"nodeType": "YulAssignment",
																		"src": "17639:23:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "17651:4:14",
																					"nodeType": "YulIdentifier",
																					"src": "17651:4:14"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "17657:4:14",
																					"nodeType": "YulIdentifier",
																					"src": "17657:4:14"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "17647:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "17647:3:14"
																			},
																			"nativeSrc": "17647:15:14",
																			"nodeType": "YulFunctionCall",
																			"src": "17647:15:14"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "17639:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "17639:4:14"
																			}
																		]
																	},
																	{
																		"nativeSrc": "17675:44:14",
																		"nodeType": "YulAssignment",
																		"src": "17675:44:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "17710:8:14",
																					"nodeType": "YulIdentifier",
																					"src": "17710:8:14"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "17687:22:14",
																				"nodeType": "YulIdentifier",
																				"src": "17687:22:14"
																			},
																			"nativeSrc": "17687:32:14",
																			"nodeType": "YulFunctionCall",
																			"src": "17687:32:14"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "17675:8:14",
																				"nodeType": "YulIdentifier",
																				"src": "17675:8:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "17028:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "17028:8:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17038:1:14",
																		"nodeType": "YulLiteral",
																		"src": "17038:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17025:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "17025:2:14"
																},
																"nativeSrc": "17025:15:14",
																"nodeType": "YulFunctionCall",
																"src": "17025:15:14"
															},
															"nativeSrc": "17017:712:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "17041:2:14",
																"nodeType": "YulBlock",
																"src": "17041:2:14",
																"statements": []
															},
															"pre": {
																"nativeSrc": "17021:3:14",
																"nodeType": "YulBlock",
																"src": "17021:3:14",
																"statements": []
															},
															"src": "17017:712:14"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "16887:848:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "16915:6:14",
														"nodeType": "YulTypedName",
														"src": "16915:6:14",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "16923:5:14",
														"nodeType": "YulTypedName",
														"src": "16923:5:14",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "16930:8:14",
														"nodeType": "YulTypedName",
														"src": "16930:8:14",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "16940:3:14",
														"nodeType": "YulTypedName",
														"src": "16940:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "16948:5:14",
														"nodeType": "YulTypedName",
														"src": "16948:5:14",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "16955:4:14",
														"nodeType": "YulTypedName",
														"src": "16955:4:14",
														"type": ""
													}
												],
												"src": "16887:848:14"
											},
											{
												"body": {
													"nativeSrc": "17801:1013:14",
													"nodeType": "YulBlock",
													"src": "17801:1013:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "17996:20:14",
																"nodeType": "YulBlock",
																"src": "17996:20:14",
																"statements": [
																	{
																		"nativeSrc": "17998:10:14",
																		"nodeType": "YulAssignment",
																		"src": "17998:10:14",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "18007:1:14",
																			"nodeType": "YulLiteral",
																			"src": "18007:1:14",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "17998:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "17998:5:14"
																			}
																		]
																	},
																	{
																		"nativeSrc": "18009:5:14",
																		"nodeType": "YulLeave",
																		"src": "18009:5:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "17986:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "17986:8:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17979:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17979:6:14"
																},
																"nativeSrc": "17979:16:14",
																"nodeType": "YulFunctionCall",
																"src": "17979:16:14"
															},
															"nativeSrc": "17976:40:14",
															"nodeType": "YulIf",
															"src": "17976:40:14"
														},
														{
															"body": {
																"nativeSrc": "18041:20:14",
																"nodeType": "YulBlock",
																"src": "18041:20:14",
																"statements": [
																	{
																		"nativeSrc": "18043:10:14",
																		"nodeType": "YulAssignment",
																		"src": "18043:10:14",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "18052:1:14",
																			"nodeType": "YulLiteral",
																			"src": "18052:1:14",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "18043:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "18043:5:14"
																			}
																		]
																	},
																	{
																		"nativeSrc": "18054:5:14",
																		"nodeType": "YulLeave",
																		"src": "18054:5:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "18035:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "18035:4:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18028:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18028:6:14"
																},
																"nativeSrc": "18028:12:14",
																"nodeType": "YulFunctionCall",
																"src": "18028:12:14"
															},
															"nativeSrc": "18025:36:14",
															"nodeType": "YulIf",
															"src": "18025:36:14"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "18171:20:14",
																		"nodeType": "YulBlock",
																		"src": "18171:20:14",
																		"statements": [
																			{
																				"nativeSrc": "18173:10:14",
																				"nodeType": "YulAssignment",
																				"src": "18173:10:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "18182:1:14",
																					"nodeType": "YulLiteral",
																					"src": "18182:1:14",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "18173:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "18173:5:14"
																					}
																				]
																			},
																			{
																				"nativeSrc": "18184:5:14",
																				"nodeType": "YulLeave",
																				"src": "18184:5:14"
																			}
																		]
																	},
																	"nativeSrc": "18164:27:14",
																	"nodeType": "YulCase",
																	"src": "18164:27:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18169:1:14",
																		"nodeType": "YulLiteral",
																		"src": "18169:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "18215:176:14",
																		"nodeType": "YulBlock",
																		"src": "18215:176:14",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "18250:22:14",
																					"nodeType": "YulBlock",
																					"src": "18250:22:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "18252:16:14",
																									"nodeType": "YulIdentifier",
																									"src": "18252:16:14"
																								},
																								"nativeSrc": "18252:18:14",
																								"nodeType": "YulFunctionCall",
																								"src": "18252:18:14"
																							},
																							"nativeSrc": "18252:18:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "18252:18:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "18235:8:14",
																							"nodeType": "YulIdentifier",
																							"src": "18235:8:14"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "18245:3:14",
																							"nodeType": "YulLiteral",
																							"src": "18245:3:14",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "18232:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "18232:2:14"
																					},
																					"nativeSrc": "18232:17:14",
																					"nodeType": "YulFunctionCall",
																					"src": "18232:17:14"
																				},
																				"nativeSrc": "18229:43:14",
																				"nodeType": "YulIf",
																				"src": "18229:43:14"
																			},
																			{
																				"nativeSrc": "18285:25:14",
																				"nodeType": "YulAssignment",
																				"src": "18285:25:14",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "18298:1:14",
																							"nodeType": "YulLiteral",
																							"src": "18298:1:14",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "18301:8:14",
																							"nodeType": "YulIdentifier",
																							"src": "18301:8:14"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "18294:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "18294:3:14"
																					},
																					"nativeSrc": "18294:16:14",
																					"nodeType": "YulFunctionCall",
																					"src": "18294:16:14"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "18285:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "18285:5:14"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "18341:22:14",
																					"nodeType": "YulBlock",
																					"src": "18341:22:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "18343:16:14",
																									"nodeType": "YulIdentifier",
																									"src": "18343:16:14"
																								},
																								"nativeSrc": "18343:18:14",
																								"nodeType": "YulFunctionCall",
																								"src": "18343:18:14"
																							},
																							"nativeSrc": "18343:18:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "18343:18:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "18329:5:14",
																							"nodeType": "YulIdentifier",
																							"src": "18329:5:14"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "18336:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "18336:3:14"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "18326:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "18326:2:14"
																					},
																					"nativeSrc": "18326:14:14",
																					"nodeType": "YulFunctionCall",
																					"src": "18326:14:14"
																				},
																				"nativeSrc": "18323:40:14",
																				"nodeType": "YulIf",
																				"src": "18323:40:14"
																			},
																			{
																				"nativeSrc": "18376:5:14",
																				"nodeType": "YulLeave",
																				"src": "18376:5:14"
																			}
																		]
																	},
																	"nativeSrc": "18200:191:14",
																	"nodeType": "YulCase",
																	"src": "18200:191:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18205:1:14",
																		"nodeType": "YulLiteral",
																		"src": "18205:1:14",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "18121:4:14",
																"nodeType": "YulIdentifier",
																"src": "18121:4:14"
															},
															"nativeSrc": "18114:277:14",
															"nodeType": "YulSwitch",
															"src": "18114:277:14"
														},
														{
															"body": {
																"nativeSrc": "18523:123:14",
																"nodeType": "YulBlock",
																"src": "18523:123:14",
																"statements": [
																	{
																		"nativeSrc": "18537:28:14",
																		"nodeType": "YulAssignment",
																		"src": "18537:28:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "18550:4:14",
																					"nodeType": "YulIdentifier",
																					"src": "18550:4:14"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "18556:8:14",
																					"nodeType": "YulIdentifier",
																					"src": "18556:8:14"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "18546:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "18546:3:14"
																			},
																			"nativeSrc": "18546:19:14",
																			"nodeType": "YulFunctionCall",
																			"src": "18546:19:14"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "18537:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "18537:5:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "18596:22:14",
																			"nodeType": "YulBlock",
																			"src": "18596:22:14",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "18598:16:14",
																							"nodeType": "YulIdentifier",
																							"src": "18598:16:14"
																						},
																						"nativeSrc": "18598:18:14",
																						"nodeType": "YulFunctionCall",
																						"src": "18598:18:14"
																					},
																					"nativeSrc": "18598:18:14",
																					"nodeType": "YulExpressionStatement",
																					"src": "18598:18:14"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "18584:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "18584:5:14"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "18591:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "18591:3:14"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "18581:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "18581:2:14"
																			},
																			"nativeSrc": "18581:14:14",
																			"nodeType": "YulFunctionCall",
																			"src": "18581:14:14"
																		},
																		"nativeSrc": "18578:40:14",
																		"nodeType": "YulIf",
																		"src": "18578:40:14"
																	},
																	{
																		"nativeSrc": "18631:5:14",
																		"nodeType": "YulLeave",
																		"src": "18631:5:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "18426:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "18426:4:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18432:2:14",
																						"nodeType": "YulLiteral",
																						"src": "18432:2:14",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "18423:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "18423:2:14"
																				},
																				"nativeSrc": "18423:12:14",
																				"nodeType": "YulFunctionCall",
																				"src": "18423:12:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "18440:8:14",
																						"nodeType": "YulIdentifier",
																						"src": "18440:8:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18450:2:14",
																						"nodeType": "YulLiteral",
																						"src": "18450:2:14",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "18437:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "18437:2:14"
																				},
																				"nativeSrc": "18437:16:14",
																				"nodeType": "YulFunctionCall",
																				"src": "18437:16:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "18419:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18419:3:14"
																		},
																		"nativeSrc": "18419:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18419:35:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "18475:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "18475:4:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18481:3:14",
																						"nodeType": "YulLiteral",
																						"src": "18481:3:14",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "18472:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "18472:2:14"
																				},
																				"nativeSrc": "18472:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "18472:13:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "18490:8:14",
																						"nodeType": "YulIdentifier",
																						"src": "18490:8:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18500:2:14",
																						"nodeType": "YulLiteral",
																						"src": "18500:2:14",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "18487:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "18487:2:14"
																				},
																				"nativeSrc": "18487:16:14",
																				"nodeType": "YulFunctionCall",
																				"src": "18487:16:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "18468:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18468:3:14"
																		},
																		"nativeSrc": "18468:36:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18468:36:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "18403:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "18403:2:14"
																},
																"nativeSrc": "18403:111:14",
																"nodeType": "YulFunctionCall",
																"src": "18403:111:14"
															},
															"nativeSrc": "18400:246:14",
															"nodeType": "YulIf",
															"src": "18400:246:14"
														},
														{
															"nativeSrc": "18656:57:14",
															"nodeType": "YulAssignment",
															"src": "18656:57:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18690:1:14",
																		"nodeType": "YulLiteral",
																		"src": "18690:1:14",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "18693:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "18693:4:14"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "18699:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "18699:8:14"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "18709:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "18709:3:14"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "18671:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "18671:18:14"
																},
																"nativeSrc": "18671:42:14",
																"nodeType": "YulFunctionCall",
																"src": "18671:42:14"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "18656:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "18656:5:14"
																},
																{
																	"name": "base",
																	"nativeSrc": "18663:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "18663:4:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18752:22:14",
																"nodeType": "YulBlock",
																"src": "18752:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18754:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "18754:16:14"
																			},
																			"nativeSrc": "18754:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "18754:18:14"
																		},
																		"nativeSrc": "18754:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "18754:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "18729:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "18729:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "18740:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "18740:3:14"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "18745:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "18745:4:14"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "18736:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18736:3:14"
																		},
																		"nativeSrc": "18736:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18736:14:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18726:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "18726:2:14"
																},
																"nativeSrc": "18726:25:14",
																"nodeType": "YulFunctionCall",
																"src": "18726:25:14"
															},
															"nativeSrc": "18723:51:14",
															"nodeType": "YulIf",
															"src": "18723:51:14"
														},
														{
															"nativeSrc": "18783:25:14",
															"nodeType": "YulAssignment",
															"src": "18783:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "18796:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "18796:5:14"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "18803:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "18803:4:14"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "18792:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18792:3:14"
																},
																"nativeSrc": "18792:16:14",
																"nodeType": "YulFunctionCall",
																"src": "18792:16:14"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "18783:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "18783:5:14"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "17741:1073:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "17771:4:14",
														"nodeType": "YulTypedName",
														"src": "17771:4:14",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "17777:8:14",
														"nodeType": "YulTypedName",
														"src": "17777:8:14",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "17787:3:14",
														"nodeType": "YulTypedName",
														"src": "17787:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "17795:5:14",
														"nodeType": "YulTypedName",
														"src": "17795:5:14",
														"type": ""
													}
												],
												"src": "17741:1073:14"
											},
											{
												"body": {
													"nativeSrc": "18884:217:14",
													"nodeType": "YulBlock",
													"src": "18884:217:14",
													"statements": [
														{
															"nativeSrc": "18894:31:14",
															"nodeType": "YulAssignment",
															"src": "18894:31:14",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "18920:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "18920:4:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18902:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "18902:17:14"
																},
																"nativeSrc": "18902:23:14",
																"nodeType": "YulFunctionCall",
																"src": "18902:23:14"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "18894:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "18894:4:14"
																}
															]
														},
														{
															"nativeSrc": "18934:37:14",
															"nodeType": "YulAssignment",
															"src": "18934:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "18962:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "18962:8:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "18946:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "18946:15:14"
																},
																"nativeSrc": "18946:25:14",
																"nodeType": "YulFunctionCall",
																"src": "18946:25:14"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "18934:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "18934:8:14"
																}
															]
														},
														{
															"nativeSrc": "18981:113:14",
															"nodeType": "YulAssignment",
															"src": "18981:113:14",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "19011:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "19011:4:14"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "19017:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "19017:8:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19027:66:14",
																		"nodeType": "YulLiteral",
																		"src": "19027:66:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "18990:20:14",
																	"nodeType": "YulIdentifier",
																	"src": "18990:20:14"
																},
																"nativeSrc": "18990:104:14",
																"nodeType": "YulFunctionCall",
																"src": "18990:104:14"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "18981:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "18981:5:14"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "18820:281:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "18859:4:14",
														"nodeType": "YulTypedName",
														"src": "18859:4:14",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "18865:8:14",
														"nodeType": "YulTypedName",
														"src": "18865:8:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "18878:5:14",
														"nodeType": "YulTypedName",
														"src": "18878:5:14",
														"type": ""
													}
												],
												"src": "18820:281:14"
											},
											{
												"body": {
													"nativeSrc": "19233:206:14",
													"nodeType": "YulBlock",
													"src": "19233:206:14",
													"statements": [
														{
															"nativeSrc": "19243:26:14",
															"nodeType": "YulAssignment",
															"src": "19243:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19255:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "19255:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19266:2:14",
																		"nodeType": "YulLiteral",
																		"src": "19266:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19251:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19251:3:14"
																},
																"nativeSrc": "19251:18:14",
																"nodeType": "YulFunctionCall",
																"src": "19251:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19243:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "19243:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19323:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "19323:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19336:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "19336:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19347:1:14",
																				"nodeType": "YulLiteral",
																				"src": "19347:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19332:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19332:3:14"
																		},
																		"nativeSrc": "19332:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19332:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19279:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "19279:43:14"
																},
																"nativeSrc": "19279:71:14",
																"nodeType": "YulFunctionCall",
																"src": "19279:71:14"
															},
															"nativeSrc": "19279:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "19279:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19404:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "19404:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19417:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "19417:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19428:2:14",
																				"nodeType": "YulLiteral",
																				"src": "19428:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19413:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19413:3:14"
																		},
																		"nativeSrc": "19413:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19413:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "19360:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "19360:43:14"
																},
																"nativeSrc": "19360:72:14",
																"nodeType": "YulFunctionCall",
																"src": "19360:72:14"
															},
															"nativeSrc": "19360:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "19360:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "19107:332:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19197:9:14",
														"nodeType": "YulTypedName",
														"src": "19197:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19209:6:14",
														"nodeType": "YulTypedName",
														"src": "19209:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19217:6:14",
														"nodeType": "YulTypedName",
														"src": "19217:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19228:4:14",
														"nodeType": "YulTypedName",
														"src": "19228:4:14",
														"type": ""
													}
												],
												"src": "19107:332:14"
											},
											{
												"body": {
													"nativeSrc": "19543:124:14",
													"nodeType": "YulBlock",
													"src": "19543:124:14",
													"statements": [
														{
															"nativeSrc": "19553:26:14",
															"nodeType": "YulAssignment",
															"src": "19553:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19565:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "19565:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19576:2:14",
																		"nodeType": "YulLiteral",
																		"src": "19576:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19561:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19561:3:14"
																},
																"nativeSrc": "19561:18:14",
																"nodeType": "YulFunctionCall",
																"src": "19561:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19553:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "19553:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19633:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "19633:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19646:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "19646:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19657:1:14",
																				"nodeType": "YulLiteral",
																				"src": "19657:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19642:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19642:3:14"
																		},
																		"nativeSrc": "19642:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19642:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19589:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "19589:43:14"
																},
																"nativeSrc": "19589:71:14",
																"nodeType": "YulFunctionCall",
																"src": "19589:71:14"
															},
															"nativeSrc": "19589:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "19589:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "19445:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19515:9:14",
														"nodeType": "YulTypedName",
														"src": "19515:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19527:6:14",
														"nodeType": "YulTypedName",
														"src": "19527:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19538:4:14",
														"nodeType": "YulTypedName",
														"src": "19538:4:14",
														"type": ""
													}
												],
												"src": "19445:222:14"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_AggregatorV3Interface_$45_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_AggregatorV3Interface_$45_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_sub_t_uint8(x, y) -> diff {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xff) { panic_error_0x11() }\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1238": [
									{
										"length": 32,
										"start": 4034
									},
									{
										"length": 32,
										"start": 6120
									}
								],
								"1241": [
									{
										"length": 32,
										"start": 3153
									},
									{
										"length": 32,
										"start": 4915
									}
								],
								"1245": [
									{
										"length": 32,
										"start": 2199
									},
									{
										"length": 32,
										"start": 3998
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0xB5 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x513 JUMPI DUP1 PUSH4 0xE7D66D63 EQ PUSH2 0x53B JUMPI DUP1 PUSH4 0xEE3D6866 EQ PUSH2 0x565 JUMPI DUP1 PUSH4 0xF2157052 EQ PUSH2 0x58D JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x5B7 JUMPI DUP1 PUSH4 0xF4443D9A EQ PUSH2 0x5DF JUMPI PUSH2 0x185 JUMP JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0x92B9F8F5 EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0xA773A500 EQ PUSH2 0x483 JUMPI DUP1 PUSH4 0xB3D8BCDC EQ PUSH2 0x4AD JUMPI DUP1 PUSH4 0xD3C7C2C7 EQ PUSH2 0x4E9 JUMPI PUSH2 0x185 JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0x107 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0x6805D6AD EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x76E11286 EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x8009B7BD EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0x8C0FF5B7 EQ PUSH2 0x3CB JUMPI PUSH2 0x185 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x1E604EA3 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x2E3441A9 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x30C0B9EC EQ PUSH2 0x2CF JUMPI PUSH2 0x185 JUMP JUMPDEST CALLDATASIZE PUSH2 0x185 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE6509D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x3921C70300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x233F JUMP JUMPDEST PUSH2 0x61B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x2384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x23F7 JUMP JUMPDEST PUSH2 0x694 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x243A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x2486 JUMP JUMPDEST PUSH2 0x825 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x24C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x276 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x291 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x23F7 JUMP JUMPDEST PUSH2 0x841 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x2534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x254D JUMP JUMPDEST PUSH2 0x871 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2E3 PUSH2 0x893 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x243A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x304 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x31F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x254D JUMP JUMPDEST PUSH2 0x92F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x25B5 JUMP JUMPDEST PUSH2 0x9AA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x348 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x363 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35E SWAP2 SWAP1 PUSH2 0x25F3 JUMP JUMPDEST PUSH2 0xDB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x243A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x384 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x39F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39A SWAP2 SWAP1 PUSH2 0x25F3 JUMP JUMPDEST PUSH2 0xE33 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3B5 PUSH2 0xF9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C2 SWAP2 SWAP1 PUSH2 0x2534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3DF PUSH2 0xFC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0x243A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x400 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x41B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x416 SWAP2 SWAP1 PUSH2 0x254D JUMP JUMPDEST PUSH2 0xFE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x2384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x457 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x25F3 JUMP JUMPDEST PUSH2 0x1047 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x464 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x46D PUSH2 0x132B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x24C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x497 PUSH2 0x1331 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A4 SWAP2 SWAP1 PUSH2 0x243A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4CE SWAP2 SWAP1 PUSH2 0x23F7 JUMP JUMPDEST PUSH2 0x1355 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E0 SWAP2 SWAP1 PUSH2 0x243A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4FD PUSH2 0x136A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50A SWAP2 SWAP1 PUSH2 0x26E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x539 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x534 SWAP2 SWAP1 PUSH2 0x254D JUMP JUMPDEST PUSH2 0x13F5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x546 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x54F PUSH2 0x1417 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55C SWAP2 SWAP1 PUSH2 0x243A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x570 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x58B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x586 SWAP2 SWAP1 PUSH2 0x23F7 JUMP JUMPDEST PUSH2 0x141D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x598 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x5A1 PUSH2 0x1781 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5AE SWAP2 SWAP1 PUSH2 0x24C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x5DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D8 SWAP2 SWAP1 PUSH2 0x25B5 JUMP JUMPDEST PUSH2 0x17A5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x605 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x600 SWAP2 SWAP1 PUSH2 0x23F7 JUMP JUMPDEST PUSH2 0x1BB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x612 SWAP2 SWAP1 PUSH2 0x243A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x68D JUMPI POP PUSH2 0x68C DUP3 PUSH2 0x1BC5 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x791 JUMPI PUSH0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x6BC JUMPI PUSH2 0x6BB PUSH2 0x2708 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x782 JUMPI PUSH2 0x774 DUP3 DUP3 PUSH2 0x1C2E JUMP JUMPDEST DUP5 PUSH2 0x77F SWAP2 SWAP1 PUSH2 0x2762 JUMP JUMPDEST SWAP4 POP JUMPDEST POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x69A JUMP JUMPDEST POP PUSH2 0x813 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1E0C JUMP JUMPDEST DUP2 PUSH2 0x81E SWAP2 SWAP1 PUSH2 0x2762 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x87A DUP3 PUSH2 0x825 JUMP JUMPDEST PUSH2 0x883 DUP2 PUSH2 0x1E3B JUMP JUMPDEST PUSH2 0x88D DUP4 DUP4 PUSH2 0x1E4F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8FE JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x922 SWAP2 SWAP1 PUSH2 0x281B JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x937 PUSH2 0x1F38 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x99B JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9A5 DUP3 DUP3 PUSH2 0x1F3F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x9B2 PUSH2 0x2028 JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xABD JUMPI PUSH0 CALLVALUE SUB PUSH2 0xA1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8615019900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA28 CALLVALUE PUSH2 0x1E0C JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xAB1 SWAP2 SWAP1 PUSH2 0x2762 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xC3E JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xB3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x3DD1B30500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 SUB PUSH2 0xB76 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8615019900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBA3 CALLER ADDRESS DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2077 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xBAD DUP4 DUP4 PUSH2 0x1C2E JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC36 SWAP2 SWAP1 PUSH2 0x2762 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 DUP2 PUSH1 0x8 SLOAD PUSH2 0xC4D SWAP2 SWAP1 PUSH2 0x2762 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 DUP2 GT ISZERO PUSH2 0xCA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x448F3CA800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xCFD SWAP1 PUSH2 0x2892 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x57BAD7E3C9EFECF6E1F60BBD846B999E9DA4A409224287A8DF09779F2330135E PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD8A JUMPI DUP6 PUSH2 0xD8C JUMP JUMPDEST CALLVALUE JUMPDEST DUP6 PUSH1 0x40 MLOAD PUSH2 0xD9B SWAP3 SWAP2 SWAP1 PUSH2 0x28D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0xDAD PUSH2 0x20F9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2D95A8186DB49DA8BD2356C70CF02038F7DE0D6ED39F6766FE2D93D5E7785616 PUSH2 0xE5D DUP2 PUSH2 0x1E3B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9589A27D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD2D8394CF7549A5DDBC2BA3DD7B2DE8D53C891472D1F2907008ED6A10045FDAE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2D95A8186DB49DA8BD2356C70CF02038F7DE0D6ED39F6766FE2D93D5E7785616 PUSH2 0x1071 DUP2 PUSH2 0x1E3B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3DD1B30500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x121D JUMPI PUSH1 0x6 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA3145306A87BAEBA6BB1A8B5C8D3744F840A81CB436B3509F64FC978600CDFB PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1326 JUMPI DUP2 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD2D8394CF7549A5DDBC2BA3DD7B2DE8D53C891472D1F2907008ED6A10045FDAE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x13EB JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x13A2 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x13FE DUP3 PUSH2 0x825 JUMP JUMPDEST PUSH2 0x1407 DUP2 PUSH2 0x1E3B JUMP JUMPDEST PUSH2 0x1411 DUP4 DUP4 PUSH2 0x1F3F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x2D95A8186DB49DA8BD2356C70CF02038F7DE0D6ED39F6766FE2D93D5E7785616 PUSH2 0x1447 DUP2 PUSH2 0x1E3B JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x14C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3DD1B30500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1697 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1558 JUMPI PUSH2 0x1557 PUSH2 0x2708 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x168A JUMPI PUSH1 0x6 PUSH1 0x1 PUSH1 0x6 DUP1 SLOAD SWAP1 POP PUSH2 0x15AF SWAP2 SWAP1 PUSH2 0x2900 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x15C0 JUMPI PUSH2 0x15BF PUSH2 0x2708 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x15FC JUMPI PUSH2 0x15FB PUSH2 0x2708 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 DUP1 SLOAD DUP1 PUSH2 0x1653 JUMPI PUSH2 0x1652 PUSH2 0x2933 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE PUSH2 0x1697 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1520 JUMP JUMPDEST POP PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF940D38196F30E7FF3EB255DD42DB8D99A75C1AC112199D4FC314CE6460BFC0C PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFD58461C4683DF397133C7E91FE2AA71559919B405F9E09C9C3AF7E875F54E3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH32 0x2D95A8186DB49DA8BD2356C70CF02038F7DE0D6ED39F6766FE2D93D5E7785616 DUP2 JUMP JUMPDEST PUSH2 0x17AD PUSH2 0x2028 JUMP JUMPDEST PUSH0 DUP2 SUB PUSH2 0x17E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP2 GT ISZERO PUSH2 0x1840 JUMPI PUSH1 0x40 MLOAD PUSH32 0x73A7C91000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x18F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1939 JUMPI PUSH2 0x1934 DUP5 DUP5 PUSH2 0x1C2E JUMP JUMPDEST PUSH2 0x1943 JUMP JUMPDEST PUSH2 0x1942 DUP4 PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST SWAP1 POP DUP3 DUP3 PUSH2 0x1951 SWAP2 SWAP1 PUSH2 0x2900 JUMP JUMPDEST PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x19DE SWAP2 SWAP1 PUSH2 0x2900 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1A32 SWAP1 PUSH2 0x2892 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B0F JUMPI PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1A8F SWAP1 PUSH2 0x298D JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1AC9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1ACE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1B09 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0x1B3A CALLER DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2102 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDE1D532173C6DE1E3937C7AF1CB92745C738980729F53AC451A725F929F3B798 DUP6 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1B9A SWAP3 SWAP2 SWAP1 PUSH2 0x28D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0x1BAC PUSH2 0x20F9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9589A27D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D3E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D62 SWAP2 SWAP1 PUSH2 0x281B JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DB2 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DD6 SWAP2 SWAP1 PUSH2 0x29D7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1DE3 DUP7 DUP4 PUSH2 0x2181 JUMP JUMPDEST SWAP1 POP PUSH4 0x5F5E100 DUP4 DUP3 PUSH2 0x1DF6 SWAP2 SWAP1 PUSH2 0x2A02 JUMP JUMPDEST PUSH2 0x1E00 SWAP2 SWAP1 PUSH2 0x2A70 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x1E16 PUSH2 0x893 JUMP JUMPDEST SWAP1 POP PUSH4 0x5F5E100 DUP2 DUP5 PUSH2 0x1E29 SWAP2 SWAP1 PUSH2 0x2A02 JUMP JUMPDEST PUSH2 0x1E33 SWAP2 SWAP1 PUSH2 0x2A70 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E4C DUP2 PUSH2 0x1E47 PUSH2 0x1F38 JUMP JUMPDEST PUSH2 0x21FA JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1E5A DUP4 DUP4 PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0x1F2E JUMPI PUSH1 0x1 PUSH0 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1ECB PUSH2 0x1F38 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1F32 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x1F4A DUP4 DUP4 PUSH2 0xFE4 JUMP JUMPDEST ISZERO PUSH2 0x201E JUMPI PUSH0 PUSH0 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1FBB PUSH2 0x1F38 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x2022 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x206D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2064 SWAP1 PUSH2 0x2AFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x20F3 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x20AC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x224B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x217C DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2135 SWAP3 SWAP2 SWAP1 PUSH2 0x2B5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x224B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 DUP3 PUSH1 0xFF AND GT ISZERO PUSH2 0x21B9 JUMPI PUSH1 0x6 DUP3 PUSH2 0x219B SWAP2 SWAP1 PUSH2 0x2B83 JUMP JUMPDEST PUSH1 0xA PUSH2 0x21A7 SWAP2 SWAP1 PUSH2 0x2CE6 JUMP JUMPDEST DUP4 PUSH2 0x21B2 SWAP2 SWAP1 PUSH2 0x2A70 JUMP JUMPDEST SWAP1 POP PUSH2 0x21F4 JUMP JUMPDEST PUSH1 0x6 DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0x21F0 JUMPI DUP2 PUSH1 0x6 PUSH2 0x21D2 SWAP2 SWAP1 PUSH2 0x2B83 JUMP JUMPDEST PUSH1 0xA PUSH2 0x21DE SWAP2 SWAP1 PUSH2 0x2CE6 JUMP JUMPDEST DUP4 PUSH2 0x21E9 SWAP2 SWAP1 PUSH2 0x2A02 JUMP JUMPDEST SWAP1 POP PUSH2 0x21F4 JUMP JUMPDEST DUP3 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2204 DUP3 DUP3 PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0x2247 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x223E SWAP3 SWAP2 SWAP1 PUSH2 0x2D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x226A JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x2283 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x229E JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x22E0 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22D7 SWAP2 SWAP1 PUSH2 0x2D57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x231E DUP2 PUSH2 0x22EA JUMP JUMPDEST DUP2 EQ PUSH2 0x2328 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2339 DUP2 PUSH2 0x2315 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2354 JUMPI PUSH2 0x2353 PUSH2 0x22E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2361 DUP5 DUP3 DUP6 ADD PUSH2 0x232B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x237E DUP2 PUSH2 0x236A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2397 PUSH0 DUP4 ADD DUP5 PUSH2 0x2375 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23C6 DUP3 PUSH2 0x239D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23D6 DUP2 PUSH2 0x23BC JUMP JUMPDEST DUP2 EQ PUSH2 0x23E0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23F1 DUP2 PUSH2 0x23CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x240C JUMPI PUSH2 0x240B PUSH2 0x22E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2419 DUP5 DUP3 DUP6 ADD PUSH2 0x23E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2434 DUP2 PUSH2 0x2422 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x244D PUSH0 DUP4 ADD DUP5 PUSH2 0x242B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2465 DUP2 PUSH2 0x2453 JUMP JUMPDEST DUP2 EQ PUSH2 0x246F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2480 DUP2 PUSH2 0x245C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x249B JUMPI PUSH2 0x249A PUSH2 0x22E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24A8 DUP5 DUP3 DUP6 ADD PUSH2 0x2472 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x24BA DUP2 PUSH2 0x2453 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24D3 PUSH0 DUP4 ADD DUP5 PUSH2 0x24B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24FC PUSH2 0x24F7 PUSH2 0x24F2 DUP5 PUSH2 0x239D JUMP JUMPDEST PUSH2 0x24D9 JUMP JUMPDEST PUSH2 0x239D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x250D DUP3 PUSH2 0x24E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x251E DUP3 PUSH2 0x2503 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x252E DUP2 PUSH2 0x2514 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2547 PUSH0 DUP4 ADD DUP5 PUSH2 0x2525 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2563 JUMPI PUSH2 0x2562 PUSH2 0x22E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2570 DUP6 DUP3 DUP7 ADD PUSH2 0x2472 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2581 DUP6 DUP3 DUP7 ADD PUSH2 0x23E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2594 DUP2 PUSH2 0x2422 JUMP JUMPDEST DUP2 EQ PUSH2 0x259E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25AF DUP2 PUSH2 0x258B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25CB JUMPI PUSH2 0x25CA PUSH2 0x22E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25D8 DUP6 DUP3 DUP7 ADD PUSH2 0x23E3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x25E9 DUP6 DUP3 DUP7 ADD PUSH2 0x25A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2609 JUMPI PUSH2 0x2608 PUSH2 0x22E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2616 DUP6 DUP3 DUP7 ADD PUSH2 0x23E3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2627 DUP6 DUP3 DUP7 ADD PUSH2 0x23E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2663 DUP2 PUSH2 0x23BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2674 DUP4 DUP4 PUSH2 0x265A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2696 DUP3 PUSH2 0x2631 JUMP JUMPDEST PUSH2 0x26A0 DUP2 DUP6 PUSH2 0x263B JUMP JUMPDEST SWAP4 POP PUSH2 0x26AB DUP4 PUSH2 0x264B JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x26DB JUMPI DUP2 MLOAD PUSH2 0x26C2 DUP9 DUP3 PUSH2 0x2669 JUMP JUMPDEST SWAP8 POP PUSH2 0x26CD DUP4 PUSH2 0x2680 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x26AE JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2700 DUP2 DUP5 PUSH2 0x268C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x276C DUP3 PUSH2 0x2422 JUMP JUMPDEST SWAP2 POP PUSH2 0x2777 DUP4 PUSH2 0x2422 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x278F JUMPI PUSH2 0x278E PUSH2 0x2735 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27B3 DUP2 PUSH2 0x2795 JUMP JUMPDEST DUP2 EQ PUSH2 0x27BD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x27CE DUP2 PUSH2 0x27AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27E6 DUP2 PUSH2 0x27D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x27F0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2801 DUP2 PUSH2 0x27DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2815 DUP2 PUSH2 0x258B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2834 JUMPI PUSH2 0x2833 PUSH2 0x22E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2841 DUP9 DUP3 DUP10 ADD PUSH2 0x27C0 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2852 DUP9 DUP3 DUP10 ADD PUSH2 0x27F3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2863 DUP9 DUP3 DUP10 ADD PUSH2 0x2807 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2874 DUP9 DUP3 DUP10 ADD PUSH2 0x2807 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2885 DUP9 DUP3 DUP10 ADD PUSH2 0x27C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH2 0x289C DUP3 PUSH2 0x2422 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x28CE JUMPI PUSH2 0x28CD PUSH2 0x2735 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x28EC PUSH0 DUP4 ADD DUP6 PUSH2 0x242B JUMP JUMPDEST PUSH2 0x28F9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x242B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x290A DUP3 PUSH2 0x2422 JUMP JUMPDEST SWAP2 POP PUSH2 0x2915 DUP4 PUSH2 0x2422 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x292D JUMPI PUSH2 0x292C PUSH2 0x2735 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x2978 PUSH0 DUP4 PUSH2 0x2960 JUMP JUMPDEST SWAP2 POP PUSH2 0x2983 DUP3 PUSH2 0x296A JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2997 DUP3 PUSH2 0x296D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29B6 DUP2 PUSH2 0x29A1 JUMP JUMPDEST DUP2 EQ PUSH2 0x29C0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x29D1 DUP2 PUSH2 0x29AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29EC JUMPI PUSH2 0x29EB PUSH2 0x22E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29F9 DUP5 DUP3 DUP6 ADD PUSH2 0x29C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2A0C DUP3 PUSH2 0x2422 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A17 DUP4 PUSH2 0x2422 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2A25 DUP2 PUSH2 0x2422 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2A3C JUMPI PUSH2 0x2A3B PUSH2 0x2735 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2A7A DUP3 PUSH2 0x2422 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A85 DUP4 PUSH2 0x2422 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2A95 JUMPI PUSH2 0x2A94 PUSH2 0x2A43 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2AE4 PUSH1 0x1F DUP4 PUSH2 0x2AA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AEF DUP3 PUSH2 0x2AB0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B11 DUP2 PUSH2 0x2AD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B21 DUP2 PUSH2 0x23BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2B3A PUSH0 DUP4 ADD DUP7 PUSH2 0x2B18 JUMP JUMPDEST PUSH2 0x2B47 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2B18 JUMP JUMPDEST PUSH2 0x2B54 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x242B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2B6F PUSH0 DUP4 ADD DUP6 PUSH2 0x2B18 JUMP JUMPDEST PUSH2 0x2B7C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x242B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2B8D DUP3 PUSH2 0x29A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B98 DUP4 PUSH2 0x29A1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0x2BB1 JUMPI PUSH2 0x2BB0 PUSH2 0x2735 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x2C0C JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x2BE8 JUMPI PUSH2 0x2BE7 PUSH2 0x2735 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x2BF7 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x2C05 DUP6 PUSH2 0x2BB7 JUMP JUMPDEST SWAP5 POP PUSH2 0x2BCC JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2C24 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x2CDF JUMP JUMPDEST DUP2 PUSH2 0x2C31 JUMPI PUSH0 SWAP1 POP PUSH2 0x2CDF JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2C47 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2C51 JUMPI PUSH2 0x2C80 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2CDF JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2C63 JUMPI PUSH2 0x2C62 PUSH2 0x2735 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x2C7A JUMPI PUSH2 0x2C79 PUSH2 0x2735 JUMP JUMPDEST JUMPDEST POP PUSH2 0x2CDF JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2CB5 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x2CB0 JUMPI PUSH2 0x2CAF PUSH2 0x2735 JUMP JUMPDEST JUMPDEST PUSH2 0x2CDF JUMP JUMPDEST PUSH2 0x2CC2 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x2BC3 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x2CD9 JUMPI PUSH2 0x2CD8 PUSH2 0x2735 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2CF0 DUP3 PUSH2 0x2422 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CFB DUP4 PUSH2 0x29A1 JUMP JUMPDEST SWAP3 POP PUSH2 0x2D28 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x2C15 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2D43 PUSH0 DUP4 ADD DUP6 PUSH2 0x2B18 JUMP JUMPDEST PUSH2 0x2D50 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x24B1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D6A PUSH0 DUP4 ADD DUP5 PUSH2 0x2B18 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR JUMPDEST 0xC1 EXTCODEHASH CALLDATACOPY GAS 0xDD 0x1F ADDMOD SAR BLOBHASH PC 0xD6 PUSH22 0xA25250B43993E3AB57652CEE2F38F00FD8264736F6C PUSH4 0x4300081E STOP CALLER ",
							"sourceMap": "814:13783:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14476:26;;;;;;;;;;;;;;814:13783;14564:22;;;;;;;;;;;;;;2541:202:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12489:426:13;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3786:120:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:66:13;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4202:136:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12200:203:13;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5304:245:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8653:1009:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11393:136;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7966:303;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1459:49;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1266:38;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:136:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6658:498:13;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2196:49:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1364:45:13;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2017:50;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11541:111;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4618:138:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2369:31:13;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7351:607;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;995:74;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10162:929;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1903:47;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2541:202:1;2626:4;2664:32;2649:47;;;:11;:47;;;;:87;;;;2700:36;2724:11;2700:23;:36::i;:::-;2649:87;2642:94;;2541:202;;;:::o;12489:426:13:-;12557:16;12590:9;12602:1;12590:13;;12585:250;12609:15;:22;;;;12605:1;:26;12585:250;;;12653:13;12669:15;12685:1;12669:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;12653:34;;12702:15;12720:12;:18;12733:4;12720:18;;;;;;;;;;;;;;;:25;12739:5;12720:25;;;;;;;;;;;;;;;;12702:43;;12774:1;12764:7;:11;12760:63;;;12789:34;12808:5;12815:7;12789:18;:34::i;:::-;12777:46;;;;;:::i;:::-;;;12760:63;12638:197;;12633:3;;;;;;;12585:250;;;;12859:48;12876:12;:18;12889:4;12876:18;;;;;;;;;;;;;;;:30;12903:1;12876:30;;;;;;;;;;;;;;;;12859:16;:48::i;:::-;12847:60;;;;;:::i;:::-;;;12489:426;;;:::o;3786:120:1:-;3851:7;3877:6;:12;3884:4;3877:12;;;;;;;;;;;:22;;;3870:29;;3786:120;;;:::o;1638:66:13:-;;;;;;;;;;;;;;;;;;;;;;:::o;4202:136:1:-;4276:18;4289:4;4276:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4306:25:::1;4317:4;4323:7;4306:10;:25::i;:::-;;4202:136:::0;;;:::o;12200:203:13:-;12250:7;12273:12;12295:10;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12270:53;;;;;;12389:5;12374:21;;;12200:203;:::o;5304:245:1:-;5419:12;:10;:12::i;:::-;5397:34;;:18;:34;;;5393:102;;5454:30;;;;;;;;;;;;;;5393:102;5505:37;5517:4;5523:18;5505:11;:37::i;:::-;;5304:245;;:::o;8653:1009:13:-;2261:21:6;:19;:21::i;:::-;8742:17:13::1;8791:1;8774:19;;:5;:19;;::::0;8770:560:::1;;8826:1;8813:9;:14:::0;8809:50:::1;;8836:23;;;;;;;;;;;;;;8809:50;8886:27;8903:9;8886:16;:27::i;:::-;8874:39;;8968:9;8928:12;:24;8941:10;8928:24;;;;;;;;;;;;;;;:36;8961:1;8928:36;;;;;;;;;;;;;;;;:49;;;;;;;:::i;:::-;;;;;;;;8770:560;;;9012:16;:23;9029:5;9012:23;;;;;;;;;;;;;;;;;;;;;;;;;9007:56;;9044:19;;;;;;;;;;;;;;9007:56;9091:1;9081:6;:11:::0;9077:47:::1;;9101:23;;;;;;;;;;;;;;9077:47;9138:65;9169:10;9189:4;9196:6;9145:5;9138:30;;;;:65;;;;;;:::i;:::-;9229:33;9248:5;9255:6;9229:18;:33::i;:::-;9217:45;;9311:6;9276:12;:24;9289:10;9276:24;;;;;;;;;;;;;;;:31;9301:5;9276:31;;;;;;;;;;;;;;;;:41;;;;;;;:::i;:::-;;;;;;;;8770:560;9350:19;9391:9;9372:16;;:28;;;;:::i;:::-;9350:50;;9429:20;9415:11;:34;9411:64;;;9458:17;;;;;;;;;;;;;;9411:64;9505:11;9486:16;:30;;;;9527:12;:24;9540:10;9527:24;;;;;;;;;;;;;;;;:26;;;;;;;;;:::i;:::-;;;;;;9595:5;9571:83;;9583:10;9571:83;;;9619:1;9602:19;;:5;:19;;;:40;;9636:6;9602:40;;;9624:9;9602:40;9644:9;9571:83;;;;;;;:::i;:::-;;;;;;;;8731:931;;2303:20:6::0;:18;:20::i;:::-;8653:1009:13;;:::o;11393:136::-;11469:7;11496:12;:18;11509:4;11496:18;;;;;;;;;;;;;;;:25;11515:5;11496:25;;;;;;;;;;;;;;;;11489:32;;11393:136;;;;:::o;7966:303::-;1039:30;2473:16:1;2484:4;2473:10;:16::i;:::-;8086:1:13::1;8069:19;;:5;:19;;::::0;8065:47:::1;;8097:15;;;;;;;;;;;;;;8065:47;8215:4;8166:17;:24;8184:5;8166:24;;;;;;;;;;;;;;;;:54;;;;;;;;;;;;;;;;;;8256:4;8236:25;;8249:5;8236:25;;;;;;;;;;;;7966:303:::0;;;:::o;1459:49::-;;;:::o;1266:38::-;;;:::o;2830:136:1:-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;6658:498:13:-;1039:30;2473:16:1;2484:4;2473:10;:16::i;:::-;6778:1:13::1;6761:19;;:5;:19;;::::0;6757:51:::1;;6789:19;;;;;;;;;;;;;;6757:51;6824:16;:23;6841:5;6824:23;;;;;;;;;;;;;;;;;;;;;;;;;6819:170;;6864:15;6885:5;6864:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6932:4;6906:16;:23;6923:5;6906:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;6971:5;6956:21;;;;;;;;;;;;6819:170;7019:1;7003:18;;:4;:18;;;6999:150;;7087:4;7038:17;:24;7056:5;7038:24;;;;;;;;;;;;;;;;:54;;;;;;;;;;;;;;;;;;7132:4;7112:25;;7125:5;7112:25;;;;;;;;;;;;6999:150;6658:498:::0;;;:::o;2196:49:1:-;2241:4;2196:49;;;:::o;1364:45:13:-;;;:::o;2017:50::-;;;;;;;;;;;;;;;;;:::o;11541:111::-;11594:16;11629:15;11622:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11541:111;:::o;4618:138:1:-;4693:18;4706:4;4693:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4723:26:::1;4735:4;4741:7;4723:11;:26::i;:::-;;4618:138:::0;;;:::o;2369:31:13:-;;;;:::o;7351:607::-;1039:30;2473:16:1;2484:4;2473:10;:16::i;:::-;7443::13::1;:23;7460:5;7443:23;;;;;;;;;;;;;;;;;;;;;;;;;7438:56;;7475:19;;;;;;;;;;;;;;7438:56;7531:5;7505:16;:23;7522:5;7505:23;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;7561:9;7573:1;7561:13;;7556:275;7580:15;:22;;;;7576:1;:26;7556:275;;;7650:5;7628:27;;:15;7644:1;7628:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:27;;::::0;7624:196:::1;;7697:15;7738:1;7713:15;:22;;;;:26;;;;:::i;:::-;7697:43;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7676:15;7692:1;7676:18;;;;;;;;:::i;:::-;;;;;;;;;;:64;;;;;;;;;;;;;;;;;;7759:15;:21;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;7799:5;;7624:196;7604:3;;;;;;;7556:275;;;;7848:17;:24;7866:5;7848:24;;;;;;;;;;;;;;;;7841:31;;;;;;;;;;;7905:5;7888:23;;;;;;;;;;;;7944:5;7927:23;;;;;;;;;;;;7351:607:::0;;:::o;995:74::-;1039:30;995:74;:::o;10162:929::-;2261:21:6;:19;:21::i;:::-;10267:1:13::1;10257:6;:11:::0;10254:38:::1;;10277:15;;;;;;;;;;;;;;10254:38;10315:13;10306:6;:22;10303:57;;;10337:23;;;;;;;;;;;;;;10303:57;10381:15;10399:12;:24;10412:10;10399:24;;;;;;;;;;;;;;;:31;10424:5;10399:31;;;;;;;;;;;;;;;;10381:49;;10455:6;10445:7;:16;10441:50;;;10470:21;;;;;;;;;;;;;;10441:50;10512:17;10549:1;10532:19;;:5;:19;;;:82;;10581:33;10600:5;10607:6;10581:18;:33::i;:::-;10532:82;;;10554:24;10571:6;10554:16;:24::i;:::-;10532:82;10512:102;;10671:6;10661:7;:16;;;;:::i;:::-;10627:12;:24;10640:10;10627:24;;;;;;;;;;;;;;;:31;10652:5;10627:31;;;;;;;;;;;;;;;:50;;;;10708:9;10688:16;;:29;;;;;;;:::i;:::-;;;;;;;;10728:15;:27;10744:10;10728:27;;;;;;;;;;;;;;;;:29;;;;;;;;;:::i;:::-;;;;;;10799:1;10782:19;;:5;:19;;::::0;10778:236:::1;;10819:12;10837:10;:15;;10860:6;10837:34;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10818:53;;;10891:7;10886:37;;10907:16;;;;;;;;;;;;;;10886:37;10803:132;10778:236;;;10956:46;10983:10;10995:6;10963:5;10956:26;;;;:46;;;;;:::i;:::-;10778:236;11058:5;11031:52;;11046:10;11031:52;;;11065:6;11073:9;11031:52;;;;;;;:::i;:::-;;;;;;;;10233:858;;2303:20:6::0;:18;:20::i;:::-;10162:929:13;;:::o;1903:47::-;;;;;;;;;;;;;;;;;:::o;730:146:11:-;806:4;844:25;829:40;;;:11;:40;;;;822:47;;730:146;;;:::o;13240:474:13:-;13322:7;13342:26;13371:17;:24;13389:5;13371:24;;;;;;;;;;;;;;;;;;;;;;;;;13342:53;;13435:1;13410:27;;13418:4;13410:27;;;13406:55;;13446:15;;;;;;;;;;;;;;13406:55;13475:12;13497:4;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13472:47;;;;;;13530:14;13562:5;13547:30;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13530:49;;13590:18;13611:42;13636:6;13644:8;13611:24;:42::i;:::-;13590:63;;13703:3;13693:5;13672:10;:27;;;;:::i;:::-;13671:35;;;;:::i;:::-;13664:42;;;;;;13240:474;;;;:::o;13030:202::-;13095:7;13115:13;13131:19;:17;:19::i;:::-;13115:35;;13202:3;13193:5;13184:6;:14;;;;:::i;:::-;13183:22;;;;:::i;:::-;13176:29;;;13030:202;;;:::o;3175:103:1:-;3241:30;3252:4;3258:12;:10;:12::i;:::-;3241:10;:30::i;:::-;3175:103;:::o;6155:316::-;6232:4;6253:22;6261:4;6267:7;6253;:22::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;:12::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;656:96:10:-;709:7;735:10;728:17;;656:96;:::o;6708:317:1:-;6786:4;6806:22;6814:4;6820:7;6806;:22::i;:::-;6802:217;;;6876:5;6844:6;:12;6851:4;6844:12;;;;;;;;;;;:20;;:29;6865:7;6844:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6927:12;:10;:12::i;:::-;6900:40;;6918:7;6900:40;;6912:4;6900:40;;;;;;;;;;6961:4;6954:11;;;;6802:217;7003:5;6996:12;;6708:317;;;;;:::o;2336:287:6:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;1618:188:9:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;2629:209:6:-;1716:1;2809:7;:22;;;;2629:209::o;1219:160:9:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;13947:358:13:-;14041:7;14080:1;14064:13;:17;;;14060:238;;;14138:1;14122:13;:17;;;;:::i;:::-;14115:2;:25;;;;:::i;:::-;14105:6;:36;;;;:::i;:::-;14098:43;;;;14060:238;14179:1;14163:13;:17;;;14159:139;;;14225:13;14221:1;:17;;;;:::i;:::-;14214:2;:25;;;;:::i;:::-;14204:6;:36;;;;:::i;:::-;14197:43;;;;14159:139;14280:6;14273:13;;13947:358;;;;;:::o;3408:197:1:-;3496:22;3504:4;3510:7;3496;:22::i;:::-;3491:108;;3574:7;3583:4;3541:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3491:108;3408:197;;:::o;8370:720:9:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;88:117:14:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:96::-;1687:7;1716:24;1734:5;1716:24;:::i;:::-;1705:35;;1650:96;;;:::o;1752:122::-;1825:24;1843:5;1825:24;:::i;:::-;1818:5;1815:35;1805:63;;1864:1;1861;1854:12;1805:63;1752:122;:::o;1880:139::-;1926:5;1964:6;1951:20;1942:29;;1980:33;2007:5;1980:33;:::i;:::-;1880:139;;;;:::o;2025:329::-;2084:6;2133:2;2121:9;2112:7;2108:23;2104:32;2101:119;;;2139:79;;:::i;:::-;2101:119;2259:1;2284:53;2329:7;2320:6;2309:9;2305:22;2284:53;:::i;:::-;2274:63;;2230:117;2025:329;;;;:::o;2360:77::-;2397:7;2426:5;2415:16;;2360:77;;;:::o;2443:118::-;2530:24;2548:5;2530:24;:::i;:::-;2525:3;2518:37;2443:118;;:::o;2567:222::-;2660:4;2698:2;2687:9;2683:18;2675:26;;2711:71;2779:1;2768:9;2764:17;2755:6;2711:71;:::i;:::-;2567:222;;;;:::o;2795:77::-;2832:7;2861:5;2850:16;;2795:77;;;:::o;2878:122::-;2951:24;2969:5;2951:24;:::i;:::-;2944:5;2941:35;2931:63;;2990:1;2987;2980:12;2931:63;2878:122;:::o;3006:139::-;3052:5;3090:6;3077:20;3068:29;;3106:33;3133:5;3106:33;:::i;:::-;3006:139;;;;:::o;3151:329::-;3210:6;3259:2;3247:9;3238:7;3234:23;3230:32;3227:119;;;3265:79;;:::i;:::-;3227:119;3385:1;3410:53;3455:7;3446:6;3435:9;3431:22;3410:53;:::i;:::-;3400:63;;3356:117;3151:329;;;;:::o;3486:118::-;3573:24;3591:5;3573:24;:::i;:::-;3568:3;3561:37;3486:118;;:::o;3610:222::-;3703:4;3741:2;3730:9;3726:18;3718:26;;3754:71;3822:1;3811:9;3807:17;3798:6;3754:71;:::i;:::-;3610:222;;;;:::o;3838:60::-;3866:3;3887:5;3880:12;;3838:60;;;:::o;3904:142::-;3954:9;3987:53;4005:34;4014:24;4032:5;4014:24;:::i;:::-;4005:34;:::i;:::-;3987:53;:::i;:::-;3974:66;;3904:142;;;:::o;4052:126::-;4102:9;4135:37;4166:5;4135:37;:::i;:::-;4122:50;;4052:126;;;:::o;4184:154::-;4262:9;4295:37;4326:5;4295:37;:::i;:::-;4282:50;;4184:154;;;:::o;4344:187::-;4459:65;4518:5;4459:65;:::i;:::-;4454:3;4447:78;4344:187;;:::o;4537:278::-;4658:4;4696:2;4685:9;4681:18;4673:26;;4709:99;4805:1;4794:9;4790:17;4781:6;4709:99;:::i;:::-;4537:278;;;;:::o;4821:474::-;4889:6;4897;4946:2;4934:9;4925:7;4921:23;4917:32;4914:119;;;4952:79;;:::i;:::-;4914:119;5072:1;5097:53;5142:7;5133:6;5122:9;5118:22;5097:53;:::i;:::-;5087:63;;5043:117;5199:2;5225:53;5270:7;5261:6;5250:9;5246:22;5225:53;:::i;:::-;5215:63;;5170:118;4821:474;;;;;:::o;5301:122::-;5374:24;5392:5;5374:24;:::i;:::-;5367:5;5364:35;5354:63;;5413:1;5410;5403:12;5354:63;5301:122;:::o;5429:139::-;5475:5;5513:6;5500:20;5491:29;;5529:33;5556:5;5529:33;:::i;:::-;5429:139;;;;:::o;5574:474::-;5642:6;5650;5699:2;5687:9;5678:7;5674:23;5670:32;5667:119;;;5705:79;;:::i;:::-;5667:119;5825:1;5850:53;5895:7;5886:6;5875:9;5871:22;5850:53;:::i;:::-;5840:63;;5796:117;5952:2;5978:53;6023:7;6014:6;6003:9;5999:22;5978:53;:::i;:::-;5968:63;;5923:118;5574:474;;;;;:::o;6054:::-;6122:6;6130;6179:2;6167:9;6158:7;6154:23;6150:32;6147:119;;;6185:79;;:::i;:::-;6147:119;6305:1;6330:53;6375:7;6366:6;6355:9;6351:22;6330:53;:::i;:::-;6320:63;;6276:117;6432:2;6458:53;6503:7;6494:6;6483:9;6479:22;6458:53;:::i;:::-;6448:63;;6403:118;6054:474;;;;;:::o;6534:114::-;6601:6;6635:5;6629:12;6619:22;;6534:114;;;:::o;6654:184::-;6753:11;6787:6;6782:3;6775:19;6827:4;6822:3;6818:14;6803:29;;6654:184;;;;:::o;6844:132::-;6911:4;6934:3;6926:11;;6964:4;6959:3;6955:14;6947:22;;6844:132;;;:::o;6982:108::-;7059:24;7077:5;7059:24;:::i;:::-;7054:3;7047:37;6982:108;;:::o;7096:179::-;7165:10;7186:46;7228:3;7220:6;7186:46;:::i;:::-;7264:4;7259:3;7255:14;7241:28;;7096:179;;;;:::o;7281:113::-;7351:4;7383;7378:3;7374:14;7366:22;;7281:113;;;:::o;7430:732::-;7549:3;7578:54;7626:5;7578:54;:::i;:::-;7648:86;7727:6;7722:3;7648:86;:::i;:::-;7641:93;;7758:56;7808:5;7758:56;:::i;:::-;7837:7;7868:1;7853:284;7878:6;7875:1;7872:13;7853:284;;;7954:6;7948:13;7981:63;8040:3;8025:13;7981:63;:::i;:::-;7974:70;;8067:60;8120:6;8067:60;:::i;:::-;8057:70;;7913:224;7900:1;7897;7893:9;7888:14;;7853:284;;;7857:14;8153:3;8146:10;;7554:608;;;7430:732;;;;:::o;8168:373::-;8311:4;8349:2;8338:9;8334:18;8326:26;;8398:9;8392:4;8388:20;8384:1;8373:9;8369:17;8362:47;8426:108;8529:4;8520:6;8426:108;:::i;:::-;8418:116;;8168:373;;;;:::o;8547:180::-;8595:77;8592:1;8585:88;8692:4;8689:1;8682:15;8716:4;8713:1;8706:15;8733:180;8781:77;8778:1;8771:88;8878:4;8875:1;8868:15;8902:4;8899:1;8892:15;8919:191;8959:3;8978:20;8996:1;8978:20;:::i;:::-;8973:25;;9012:20;9030:1;9012:20;:::i;:::-;9007:25;;9055:1;9052;9048:9;9041:16;;9076:3;9073:1;9070:10;9067:36;;;9083:18;;:::i;:::-;9067:36;8919:191;;;;:::o;9116:105::-;9152:7;9192:22;9185:5;9181:34;9170:45;;9116:105;;;:::o;9227:120::-;9299:23;9316:5;9299:23;:::i;:::-;9292:5;9289:34;9279:62;;9337:1;9334;9327:12;9279:62;9227:120;:::o;9353:141::-;9409:5;9440:6;9434:13;9425:22;;9456:32;9482:5;9456:32;:::i;:::-;9353:141;;;;:::o;9500:76::-;9536:7;9565:5;9554:16;;9500:76;;;:::o;9582:120::-;9654:23;9671:5;9654:23;:::i;:::-;9647:5;9644:34;9634:62;;9692:1;9689;9682:12;9634:62;9582:120;:::o;9708:141::-;9764:5;9795:6;9789:13;9780:22;;9811:32;9837:5;9811:32;:::i;:::-;9708:141;;;;:::o;9855:143::-;9912:5;9943:6;9937:13;9928:22;;9959:33;9986:5;9959:33;:::i;:::-;9855:143;;;;:::o;10004:971::-;10107:6;10115;10123;10131;10139;10188:3;10176:9;10167:7;10163:23;10159:33;10156:120;;;10195:79;;:::i;:::-;10156:120;10315:1;10340:63;10395:7;10386:6;10375:9;10371:22;10340:63;:::i;:::-;10330:73;;10286:127;10452:2;10478:63;10533:7;10524:6;10513:9;10509:22;10478:63;:::i;:::-;10468:73;;10423:128;10590:2;10616:64;10672:7;10663:6;10652:9;10648:22;10616:64;:::i;:::-;10606:74;;10561:129;10729:2;10755:64;10811:7;10802:6;10791:9;10787:22;10755:64;:::i;:::-;10745:74;;10700:129;10868:3;10895:63;10950:7;10941:6;10930:9;10926:22;10895:63;:::i;:::-;10885:73;;10839:129;10004:971;;;;;;;;:::o;10981:233::-;11020:3;11043:24;11061:5;11043:24;:::i;:::-;11034:33;;11089:66;11082:5;11079:77;11076:103;;11159:18;;:::i;:::-;11076:103;11206:1;11199:5;11195:13;11188:20;;10981:233;;;:::o;11220:332::-;11341:4;11379:2;11368:9;11364:18;11356:26;;11392:71;11460:1;11449:9;11445:17;11436:6;11392:71;:::i;:::-;11473:72;11541:2;11530:9;11526:18;11517:6;11473:72;:::i;:::-;11220:332;;;;;:::o;11558:194::-;11598:4;11618:20;11636:1;11618:20;:::i;:::-;11613:25;;11652:20;11670:1;11652:20;:::i;:::-;11647:25;;11696:1;11693;11689:9;11681:17;;11720:1;11714:4;11711:11;11708:37;;;11725:18;;:::i;:::-;11708:37;11558:194;;;;:::o;11758:180::-;11806:77;11803:1;11796:88;11903:4;11900:1;11893:15;11927:4;11924:1;11917:15;11944:147;12045:11;12082:3;12067:18;;11944:147;;;;:::o;12097:114::-;;:::o;12217:398::-;12376:3;12397:83;12478:1;12473:3;12397:83;:::i;:::-;12390:90;;12489:93;12578:3;12489:93;:::i;:::-;12607:1;12602:3;12598:11;12591:18;;12217:398;;;:::o;12621:379::-;12805:3;12827:147;12970:3;12827:147;:::i;:::-;12820:154;;12991:3;12984:10;;12621:379;;;:::o;13006:86::-;13041:7;13081:4;13074:5;13070:16;13059:27;;13006:86;;;:::o;13098:118::-;13169:22;13185:5;13169:22;:::i;:::-;13162:5;13159:33;13149:61;;13206:1;13203;13196:12;13149:61;13098:118;:::o;13222:139::-;13277:5;13308:6;13302:13;13293:22;;13324:31;13349:5;13324:31;:::i;:::-;13222:139;;;;:::o;13367:347::-;13435:6;13484:2;13472:9;13463:7;13459:23;13455:32;13452:119;;;13490:79;;:::i;:::-;13452:119;13610:1;13635:62;13689:7;13680:6;13669:9;13665:22;13635:62;:::i;:::-;13625:72;;13581:126;13367:347;;;;:::o;13720:410::-;13760:7;13783:20;13801:1;13783:20;:::i;:::-;13778:25;;13817:20;13835:1;13817:20;:::i;:::-;13812:25;;13872:1;13869;13865:9;13894:30;13912:11;13894:30;:::i;:::-;13883:41;;14073:1;14064:7;14060:15;14057:1;14054:22;14034:1;14027:9;14007:83;13984:139;;14103:18;;:::i;:::-;13984:139;13768:362;13720:410;;;;:::o;14136:180::-;14184:77;14181:1;14174:88;14281:4;14278:1;14271:15;14305:4;14302:1;14295:15;14322:185;14362:1;14379:20;14397:1;14379:20;:::i;:::-;14374:25;;14413:20;14431:1;14413:20;:::i;:::-;14408:25;;14452:1;14442:35;;14457:18;;:::i;:::-;14442:35;14499:1;14496;14492:9;14487:14;;14322:185;;;;:::o;14513:169::-;14597:11;14631:6;14626:3;14619:19;14671:4;14666:3;14662:14;14647:29;;14513:169;;;;:::o;14688:181::-;14828:33;14824:1;14816:6;14812:14;14805:57;14688:181;:::o;14875:366::-;15017:3;15038:67;15102:2;15097:3;15038:67;:::i;:::-;15031:74;;15114:93;15203:3;15114:93;:::i;:::-;15232:2;15227:3;15223:12;15216:19;;14875:366;;;:::o;15247:419::-;15413:4;15451:2;15440:9;15436:18;15428:26;;15500:9;15494:4;15490:20;15486:1;15475:9;15471:17;15464:47;15528:131;15654:4;15528:131;:::i;:::-;15520:139;;15247:419;;;:::o;15672:118::-;15759:24;15777:5;15759:24;:::i;:::-;15754:3;15747:37;15672:118;;:::o;15796:442::-;15945:4;15983:2;15972:9;15968:18;15960:26;;15996:71;16064:1;16053:9;16049:17;16040:6;15996:71;:::i;:::-;16077:72;16145:2;16134:9;16130:18;16121:6;16077:72;:::i;:::-;16159;16227:2;16216:9;16212:18;16203:6;16159:72;:::i;:::-;15796:442;;;;;;:::o;16244:332::-;16365:4;16403:2;16392:9;16388:18;16380:26;;16416:71;16484:1;16473:9;16469:17;16460:6;16416:71;:::i;:::-;16497:72;16565:2;16554:9;16550:18;16541:6;16497:72;:::i;:::-;16244:332;;;;;:::o;16582:191::-;16620:4;16640:18;16656:1;16640:18;:::i;:::-;16635:23;;16672:18;16688:1;16672:18;:::i;:::-;16667:23;;16714:1;16711;16707:9;16699:17;;16738:4;16732;16729:14;16726:40;;;16746:18;;:::i;:::-;16726:40;16582:191;;;;:::o;16779:102::-;16821:8;16868:5;16865:1;16861:13;16840:34;;16779:102;;;:::o;16887:848::-;16948:5;16955:4;16979:6;16970:15;;17003:5;16994:14;;17017:712;17038:1;17028:8;17025:15;17017:712;;;17133:4;17128:3;17124:14;17118:4;17115:24;17112:50;;;17142:18;;:::i;:::-;17112:50;17192:1;17182:8;17178:16;17175:451;;;17607:4;17600:5;17596:16;17587:25;;17175:451;17657:4;17651;17647:15;17639:23;;17687:32;17710:8;17687:32;:::i;:::-;17675:44;;17017:712;;;16887:848;;;;;;;:::o;17741:1073::-;17795:5;17986:8;17976:40;;18007:1;17998:10;;18009:5;;17976:40;18035:4;18025:36;;18052:1;18043:10;;18054:5;;18025:36;18121:4;18169:1;18164:27;;;;18205:1;18200:191;;;;18114:277;;18164:27;18182:1;18173:10;;18184:5;;;18200:191;18245:3;18235:8;18232:17;18229:43;;;18252:18;;:::i;:::-;18229:43;18301:8;18298:1;18294:16;18285:25;;18336:3;18329:5;18326:14;18323:40;;;18343:18;;:::i;:::-;18323:40;18376:5;;;18114:277;;18500:2;18490:8;18487:16;18481:3;18475:4;18472:13;18468:36;18450:2;18440:8;18437:16;18432:2;18426:4;18423:12;18419:35;18403:111;18400:246;;;18556:8;18550:4;18546:19;18537:28;;18591:3;18584:5;18581:14;18578:40;;;18598:18;;:::i;:::-;18578:40;18631:5;;18400:246;18671:42;18709:3;18699:8;18693:4;18690:1;18671:42;:::i;:::-;18656:57;;;;18745:4;18740:3;18736:14;18729:5;18726:25;18723:51;;;18754:18;;:::i;:::-;18723:51;18803:4;18796:5;18792:16;18783:25;;17741:1073;;;;;;:::o;18820:281::-;18878:5;18902:23;18920:4;18902:23;:::i;:::-;18894:31;;18946:25;18962:8;18946:25;:::i;:::-;18934:37;;18990:104;19027:66;19017:8;19011:4;18990:104;:::i;:::-;18981:113;;18820:281;;;;:::o;19107:332::-;19228:4;19266:2;19255:9;19251:18;19243:26;;19279:71;19347:1;19336:9;19332:17;19323:6;19279:71;:::i;:::-;19360:72;19428:2;19417:9;19413:18;19404:6;19360:72;:::i;:::-;19107:332;;;;;:::o;19445:222::-;19538:4;19576:2;19565:9;19561:18;19553:26;;19589:71;19657:1;19646:9;19642:17;19633:6;19589:71;:::i;:::-;19445:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2337200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "285",
								"BANK_MANAGER_ROLE()": "413",
								"DEFAULT_ADMIN_ROLE()": "396",
								"deposit(address,uint256)": "infinite",
								"depositCount(address)": "2934",
								"ethUsdFeed()": "infinite",
								"getLatestEthPrice()": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"getSupportedTokens()": "infinite",
								"getTotalDepositsInUSD(address)": "infinite",
								"getUserBalance(address,address)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3143",
								"maxWithdrawal()": "infinite",
								"priceFeedForToken(address)": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"setPriceFeed(address,address)": "infinite",
								"supportToken(address,address)": "infinite",
								"supportsInterface(bytes4)": "741",
								"totalBankCapacityUSD()": "infinite",
								"totalDepositsUSD()": "2469",
								"unsupportToken(address)": "infinite",
								"withdraw(address,uint256)": "infinite",
								"withdrawalCount(address)": "2913"
							},
							"internal": {
								"_convertEthToUSD(uint256)": "infinite",
								"_convertTokenToUSD(address,uint256)": "infinite",
								"_normalizeToUSDCDecimals(uint256,uint8)": "infinite",
								"_safeTransfer(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 814,
									"end": 14597,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 814,
									"end": 14597,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 814,
									"end": 14597,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "CODESIZE",
									"source": 13
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 5834,
									"end": 6423,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "tag",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5951,
									"end": 5952,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5933,
									"end": 5947,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5933,
									"end": 5952,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 5929,
									"end": 5987,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 5929,
									"end": 5987,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5961,
									"end": 5987,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 5961,
									"end": 5987,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 5961,
									"end": 5987,
									"name": "PUSH",
									"source": 13,
									"value": "F1F13A3800000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5961,
									"end": 5987,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5961,
									"end": 5987,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 5961,
									"end": 5987,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 5961,
									"end": 5987,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5961,
									"end": 5987,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 5961,
									"end": 5987,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 5961,
									"end": 5987,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5961,
									"end": 5987,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5961,
									"end": 5987,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 5961,
									"end": 5987,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5961,
									"end": 5987,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 5929,
									"end": 5987,
									"name": "tag",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 5929,
									"end": 5987,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6023,
									"end": 6024,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6002,
									"end": 6019,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6002,
									"end": 6024,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 5998,
									"end": 6054,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "9"
								},
								{
									"begin": 5998,
									"end": 6054,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6033,
									"end": 6054,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 6033,
									"end": 6054,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 6033,
									"end": 6054,
									"name": "PUSH",
									"source": 13,
									"value": "AFEA1C5700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6033,
									"end": 6054,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6033,
									"end": 6054,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 6033,
									"end": 6054,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 6033,
									"end": 6054,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6033,
									"end": 6054,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 6033,
									"end": 6054,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 6033,
									"end": 6054,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 6033,
									"end": 6054,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6033,
									"end": 6054,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 6033,
									"end": 6054,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6033,
									"end": 6054,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 5998,
									"end": 6054,
									"name": "tag",
									"source": 13,
									"value": "9"
								},
								{
									"begin": 5998,
									"end": 6054,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6092,
									"end": 6093,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6069,
									"end": 6094,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6069,
									"end": 6094,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 6069,
									"end": 6080,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6069,
									"end": 6094,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6069,
									"end": 6094,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 6069,
									"end": 6094,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 6065,
									"end": 6118,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 6065,
									"end": 6118,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6103,
									"end": 6118,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 6103,
									"end": 6118,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 6103,
									"end": 6118,
									"name": "PUSH",
									"source": 13,
									"value": "9589A27D00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6103,
									"end": 6118,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6103,
									"end": 6118,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 6103,
									"end": 6118,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 6103,
									"end": 6118,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6103,
									"end": 6118,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 6103,
									"end": 6118,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 6103,
									"end": 6118,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 6103,
									"end": 6118,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6103,
									"end": 6118,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 6103,
									"end": 6118,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6103,
									"end": 6118,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 6065,
									"end": 6118,
									"name": "tag",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 6065,
									"end": 6118,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6148,
									"end": 6162,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6132,
									"end": 6162,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 6132,
									"end": 6162,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6132,
									"end": 6162,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6132,
									"end": 6162,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 6132,
									"end": 6162,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6132,
									"end": 6162,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6196,
									"end": 6213,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6173,
									"end": 6213,
									"name": "PUSH",
									"source": 13,
									"value": "A0"
								},
								{
									"begin": 6173,
									"end": 6213,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6173,
									"end": 6213,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6173,
									"end": 6213,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 6173,
									"end": 6213,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6173,
									"end": 6213,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6259,
									"end": 6270,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 6224,
									"end": 6271,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6224,
									"end": 6271,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 6224,
									"end": 6271,
									"name": "PUSH",
									"source": 13,
									"value": "C0"
								},
								{
									"begin": 6224,
									"end": 6271,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6224,
									"end": 6271,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6224,
									"end": 6271,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 6224,
									"end": 6271,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6224,
									"end": 6271,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 6224,
									"end": 6271,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6224,
									"end": 6271,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6321,
									"end": 6363,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 2241,
									"end": 2245,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6332,
									"end": 6350,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6332,
									"end": 6350,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 6352,
									"end": 6362,
									"name": "CALLER",
									"source": 13
								},
								{
									"begin": 6321,
									"end": 6331,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 6321,
									"end": 6331,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 6321,
									"end": 6331,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 6321,
									"end": 6363,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 6321,
									"end": 6363,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 6321,
									"end": 6363,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6321,
									"end": 6363,
									"name": "tag",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 6321,
									"end": 6363,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6321,
									"end": 6363,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6374,
									"end": 6415,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "13"
								},
								{
									"begin": 1039,
									"end": 1069,
									"name": "PUSH",
									"source": 13,
									"value": "2D95A8186DB49DA8BD2356C70CF02038F7DE0D6ED39F6766FE2D93D5E7785616"
								},
								{
									"begin": 6404,
									"end": 6414,
									"name": "CALLER",
									"source": 13
								},
								{
									"begin": 6374,
									"end": 6384,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 6374,
									"end": 6384,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 6374,
									"end": 6384,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 6374,
									"end": 6415,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 6374,
									"end": 6415,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 6374,
									"end": 6415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6374,
									"end": 6415,
									"name": "tag",
									"source": 13,
									"value": "13"
								},
								{
									"begin": 6374,
									"end": 6415,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6374,
									"end": 6415,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5834,
									"end": 6423,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 814,
									"end": 14597,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 814,
									"end": 14597,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6232,
									"end": 6236,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 6261,
									"end": 6265,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6267,
									"end": 6274,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 6253,
									"end": 6275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6323,
									"end": 6327,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6291,
									"end": 6297,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6311,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6311,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6312,
									"end": 6319,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 6373,
									"end": 6385,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6364,
									"end": 6371,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6358,
									"end": 6362,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 1,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "LOG4",
									"source": 1
								},
								{
									"begin": 6407,
									"end": 6411,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6449,
									"end": 6454,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6155,
									"end": 6471,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2907,
									"end": 2911,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2936,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2937,
									"end": 2941,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2950,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2950,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2951,
									"end": 2958,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2923,
									"end": 2959,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2923,
									"end": 2959,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2830,
									"end": 2966,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 14,
									"value": "28"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "28"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 694,
									"end": 820,
									"name": "tag",
									"source": 14,
									"value": "30"
								},
								{
									"begin": 694,
									"end": 820,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 731,
									"end": 738,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 813,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 760,
									"end": 814,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 749,
									"end": 814,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 749,
									"end": 814,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 694,
									"end": 820,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 694,
									"end": 820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 826,
									"end": 922,
									"name": "tag",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 826,
									"end": 922,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 863,
									"end": 870,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "46"
								},
								{
									"begin": 910,
									"end": 915,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 892,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "30"
								},
								{
									"begin": 892,
									"end": 916,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 892,
									"end": 916,
									"name": "tag",
									"source": 14,
									"value": "46"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 881,
									"end": 916,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 881,
									"end": 916,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 826,
									"end": 922,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 826,
									"end": 922,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 826,
									"end": 922,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 826,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 14,
									"value": "32"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "48"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 14,
									"value": "48"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "49"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 14,
									"value": "49"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "51"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "32"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 14,
									"value": "51"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "tag",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1293,
									"end": 1299,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1307,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1309,
									"end": 1315,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "PUSH",
									"source": 14,
									"value": "60"
								},
								{
									"begin": 1346,
									"end": 1355,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 1337,
									"end": 1344,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 1333,
									"end": 1356,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 1329,
									"end": 1361,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "53"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "54"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 1364,
									"end": 1443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "tag",
									"source": 14,
									"value": "54"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "tag",
									"source": 14,
									"value": "53"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "55"
								},
								{
									"begin": 1565,
									"end": 1572,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 1556,
									"end": 1562,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1545,
									"end": 1554,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 1541,
									"end": 1563,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 1509,
									"end": 1573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "tag",
									"source": 14,
									"value": "55"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1622,
									"end": 1624,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "56"
								},
								{
									"begin": 1704,
									"end": 1711,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 1695,
									"end": 1701,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1684,
									"end": 1693,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 1680,
									"end": 1702,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 1648,
									"end": 1712,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "tag",
									"source": 14,
									"value": "56"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1593,
									"end": 1722,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1761,
									"end": 1763,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "57"
								},
								{
									"begin": 1843,
									"end": 1850,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 1834,
									"end": 1840,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1823,
									"end": 1832,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 1819,
									"end": 1841,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 1787,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "tag",
									"source": 14,
									"value": "57"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1732,
									"end": 1861,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1205,
									"end": 1868,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 814,
									"end": 14597,
									"name": "tag",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 814,
									"end": 14597,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 814,
									"end": 14597,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 814,
									"end": 14597,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 814,
									"end": 14597,
									"name": "PUSH",
									"source": 13,
									"value": "A0"
								},
								{
									"begin": 814,
									"end": 14597,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 814,
									"end": 14597,
									"name": "PUSH",
									"source": 13,
									"value": "C0"
								},
								{
									"begin": 814,
									"end": 14597,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 814,
									"end": 14597,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 814,
									"end": 14597,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 814,
									"end": 14597,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 814,
									"end": 14597,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 814,
									"end": 14597,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 814,
									"end": 14597,
									"name": "ASSIGNIMMUTABLE",
									"source": 13,
									"value": "1245"
								},
								{
									"begin": 814,
									"end": 14597,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 814,
									"end": 14597,
									"name": "ASSIGNIMMUTABLE",
									"source": 13,
									"value": "1241"
								},
								{
									"begin": 814,
									"end": 14597,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 814,
									"end": 14597,
									"name": "ASSIGNIMMUTABLE",
									"source": 13,
									"value": "1238"
								},
								{
									"begin": 814,
									"end": 14597,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 814,
									"end": 14597,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 814,
									"end": 14597,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220185bc13f375add1f081d4958d6750a25250b43993e3ab57652cee2f38f00fd8264736f6c634300081e0033",
									".code": [
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH",
											"source": 13,
											"value": "91D14854"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH",
											"source": 13,
											"value": "D547741F"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH",
											"source": 13,
											"value": "D547741F"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH",
											"source": 13,
											"value": "E7D66D63"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH",
											"source": 13,
											"value": "EE3D6866"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH",
											"source": 13,
											"value": "F2157052"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH",
											"source": 13,
											"value": "F3FEF3A3"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH",
											"source": 13,
											"value": "F4443D9A"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH",
											"source": 13,
											"value": "91D14854"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH",
											"source": 13,
											"value": "92B9F8F5"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH",
											"source": 13,
											"value": "A217FDDF"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH",
											"source": 13,
											"value": "A773A500"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH",
											"source": 13,
											"value": "B3D8BCDC"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH",
											"source": 13,
											"value": "D3C7C2C7"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "tag",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH",
											"source": 13,
											"value": "36568ABE"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH",
											"source": 13,
											"value": "36568ABE"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH",
											"source": 13,
											"value": "47E7EF24"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH",
											"source": 13,
											"value": "6805D6AD"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH",
											"source": 13,
											"value": "76E11286"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH",
											"source": 13,
											"value": "8009B7BD"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH",
											"source": 13,
											"value": "8C0FF5B7"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "tag",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH",
											"source": 13,
											"value": "1FFC9A7"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH",
											"source": 13,
											"value": "1E604EA3"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH",
											"source": 13,
											"value": "248A9CA3"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH",
											"source": 13,
											"value": "2E3441A9"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH",
											"source": 13,
											"value": "2F2FF15D"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH",
											"source": 13,
											"value": "30C0B9EC"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14476,
											"end": 14502,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14476,
											"end": 14502,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 14476,
											"end": 14502,
											"name": "PUSH",
											"source": 13,
											"value": "3EE6509D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14476,
											"end": 14502,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14476,
											"end": 14502,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14476,
											"end": 14502,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 14476,
											"end": 14502,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14476,
											"end": 14502,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14476,
											"end": 14502,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 14476,
											"end": 14502,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14476,
											"end": 14502,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14476,
											"end": 14502,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14476,
											"end": 14502,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14476,
											"end": 14502,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 814,
											"end": 14597,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14564,
											"end": 14586,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14564,
											"end": 14586,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 14564,
											"end": 14586,
											"name": "PUSH",
											"source": 13,
											"value": "3921C70300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14564,
											"end": 14586,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14564,
											"end": 14586,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14564,
											"end": 14586,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 14564,
											"end": 14586,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14564,
											"end": 14586,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14564,
											"end": 14586,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 14564,
											"end": 14586,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14564,
											"end": 14586,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14564,
											"end": 14586,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14564,
											"end": 14586,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14564,
											"end": 14586,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "tag",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 12489,
											"end": 12915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 12489,
											"end": 12915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 12489,
											"end": 12915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "tag",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 1638,
											"end": 1704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1638,
											"end": 1704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1638,
											"end": 1704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 12200,
											"end": 12403,
											"name": "tag",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 12200,
											"end": 12403,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12200,
											"end": 12403,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 12200,
											"end": 12403,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12200,
											"end": 12403,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12200,
											"end": 12403,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 12200,
											"end": 12403,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12200,
											"end": 12403,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12200,
											"end": 12403,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12200,
											"end": 12403,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12200,
											"end": 12403,
											"name": "tag",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 12200,
											"end": 12403,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12200,
											"end": 12403,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12200,
											"end": 12403,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 12200,
											"end": 12403,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 12200,
											"end": 12403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12200,
											"end": 12403,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 12200,
											"end": 12403,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12200,
											"end": 12403,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12200,
											"end": 12403,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12200,
											"end": 12403,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 12200,
											"end": 12403,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12200,
											"end": 12403,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12200,
											"end": 12403,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 12200,
											"end": 12403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12200,
											"end": 12403,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 12200,
											"end": 12403,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12200,
											"end": 12403,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12200,
											"end": 12403,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12200,
											"end": 12403,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12200,
											"end": 12403,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12200,
											"end": 12403,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12200,
											"end": 12403,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12200,
											"end": 12403,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 8653,
											"end": 9662,
											"name": "tag",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 8653,
											"end": 9662,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8653,
											"end": 9662,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 8653,
											"end": 9662,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8653,
											"end": 9662,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8653,
											"end": 9662,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 8653,
											"end": 9662,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8653,
											"end": 9662,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8653,
											"end": 9662,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8653,
											"end": 9662,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8653,
											"end": 9662,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 8653,
											"end": 9662,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8653,
											"end": 9662,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8653,
											"end": 9662,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 8653,
											"end": 9662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8653,
											"end": 9662,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 8653,
											"end": 9662,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8653,
											"end": 9662,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 8653,
											"end": 9662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8653,
											"end": 9662,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 8653,
											"end": 9662,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8653,
											"end": 9662,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "tag",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 11393,
											"end": 11529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 11393,
											"end": 11529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 11393,
											"end": 11529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 7966,
											"end": 8269,
											"name": "tag",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 7966,
											"end": 8269,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7966,
											"end": 8269,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 7966,
											"end": 8269,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7966,
											"end": 8269,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7966,
											"end": 8269,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 7966,
											"end": 8269,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7966,
											"end": 8269,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7966,
											"end": 8269,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7966,
											"end": 8269,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7966,
											"end": 8269,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 7966,
											"end": 8269,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7966,
											"end": 8269,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7966,
											"end": 8269,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 7966,
											"end": 8269,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7966,
											"end": 8269,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7966,
											"end": 8269,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 7966,
											"end": 8269,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7966,
											"end": 8269,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7966,
											"end": 8269,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7966,
											"end": 8269,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7966,
											"end": 8269,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 7966,
											"end": 8269,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7966,
											"end": 8269,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7966,
											"end": 8269,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 7966,
											"end": 8269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7966,
											"end": 8269,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 7966,
											"end": 8269,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7966,
											"end": 8269,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 7966,
											"end": 8269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7966,
											"end": 8269,
											"name": "tag",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 7966,
											"end": 8269,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7966,
											"end": 8269,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "tag",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 1459,
											"end": 1508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1459,
											"end": 1508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "tag",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 1266,
											"end": 1304,
											"name": "tag",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 1266,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1266,
											"end": 1304,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1266,
											"end": 1304,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1266,
											"end": 1304,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1266,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 1266,
											"end": 1304,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1266,
											"end": 1304,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1304,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1304,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1266,
											"end": 1304,
											"name": "tag",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 1266,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1266,
											"end": 1304,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1266,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 1266,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 1266,
											"end": 1304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1266,
											"end": 1304,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 1266,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1266,
											"end": 1304,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1266,
											"end": 1304,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1266,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 1266,
											"end": 1304,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1266,
											"end": 1304,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1266,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 1266,
											"end": 1304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1266,
											"end": 1304,
											"name": "tag",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 1266,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1266,
											"end": 1304,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1266,
											"end": 1304,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1266,
											"end": 1304,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1266,
											"end": 1304,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1266,
											"end": 1304,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1266,
											"end": 1304,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1266,
											"end": 1304,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6658,
											"end": 7156,
											"name": "tag",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 6658,
											"end": 7156,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6658,
											"end": 7156,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 6658,
											"end": 7156,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6658,
											"end": 7156,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6658,
											"end": 7156,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 6658,
											"end": 7156,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6658,
											"end": 7156,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6658,
											"end": 7156,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6658,
											"end": 7156,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6658,
											"end": 7156,
											"name": "tag",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 6658,
											"end": 7156,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6658,
											"end": 7156,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6658,
											"end": 7156,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 6658,
											"end": 7156,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6658,
											"end": 7156,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6658,
											"end": 7156,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 6658,
											"end": 7156,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6658,
											"end": 7156,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6658,
											"end": 7156,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6658,
											"end": 7156,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6658,
											"end": 7156,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 6658,
											"end": 7156,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6658,
											"end": 7156,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6658,
											"end": 7156,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 6658,
											"end": 7156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6658,
											"end": 7156,
											"name": "tag",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 6658,
											"end": 7156,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6658,
											"end": 7156,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 6658,
											"end": 7156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6658,
											"end": 7156,
											"name": "tag",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 6658,
											"end": 7156,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6658,
											"end": 7156,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1364,
											"end": 1409,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 1364,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1409,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1409,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1409,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 1364,
											"end": 1409,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1409,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1364,
											"end": 1409,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1364,
											"end": 1409,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1409,
											"name": "tag",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 1364,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1409,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 1364,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 1364,
											"end": 1409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1409,
											"name": "tag",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 1364,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1409,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1409,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 1364,
											"end": 1409,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1409,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 1364,
											"end": 1409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1409,
											"name": "tag",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 1364,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1409,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1409,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1409,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1409,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1409,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1409,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1409,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "tag",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 2017,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "tag",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 2017,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "tag",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 2017,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "tag",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 11541,
											"end": 11652,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11541,
											"end": 11652,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11541,
											"end": 11652,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 11541,
											"end": 11652,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11541,
											"end": 11652,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11541,
											"end": 11652,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 11541,
											"end": 11652,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11541,
											"end": 11652,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11541,
											"end": 11652,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11541,
											"end": 11652,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 11541,
											"end": 11652,
											"name": "tag",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 11541,
											"end": 11652,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11541,
											"end": 11652,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11541,
											"end": 11652,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 11541,
											"end": 11652,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 11541,
											"end": 11652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11541,
											"end": 11652,
											"name": "tag",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 11541,
											"end": 11652,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11541,
											"end": 11652,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11541,
											"end": 11652,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11541,
											"end": 11652,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 11541,
											"end": 11652,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11541,
											"end": 11652,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11541,
											"end": 11652,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 11541,
											"end": 11652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11541,
											"end": 11652,
											"name": "tag",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 11541,
											"end": 11652,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11541,
											"end": 11652,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11541,
											"end": 11652,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11541,
											"end": 11652,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11541,
											"end": 11652,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11541,
											"end": 11652,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11541,
											"end": 11652,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11541,
											"end": 11652,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "tag",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "tag",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 2369,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "tag",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 2369,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "tag",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 7351,
											"end": 7958,
											"name": "tag",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 7351,
											"end": 7958,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7351,
											"end": 7958,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 7351,
											"end": 7958,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7351,
											"end": 7958,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7351,
											"end": 7958,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 7351,
											"end": 7958,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7351,
											"end": 7958,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7351,
											"end": 7958,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7351,
											"end": 7958,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7351,
											"end": 7958,
											"name": "tag",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 7351,
											"end": 7958,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7351,
											"end": 7958,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7351,
											"end": 7958,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 7351,
											"end": 7958,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7351,
											"end": 7958,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7351,
											"end": 7958,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 7351,
											"end": 7958,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7351,
											"end": 7958,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7351,
											"end": 7958,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7351,
											"end": 7958,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7351,
											"end": 7958,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 7351,
											"end": 7958,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7351,
											"end": 7958,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7351,
											"end": 7958,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7351,
											"end": 7958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7351,
											"end": 7958,
											"name": "tag",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 7351,
											"end": 7958,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7351,
											"end": 7958,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 7351,
											"end": 7958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7351,
											"end": 7958,
											"name": "tag",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 7351,
											"end": 7958,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7351,
											"end": 7958,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 995,
											"end": 1069,
											"name": "tag",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 995,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 995,
											"end": 1069,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 995,
											"end": 1069,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 995,
											"end": 1069,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 995,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 995,
											"end": 1069,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 995,
											"end": 1069,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 995,
											"end": 1069,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 995,
											"end": 1069,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 995,
											"end": 1069,
											"name": "tag",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 995,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 995,
											"end": 1069,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 995,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 995,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 995,
											"end": 1069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 995,
											"end": 1069,
											"name": "tag",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 995,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 995,
											"end": 1069,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 995,
											"end": 1069,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 995,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 995,
											"end": 1069,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 995,
											"end": 1069,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 995,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 995,
											"end": 1069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 995,
											"end": 1069,
											"name": "tag",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 995,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 995,
											"end": 1069,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 995,
											"end": 1069,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 995,
											"end": 1069,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 995,
											"end": 1069,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 995,
											"end": 1069,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 995,
											"end": 1069,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 995,
											"end": 1069,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 10162,
											"end": 11091,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 10162,
											"end": 11091,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10162,
											"end": 11091,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 10162,
											"end": 11091,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10162,
											"end": 11091,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10162,
											"end": 11091,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 10162,
											"end": 11091,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10162,
											"end": 11091,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10162,
											"end": 11091,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10162,
											"end": 11091,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 10162,
											"end": 11091,
											"name": "tag",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 10162,
											"end": 11091,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10162,
											"end": 11091,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10162,
											"end": 11091,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 10162,
											"end": 11091,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10162,
											"end": 11091,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10162,
											"end": 11091,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 10162,
											"end": 11091,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10162,
											"end": 11091,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10162,
											"end": 11091,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10162,
											"end": 11091,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10162,
											"end": 11091,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 10162,
											"end": 11091,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10162,
											"end": 11091,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10162,
											"end": 11091,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 10162,
											"end": 11091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10162,
											"end": 11091,
											"name": "tag",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 10162,
											"end": 11091,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10162,
											"end": 11091,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 10162,
											"end": 11091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10162,
											"end": 11091,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 10162,
											"end": 11091,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10162,
											"end": 11091,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "tag",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 1903,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "tag",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 1903,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "tag",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 1903,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "tag",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2630,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2664,
											"end": 2696,
											"name": "PUSH",
											"source": 1,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 2724,
											"end": 2735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2700,
											"end": 2736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2642,
											"end": 2736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2642,
											"end": 2736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12557,
											"end": 12573,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12590,
											"end": 12599,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12602,
											"end": 12603,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12590,
											"end": 12603,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12590,
											"end": 12603,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12585,
											"end": 12835,
											"name": "tag",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 12585,
											"end": 12835,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12609,
											"end": 12624,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 12609,
											"end": 12631,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12609,
											"end": 12631,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 12609,
											"end": 12631,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12609,
											"end": 12631,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12605,
											"end": 12606,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12605,
											"end": 12631,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12585,
											"end": 12835,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12585,
											"end": 12835,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 12585,
											"end": 12835,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12653,
											"end": 12666,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12669,
											"end": 12684,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 12685,
											"end": 12686,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12669,
											"end": 12687,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12669,
											"end": 12687,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 12669,
											"end": 12687,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12669,
											"end": 12687,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12669,
											"end": 12687,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 12669,
											"end": 12687,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12669,
											"end": 12687,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 12669,
											"end": 12687,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 12669,
											"end": 12687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12669,
											"end": 12687,
											"name": "tag",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 12669,
											"end": 12687,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12669,
											"end": 12687,
											"name": "tag",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 12669,
											"end": 12687,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12669,
											"end": 12687,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12669,
											"end": 12687,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12669,
											"end": 12687,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12669,
											"end": 12687,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12669,
											"end": 12687,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12669,
											"end": 12687,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 12669,
											"end": 12687,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12669,
											"end": 12687,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12669,
											"end": 12687,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12669,
											"end": 12687,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 12669,
											"end": 12687,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12669,
											"end": 12687,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 12669,
											"end": 12687,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 12669,
											"end": 12687,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12669,
											"end": 12687,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12669,
											"end": 12687,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12669,
											"end": 12687,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12653,
											"end": 12687,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12653,
											"end": 12687,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12702,
											"end": 12717,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12720,
											"end": 12732,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 12720,
											"end": 12738,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12733,
											"end": 12737,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12720,
											"end": 12738,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12720,
											"end": 12738,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12720,
											"end": 12738,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12720,
											"end": 12738,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12720,
											"end": 12738,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12720,
											"end": 12738,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12720,
											"end": 12738,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12720,
											"end": 12738,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12720,
											"end": 12738,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12720,
											"end": 12738,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12720,
											"end": 12738,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12720,
											"end": 12738,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12720,
											"end": 12738,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12720,
											"end": 12738,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12720,
											"end": 12738,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 12720,
											"end": 12745,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12739,
											"end": 12744,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12720,
											"end": 12745,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12720,
											"end": 12745,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12720,
											"end": 12745,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12720,
											"end": 12745,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12720,
											"end": 12745,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12720,
											"end": 12745,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12720,
											"end": 12745,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12720,
											"end": 12745,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12720,
											"end": 12745,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12720,
											"end": 12745,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12720,
											"end": 12745,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12720,
											"end": 12745,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12720,
											"end": 12745,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12720,
											"end": 12745,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12720,
											"end": 12745,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 12720,
											"end": 12745,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 12702,
											"end": 12745,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12702,
											"end": 12745,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12774,
											"end": 12775,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12764,
											"end": 12771,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12764,
											"end": 12775,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 12760,
											"end": 12823,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12760,
											"end": 12823,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 12760,
											"end": 12823,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12789,
											"end": 12823,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 12808,
											"end": 12813,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12815,
											"end": 12822,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12789,
											"end": 12807,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 12789,
											"end": 12823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12789,
											"end": 12823,
											"name": "tag",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 12789,
											"end": 12823,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12777,
											"end": 12823,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12777,
											"end": 12823,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 12777,
											"end": 12823,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12777,
											"end": 12823,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12777,
											"end": 12823,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 12777,
											"end": 12823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12777,
											"end": 12823,
											"name": "tag",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 12777,
											"end": 12823,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12777,
											"end": 12823,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 12777,
											"end": 12823,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12760,
											"end": 12823,
											"name": "tag",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 12760,
											"end": 12823,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12638,
											"end": 12835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12638,
											"end": 12835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12633,
											"end": 12636,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12633,
											"end": 12636,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12633,
											"end": 12636,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 12633,
											"end": 12636,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12633,
											"end": 12636,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12633,
											"end": 12636,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12633,
											"end": 12636,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12585,
											"end": 12835,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 12585,
											"end": 12835,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12585,
											"end": 12835,
											"name": "tag",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 12585,
											"end": 12835,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12585,
											"end": 12835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12859,
											"end": 12907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 12876,
											"end": 12888,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 12876,
											"end": 12894,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12889,
											"end": 12893,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12876,
											"end": 12894,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12876,
											"end": 12894,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12876,
											"end": 12894,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12876,
											"end": 12894,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12876,
											"end": 12894,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12876,
											"end": 12894,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12876,
											"end": 12894,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12876,
											"end": 12894,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12876,
											"end": 12894,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12876,
											"end": 12894,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12876,
											"end": 12894,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12876,
											"end": 12894,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12876,
											"end": 12894,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12876,
											"end": 12894,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12876,
											"end": 12894,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 12876,
											"end": 12906,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12903,
											"end": 12904,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12876,
											"end": 12906,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12876,
											"end": 12906,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12876,
											"end": 12906,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12876,
											"end": 12906,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12876,
											"end": 12906,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12876,
											"end": 12906,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12876,
											"end": 12906,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12876,
											"end": 12906,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12876,
											"end": 12906,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12876,
											"end": 12906,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12876,
											"end": 12906,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12876,
											"end": 12906,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12876,
											"end": 12906,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12876,
											"end": 12906,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12876,
											"end": 12906,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 12876,
											"end": 12906,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 12859,
											"end": 12875,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 12859,
											"end": 12907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12859,
											"end": 12907,
											"name": "tag",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 12859,
											"end": 12907,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12847,
											"end": 12907,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12847,
											"end": 12907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 12847,
											"end": 12907,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12847,
											"end": 12907,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12847,
											"end": 12907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 12847,
											"end": 12907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12847,
											"end": 12907,
											"name": "tag",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 12847,
											"end": 12907,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12847,
											"end": 12907,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12847,
											"end": 12907,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12915,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3884,
											"end": 3888,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3870,
											"end": 3899,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3870,
											"end": 3899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 4289,
											"end": 4293,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4276,
											"end": 4294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 4317,
											"end": 4321,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4330,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4316,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 4306,
											"end": 4331,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12200,
											"end": 12403,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 12200,
											"end": 12403,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12250,
											"end": 12257,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12273,
											"end": 12285,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12295,
											"end": 12305,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "1245"
										},
										{
											"begin": 12295,
											"end": 12321,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12295,
											"end": 12321,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12321,
											"name": "PUSH",
											"source": 13,
											"value": "FEAF968C"
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "tag",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 12295,
											"end": 12323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "tag",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 12295,
											"end": 12323,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12270,
											"end": 12323,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12270,
											"end": 12323,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12270,
											"end": 12323,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12270,
											"end": 12323,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12270,
											"end": 12323,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12270,
											"end": 12323,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12389,
											"end": 12394,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12395,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12395,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12395,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12200,
											"end": 12403,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12200,
											"end": 12403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 5419,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 5419,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5397,
											"end": 5415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 1,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 5517,
											"end": 5521,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 5505,
											"end": 5542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8653,
											"end": 9662,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 8653,
											"end": 9662,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8742,
											"end": 8759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8791,
											"end": 8792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8774,
											"end": 8793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8774,
											"end": 8793,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8774,
											"end": 8779,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8774,
											"end": 8793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8774,
											"end": 8793,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8774,
											"end": 8793,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8770,
											"end": 9330,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 8770,
											"end": 9330,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8826,
											"end": 8827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8813,
											"end": 8822,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 8813,
											"end": 8827,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8809,
											"end": 8859,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 8809,
											"end": 8859,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8836,
											"end": 8859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8836,
											"end": 8859,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8836,
											"end": 8859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8615019900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8836,
											"end": 8859,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8836,
											"end": 8859,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8836,
											"end": 8859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8836,
											"end": 8859,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8836,
											"end": 8859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8836,
											"end": 8859,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8836,
											"end": 8859,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8836,
											"end": 8859,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8836,
											"end": 8859,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8836,
											"end": 8859,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8836,
											"end": 8859,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8809,
											"end": 8859,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 8809,
											"end": 8859,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8886,
											"end": 8913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 8903,
											"end": 8912,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 8886,
											"end": 8902,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 8886,
											"end": 8913,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8886,
											"end": 8913,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 8886,
											"end": 8913,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8874,
											"end": 8913,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8874,
											"end": 8913,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8968,
											"end": 8977,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8940,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 8928,
											"end": 8952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8941,
											"end": 8951,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8928,
											"end": 8952,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8928,
											"end": 8952,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8952,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8952,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8928,
											"end": 8952,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8952,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8952,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8952,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8928,
											"end": 8952,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8928,
											"end": 8952,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8964,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8961,
											"end": 8962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8928,
											"end": 8964,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8928,
											"end": 8964,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8964,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8928,
											"end": 8964,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8964,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8964,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8964,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8928,
											"end": 8964,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8964,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8964,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8964,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8964,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8928,
											"end": 8964,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8964,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8928,
											"end": 8964,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8964,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8928,
											"end": 8977,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8977,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8977,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 8928,
											"end": 8977,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8977,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 8928,
											"end": 8977,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8977,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 8928,
											"end": 8977,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8977,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8977,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8977,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8977,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8977,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8977,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8977,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8770,
											"end": 9330,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 8770,
											"end": 9330,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8770,
											"end": 9330,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 8770,
											"end": 9330,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9012,
											"end": 9028,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 9012,
											"end": 9035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9029,
											"end": 9034,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9012,
											"end": 9035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9012,
											"end": 9035,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9012,
											"end": 9035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9012,
											"end": 9035,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9012,
											"end": 9035,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9012,
											"end": 9035,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9012,
											"end": 9035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9012,
											"end": 9035,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9012,
											"end": 9035,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9012,
											"end": 9035,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9012,
											"end": 9035,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9012,
											"end": 9035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9012,
											"end": 9035,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9012,
											"end": 9035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9012,
											"end": 9035,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 9012,
											"end": 9035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9012,
											"end": 9035,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9012,
											"end": 9035,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 9012,
											"end": 9035,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9012,
											"end": 9035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 9012,
											"end": 9035,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 9012,
											"end": 9035,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9012,
											"end": 9035,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 9012,
											"end": 9035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 9012,
											"end": 9035,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9007,
											"end": 9063,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 9007,
											"end": 9063,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9044,
											"end": 9063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9044,
											"end": 9063,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9044,
											"end": 9063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3DD1B30500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9044,
											"end": 9063,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9044,
											"end": 9063,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9044,
											"end": 9063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 9044,
											"end": 9063,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9044,
											"end": 9063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9044,
											"end": 9063,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9044,
											"end": 9063,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9044,
											"end": 9063,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9044,
											"end": 9063,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9044,
											"end": 9063,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9044,
											"end": 9063,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9007,
											"end": 9063,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 9007,
											"end": 9063,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9091,
											"end": 9092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9081,
											"end": 9087,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9081,
											"end": 9092,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9077,
											"end": 9124,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 9077,
											"end": 9124,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9101,
											"end": 9124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9101,
											"end": 9124,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9101,
											"end": 9124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8615019900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9101,
											"end": 9124,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9101,
											"end": 9124,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9101,
											"end": 9124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 9101,
											"end": 9124,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9101,
											"end": 9124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9101,
											"end": 9124,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9101,
											"end": 9124,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9101,
											"end": 9124,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9101,
											"end": 9124,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9101,
											"end": 9124,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9101,
											"end": 9124,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9077,
											"end": 9124,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 9077,
											"end": 9124,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9138,
											"end": 9203,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 9169,
											"end": 9179,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 9189,
											"end": 9193,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 9196,
											"end": 9202,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9145,
											"end": 9150,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9138,
											"end": 9168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9138,
											"end": 9168,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9138,
											"end": 9168,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 9138,
											"end": 9168,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9138,
											"end": 9203,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9138,
											"end": 9203,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9138,
											"end": 9203,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9138,
											"end": 9203,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9138,
											"end": 9203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9138,
											"end": 9203,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9138,
											"end": 9203,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9138,
											"end": 9203,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 9138,
											"end": 9203,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9229,
											"end": 9262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 9248,
											"end": 9253,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9255,
											"end": 9261,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9229,
											"end": 9247,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 9229,
											"end": 9262,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9229,
											"end": 9262,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 9229,
											"end": 9262,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9217,
											"end": 9262,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9217,
											"end": 9262,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9311,
											"end": 9317,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9288,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 9276,
											"end": 9300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9289,
											"end": 9299,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9276,
											"end": 9300,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9276,
											"end": 9300,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9300,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9300,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9276,
											"end": 9300,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9300,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9300,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9300,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9276,
											"end": 9300,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9276,
											"end": 9300,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9301,
											"end": 9306,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9276,
											"end": 9307,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9276,
											"end": 9307,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9307,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9307,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9276,
											"end": 9307,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9307,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9307,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9307,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9276,
											"end": 9307,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9276,
											"end": 9307,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9276,
											"end": 9317,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9317,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9317,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9317,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 9276,
											"end": 9317,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9317,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9317,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 9276,
											"end": 9317,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9317,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 9276,
											"end": 9317,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9317,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9317,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9317,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9317,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9317,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9317,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9317,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8770,
											"end": 9330,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 8770,
											"end": 9330,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9350,
											"end": 9369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9391,
											"end": 9400,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9372,
											"end": 9388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 9372,
											"end": 9388,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 9372,
											"end": 9400,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 9372,
											"end": 9400,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9372,
											"end": 9400,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9372,
											"end": 9400,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 9372,
											"end": 9400,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9372,
											"end": 9400,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 9372,
											"end": 9400,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9350,
											"end": 9400,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9350,
											"end": 9400,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9429,
											"end": 9449,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "1241"
										},
										{
											"begin": 9415,
											"end": 9426,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9415,
											"end": 9449,
											"modifierDepth": 1,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9411,
											"end": 9475,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9411,
											"end": 9475,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 9411,
											"end": 9475,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9458,
											"end": 9475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9458,
											"end": 9475,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9458,
											"end": 9475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "448F3CA800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9458,
											"end": 9475,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9458,
											"end": 9475,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9458,
											"end": 9475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 9458,
											"end": 9475,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9458,
											"end": 9475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9458,
											"end": 9475,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9458,
											"end": 9475,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9458,
											"end": 9475,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9458,
											"end": 9475,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9458,
											"end": 9475,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9458,
											"end": 9475,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9411,
											"end": 9475,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 9411,
											"end": 9475,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9505,
											"end": 9516,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9486,
											"end": 9502,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 9486,
											"end": 9516,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9486,
											"end": 9516,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9486,
											"end": 9516,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 9486,
											"end": 9516,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9527,
											"end": 9539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 9527,
											"end": 9551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9550,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 9527,
											"end": 9551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9527,
											"end": 9551,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9527,
											"end": 9551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9527,
											"end": 9551,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9527,
											"end": 9551,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9527,
											"end": 9551,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9527,
											"end": 9551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9527,
											"end": 9551,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9527,
											"end": 9551,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9527,
											"end": 9551,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9527,
											"end": 9551,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9527,
											"end": 9551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9527,
											"end": 9551,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9527,
											"end": 9551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9527,
											"end": 9551,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 9527,
											"end": 9551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9527,
											"end": 9553,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9527,
											"end": 9553,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 9527,
											"end": 9553,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9527,
											"end": 9553,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9527,
											"end": 9553,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9527,
											"end": 9553,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9527,
											"end": 9553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 9527,
											"end": 9553,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9527,
											"end": 9553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 9527,
											"end": 9553,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9527,
											"end": 9553,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 9527,
											"end": 9553,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9527,
											"end": 9553,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9527,
											"end": 9553,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9527,
											"end": 9553,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9527,
											"end": 9553,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 9527,
											"end": 9553,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9595,
											"end": 9600,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9571,
											"end": 9654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9571,
											"end": 9654,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9583,
											"end": 9593,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 9571,
											"end": 9654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9571,
											"end": 9654,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9571,
											"end": 9654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "57BAD7E3C9EFECF6E1F60BBD846B999E9DA4A409224287A8DF09779F2330135E"
										},
										{
											"begin": 9619,
											"end": 9620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9602,
											"end": 9621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9602,
											"end": 9621,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9602,
											"end": 9607,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9602,
											"end": 9621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9602,
											"end": 9621,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9602,
											"end": 9621,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 9602,
											"end": 9642,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 9602,
											"end": 9642,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9636,
											"end": 9642,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9602,
											"end": 9642,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 9602,
											"end": 9642,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9602,
											"end": 9642,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 9602,
											"end": 9642,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9624,
											"end": 9633,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 9602,
											"end": 9642,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 9602,
											"end": 9642,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9644,
											"end": 9653,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9571,
											"end": 9654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9571,
											"end": 9654,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9571,
											"end": 9654,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 9571,
											"end": 9654,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9571,
											"end": 9654,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9571,
											"end": 9654,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9571,
											"end": 9654,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 9571,
											"end": 9654,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9571,
											"end": 9654,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 9571,
											"end": 9654,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9571,
											"end": 9654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9571,
											"end": 9654,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9571,
											"end": 9654,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9571,
											"end": 9654,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9571,
											"end": 9654,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9571,
											"end": 9654,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9571,
											"end": 9654,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 8731,
											"end": 9662,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8731,
											"end": 9662,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8653,
											"end": 9662,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8653,
											"end": 9662,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8653,
											"end": 9662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11469,
											"end": 11476,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11496,
											"end": 11508,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 11496,
											"end": 11514,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11509,
											"end": 11513,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11496,
											"end": 11514,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11496,
											"end": 11514,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11496,
											"end": 11514,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11496,
											"end": 11514,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11496,
											"end": 11514,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11496,
											"end": 11514,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11496,
											"end": 11514,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11496,
											"end": 11514,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11496,
											"end": 11514,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11496,
											"end": 11514,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11496,
											"end": 11514,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11496,
											"end": 11514,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11496,
											"end": 11514,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11496,
											"end": 11514,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11496,
											"end": 11514,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 11496,
											"end": 11521,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11515,
											"end": 11520,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11496,
											"end": 11521,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11496,
											"end": 11521,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11496,
											"end": 11521,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11496,
											"end": 11521,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11496,
											"end": 11521,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11496,
											"end": 11521,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11496,
											"end": 11521,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11496,
											"end": 11521,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11496,
											"end": 11521,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11496,
											"end": 11521,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11496,
											"end": 11521,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11496,
											"end": 11521,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11496,
											"end": 11521,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11496,
											"end": 11521,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11496,
											"end": 11521,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 11496,
											"end": 11521,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 11489,
											"end": 11521,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11489,
											"end": 11521,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7966,
											"end": 8269,
											"name": "tag",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 7966,
											"end": 8269,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1039,
											"end": 1069,
											"name": "PUSH",
											"source": 13,
											"value": "2D95A8186DB49DA8BD2356C70CF02038F7DE0D6ED39F6766FE2D93D5E7785616"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8086,
											"end": 8087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8069,
											"end": 8088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8069,
											"end": 8088,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8069,
											"end": 8074,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8069,
											"end": 8088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8069,
											"end": 8088,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8069,
											"end": 8088,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8065,
											"end": 8112,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 8065,
											"end": 8112,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8097,
											"end": 8112,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8097,
											"end": 8112,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8097,
											"end": 8112,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "9589A27D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8097,
											"end": 8112,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8097,
											"end": 8112,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8097,
											"end": 8112,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8097,
											"end": 8112,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8097,
											"end": 8112,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8097,
											"end": 8112,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8097,
											"end": 8112,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8097,
											"end": 8112,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8097,
											"end": 8112,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8097,
											"end": 8112,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8097,
											"end": 8112,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8065,
											"end": 8112,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 8065,
											"end": 8112,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8215,
											"end": 8219,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8166,
											"end": 8183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 8166,
											"end": 8190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8184,
											"end": 8189,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8166,
											"end": 8190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8166,
											"end": 8190,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8166,
											"end": 8190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8166,
											"end": 8190,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8166,
											"end": 8190,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8166,
											"end": 8190,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8166,
											"end": 8190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8166,
											"end": 8190,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8166,
											"end": 8190,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8166,
											"end": 8190,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8166,
											"end": 8190,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8166,
											"end": 8190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8166,
											"end": 8190,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8166,
											"end": 8190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8166,
											"end": 8190,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 8166,
											"end": 8190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8166,
											"end": 8220,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 8166,
											"end": 8220,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 8166,
											"end": 8220,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8166,
											"end": 8220,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8166,
											"end": 8220,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8166,
											"end": 8220,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8166,
											"end": 8220,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 8166,
											"end": 8220,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 8166,
											"end": 8220,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8166,
											"end": 8220,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8166,
											"end": 8220,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8166,
											"end": 8220,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8166,
											"end": 8220,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8166,
											"end": 8220,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 8166,
											"end": 8220,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 8166,
											"end": 8220,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8166,
											"end": 8220,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 8166,
											"end": 8220,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8256,
											"end": 8260,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8236,
											"end": 8261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8236,
											"end": 8261,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8249,
											"end": 8254,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8236,
											"end": 8261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8236,
											"end": 8261,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8236,
											"end": 8261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "D2D8394CF7549A5DDBC2BA3DD7B2DE8D53C891472D1F2907008ED6A10045FDAE"
										},
										{
											"begin": 8236,
											"end": 8261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8236,
											"end": 8261,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8236,
											"end": 8261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8236,
											"end": 8261,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8236,
											"end": 8261,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8236,
											"end": 8261,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8236,
											"end": 8261,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8236,
											"end": 8261,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8236,
											"end": 8261,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 7966,
											"end": 8269,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7966,
											"end": 8269,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7966,
											"end": 8269,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7966,
											"end": 8269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "tag",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "1245"
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1266,
											"end": 1304,
											"name": "tag",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 1266,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1266,
											"end": 1304,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "1238"
										},
										{
											"begin": 1266,
											"end": 1304,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1266,
											"end": 1304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2907,
											"end": 2911,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2941,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2958,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2923,
											"end": 2959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2923,
											"end": 2959,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6658,
											"end": 7156,
											"name": "tag",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 6658,
											"end": 7156,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1039,
											"end": 1069,
											"name": "PUSH",
											"source": 13,
											"value": "2D95A8186DB49DA8BD2356C70CF02038F7DE0D6ED39F6766FE2D93D5E7785616"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6778,
											"end": 6779,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6761,
											"end": 6780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6761,
											"end": 6780,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6761,
											"end": 6766,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6761,
											"end": 6780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6761,
											"end": 6780,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6761,
											"end": 6780,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6757,
											"end": 6808,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 6757,
											"end": 6808,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6789,
											"end": 6808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6789,
											"end": 6808,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6789,
											"end": 6808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3DD1B30500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6789,
											"end": 6808,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6789,
											"end": 6808,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6789,
											"end": 6808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6789,
											"end": 6808,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6789,
											"end": 6808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6789,
											"end": 6808,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6789,
											"end": 6808,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6789,
											"end": 6808,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6789,
											"end": 6808,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6789,
											"end": 6808,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6789,
											"end": 6808,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6757,
											"end": 6808,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 6757,
											"end": 6808,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6824,
											"end": 6840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 6824,
											"end": 6847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6841,
											"end": 6846,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6824,
											"end": 6847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6824,
											"end": 6847,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6824,
											"end": 6847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6824,
											"end": 6847,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6824,
											"end": 6847,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6824,
											"end": 6847,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6824,
											"end": 6847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6824,
											"end": 6847,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6824,
											"end": 6847,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6824,
											"end": 6847,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6824,
											"end": 6847,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6824,
											"end": 6847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6824,
											"end": 6847,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6824,
											"end": 6847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6824,
											"end": 6847,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6824,
											"end": 6847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6824,
											"end": 6847,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6824,
											"end": 6847,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6824,
											"end": 6847,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6824,
											"end": 6847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 6824,
											"end": 6847,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 6824,
											"end": 6847,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6824,
											"end": 6847,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 6824,
											"end": 6847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 6824,
											"end": 6847,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6819,
											"end": 6989,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 6819,
											"end": 6989,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6879,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 6885,
											"end": 6890,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6891,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6932,
											"end": 6936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6906,
											"end": 6922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 6906,
											"end": 6929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6923,
											"end": 6928,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6906,
											"end": 6929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6906,
											"end": 6929,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6906,
											"end": 6929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6906,
											"end": 6929,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6906,
											"end": 6929,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6906,
											"end": 6929,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6906,
											"end": 6929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6906,
											"end": 6929,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6906,
											"end": 6929,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6906,
											"end": 6929,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6906,
											"end": 6929,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6906,
											"end": 6929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6906,
											"end": 6929,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6906,
											"end": 6929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6906,
											"end": 6929,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6906,
											"end": 6929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6906,
											"end": 6936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 6906,
											"end": 6936,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 6906,
											"end": 6936,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6906,
											"end": 6936,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6906,
											"end": 6936,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6906,
											"end": 6936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 6906,
											"end": 6936,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6906,
											"end": 6936,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 6906,
											"end": 6936,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6906,
											"end": 6936,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6906,
											"end": 6936,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6906,
											"end": 6936,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6906,
											"end": 6936,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6906,
											"end": 6936,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6906,
											"end": 6936,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 6906,
											"end": 6936,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6906,
											"end": 6936,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 6906,
											"end": 6936,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6971,
											"end": 6976,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6956,
											"end": 6977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6956,
											"end": 6977,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6956,
											"end": 6977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "EA3145306A87BAEBA6BB1A8B5C8D3744F840A81CB436B3509F64FC978600CDFB"
										},
										{
											"begin": 6956,
											"end": 6977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6956,
											"end": 6977,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6956,
											"end": 6977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6956,
											"end": 6977,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6956,
											"end": 6977,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6956,
											"end": 6977,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6956,
											"end": 6977,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6956,
											"end": 6977,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6956,
											"end": 6977,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 13
										},
										{
											"begin": 6819,
											"end": 6989,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 6819,
											"end": 6989,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7019,
											"end": 7020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7003,
											"end": 7021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7003,
											"end": 7021,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7003,
											"end": 7007,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7003,
											"end": 7021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7003,
											"end": 7021,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7003,
											"end": 7021,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 6999,
											"end": 7149,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 6999,
											"end": 7149,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7087,
											"end": 7091,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7038,
											"end": 7055,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 7038,
											"end": 7062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7056,
											"end": 7061,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7038,
											"end": 7062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7038,
											"end": 7062,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7038,
											"end": 7062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7038,
											"end": 7062,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7038,
											"end": 7062,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7038,
											"end": 7062,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7038,
											"end": 7062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7038,
											"end": 7062,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7038,
											"end": 7062,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7038,
											"end": 7062,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7038,
											"end": 7062,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7038,
											"end": 7062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7038,
											"end": 7062,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7038,
											"end": 7062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7038,
											"end": 7062,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7038,
											"end": 7062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7038,
											"end": 7092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 7038,
											"end": 7092,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 7038,
											"end": 7092,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7038,
											"end": 7092,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7038,
											"end": 7092,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7038,
											"end": 7092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7038,
											"end": 7092,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 7038,
											"end": 7092,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 7038,
											"end": 7092,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7038,
											"end": 7092,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7038,
											"end": 7092,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7038,
											"end": 7092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7038,
											"end": 7092,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7038,
											"end": 7092,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 7038,
											"end": 7092,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 7038,
											"end": 7092,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7038,
											"end": 7092,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 7038,
											"end": 7092,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7132,
											"end": 7136,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7112,
											"end": 7137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7112,
											"end": 7137,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7125,
											"end": 7130,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7112,
											"end": 7137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7112,
											"end": 7137,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7112,
											"end": 7137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "D2D8394CF7549A5DDBC2BA3DD7B2DE8D53C891472D1F2907008ED6A10045FDAE"
										},
										{
											"begin": 7112,
											"end": 7137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7112,
											"end": 7137,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7112,
											"end": 7137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7112,
											"end": 7137,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7112,
											"end": 7137,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7112,
											"end": 7137,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7112,
											"end": 7137,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7112,
											"end": 7137,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7112,
											"end": 7137,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 6999,
											"end": 7149,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 6999,
											"end": 7149,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6658,
											"end": 7156,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6658,
											"end": 7156,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6658,
											"end": 7156,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6658,
											"end": 7156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1364,
											"end": 1409,
											"name": "tag",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 1364,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1409,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "1241"
										},
										{
											"begin": 1364,
											"end": 1409,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "tag",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11541,
											"end": 11652,
											"name": "tag",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 11541,
											"end": 11652,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11594,
											"end": 11610,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 11629,
											"end": 11644,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "tag",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "tag",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11541,
											"end": 11652,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11541,
											"end": 11652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 4706,
											"end": 4710,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4693,
											"end": 4705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4693,
											"end": 4711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 4735,
											"end": 4739,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4748,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 4723,
											"end": 4749,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "tag",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2369,
											"end": 2400,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2369,
											"end": 2400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7351,
											"end": 7958,
											"name": "tag",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 7351,
											"end": 7958,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1039,
											"end": 1069,
											"name": "PUSH",
											"source": 13,
											"value": "2D95A8186DB49DA8BD2356C70CF02038F7DE0D6ED39F6766FE2D93D5E7785616"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7443,
											"end": 7459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 7443,
											"end": 7466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7460,
											"end": 7465,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7443,
											"end": 7466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7443,
											"end": 7466,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7443,
											"end": 7466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7443,
											"end": 7466,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7443,
											"end": 7466,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7443,
											"end": 7466,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7443,
											"end": 7466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7443,
											"end": 7466,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7443,
											"end": 7466,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7443,
											"end": 7466,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7443,
											"end": 7466,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7443,
											"end": 7466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7443,
											"end": 7466,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7443,
											"end": 7466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7443,
											"end": 7466,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7443,
											"end": 7466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7443,
											"end": 7466,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7443,
											"end": 7466,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7443,
											"end": 7466,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7443,
											"end": 7466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 7443,
											"end": 7466,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 7443,
											"end": 7466,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7443,
											"end": 7466,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 7443,
											"end": 7466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 7443,
											"end": 7466,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7438,
											"end": 7494,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 7438,
											"end": 7494,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7475,
											"end": 7494,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7475,
											"end": 7494,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7475,
											"end": 7494,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3DD1B30500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7475,
											"end": 7494,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7475,
											"end": 7494,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7475,
											"end": 7494,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7475,
											"end": 7494,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7475,
											"end": 7494,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7475,
											"end": 7494,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7475,
											"end": 7494,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7475,
											"end": 7494,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7475,
											"end": 7494,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7475,
											"end": 7494,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7475,
											"end": 7494,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7438,
											"end": 7494,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 7438,
											"end": 7494,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7531,
											"end": 7536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7505,
											"end": 7521,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 7505,
											"end": 7528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7522,
											"end": 7527,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7505,
											"end": 7528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7505,
											"end": 7528,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7505,
											"end": 7528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7505,
											"end": 7528,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7505,
											"end": 7528,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7505,
											"end": 7528,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7505,
											"end": 7528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7505,
											"end": 7528,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7505,
											"end": 7528,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7505,
											"end": 7528,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7505,
											"end": 7528,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7505,
											"end": 7528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7505,
											"end": 7528,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7505,
											"end": 7528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7505,
											"end": 7528,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7505,
											"end": 7528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7505,
											"end": 7536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 7505,
											"end": 7536,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 7505,
											"end": 7536,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7505,
											"end": 7536,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7505,
											"end": 7536,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7505,
											"end": 7536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 7505,
											"end": 7536,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 7505,
											"end": 7536,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 7505,
											"end": 7536,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7505,
											"end": 7536,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7505,
											"end": 7536,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7505,
											"end": 7536,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7505,
											"end": 7536,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7505,
											"end": 7536,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 7505,
											"end": 7536,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 7505,
											"end": 7536,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7505,
											"end": 7536,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 7505,
											"end": 7536,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7561,
											"end": 7570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7573,
											"end": 7574,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7561,
											"end": 7574,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7561,
											"end": 7574,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7556,
											"end": 7831,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 7556,
											"end": 7831,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7580,
											"end": 7595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 7580,
											"end": 7602,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7580,
											"end": 7602,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7580,
											"end": 7602,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7580,
											"end": 7602,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7576,
											"end": 7577,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7576,
											"end": 7602,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7556,
											"end": 7831,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7556,
											"end": 7831,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 7556,
											"end": 7831,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7650,
											"end": 7655,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7628,
											"end": 7655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7628,
											"end": 7655,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7628,
											"end": 7643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 7644,
											"end": 7645,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7628,
											"end": 7646,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7628,
											"end": 7646,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7628,
											"end": 7646,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7628,
											"end": 7646,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7628,
											"end": 7646,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 7628,
											"end": 7646,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7628,
											"end": 7646,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 7628,
											"end": 7646,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 7628,
											"end": 7646,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7628,
											"end": 7646,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 7628,
											"end": 7646,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7628,
											"end": 7646,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 7628,
											"end": 7646,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7628,
											"end": 7646,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7628,
											"end": 7646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7628,
											"end": 7646,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7628,
											"end": 7646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7628,
											"end": 7646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7628,
											"end": 7646,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7628,
											"end": 7646,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7628,
											"end": 7646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7628,
											"end": 7646,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7628,
											"end": 7646,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7628,
											"end": 7646,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7628,
											"end": 7646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 7628,
											"end": 7646,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 7628,
											"end": 7646,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7628,
											"end": 7646,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 7628,
											"end": 7646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7628,
											"end": 7646,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7628,
											"end": 7655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7628,
											"end": 7655,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7628,
											"end": 7655,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7624,
											"end": 7820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 7624,
											"end": 7820,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7697,
											"end": 7712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 7738,
											"end": 7739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7713,
											"end": 7728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 7713,
											"end": 7735,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7713,
											"end": 7735,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7713,
											"end": 7735,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7713,
											"end": 7735,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7713,
											"end": 7739,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 7713,
											"end": 7739,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7713,
											"end": 7739,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7713,
											"end": 7739,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 7713,
											"end": 7739,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7713,
											"end": 7739,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 7713,
											"end": 7739,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7697,
											"end": 7740,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7697,
											"end": 7740,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7697,
											"end": 7740,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7697,
											"end": 7740,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7697,
											"end": 7740,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 7697,
											"end": 7740,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7697,
											"end": 7740,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 7697,
											"end": 7740,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 7697,
											"end": 7740,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7697,
											"end": 7740,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 7697,
											"end": 7740,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7697,
											"end": 7740,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 7697,
											"end": 7740,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7697,
											"end": 7740,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7697,
											"end": 7740,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7697,
											"end": 7740,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7697,
											"end": 7740,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7697,
											"end": 7740,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7697,
											"end": 7740,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7697,
											"end": 7740,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7697,
											"end": 7740,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7697,
											"end": 7740,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7697,
											"end": 7740,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7697,
											"end": 7740,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7697,
											"end": 7740,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 7697,
											"end": 7740,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 7697,
											"end": 7740,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7697,
											"end": 7740,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 7697,
											"end": 7740,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7697,
											"end": 7740,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7676,
											"end": 7691,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 7692,
											"end": 7693,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7676,
											"end": 7694,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7676,
											"end": 7694,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7676,
											"end": 7694,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7676,
											"end": 7694,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7676,
											"end": 7694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 7676,
											"end": 7694,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7676,
											"end": 7694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 7676,
											"end": 7694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 7676,
											"end": 7694,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7676,
											"end": 7694,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 7676,
											"end": 7694,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7676,
											"end": 7694,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 7676,
											"end": 7694,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7676,
											"end": 7694,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7676,
											"end": 7694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7676,
											"end": 7694,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7676,
											"end": 7694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7676,
											"end": 7694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7676,
											"end": 7694,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7676,
											"end": 7694,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7676,
											"end": 7694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7676,
											"end": 7740,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 7676,
											"end": 7740,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 7676,
											"end": 7740,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7676,
											"end": 7740,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7676,
											"end": 7740,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7676,
											"end": 7740,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7676,
											"end": 7740,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 7676,
											"end": 7740,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 7676,
											"end": 7740,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7676,
											"end": 7740,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7676,
											"end": 7740,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7676,
											"end": 7740,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7676,
											"end": 7740,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7676,
											"end": 7740,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 7676,
											"end": 7740,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 7676,
											"end": 7740,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7676,
											"end": 7740,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 7676,
											"end": 7740,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7759,
											"end": 7774,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 7759,
											"end": 7780,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7759,
											"end": 7780,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 7799,
											"end": 7804,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 7799,
											"end": 7804,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7624,
											"end": 7820,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 7624,
											"end": 7820,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7604,
											"end": 7607,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7604,
											"end": 7607,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7604,
											"end": 7607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7604,
											"end": 7607,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7604,
											"end": 7607,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7604,
											"end": 7607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7604,
											"end": 7607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7556,
											"end": 7831,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 7556,
											"end": 7831,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7556,
											"end": 7831,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 7556,
											"end": 7831,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7556,
											"end": 7831,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7848,
											"end": 7865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 7848,
											"end": 7872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7866,
											"end": 7871,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7848,
											"end": 7872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7848,
											"end": 7872,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7848,
											"end": 7872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7848,
											"end": 7872,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7848,
											"end": 7872,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7848,
											"end": 7872,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7848,
											"end": 7872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7848,
											"end": 7872,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7848,
											"end": 7872,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7848,
											"end": 7872,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7848,
											"end": 7872,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7848,
											"end": 7872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7848,
											"end": 7872,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7848,
											"end": 7872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7848,
											"end": 7872,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7848,
											"end": 7872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7841,
											"end": 7872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 7841,
											"end": 7872,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 7841,
											"end": 7872,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7841,
											"end": 7872,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7841,
											"end": 7872,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7841,
											"end": 7872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7841,
											"end": 7872,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 7841,
											"end": 7872,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 7841,
											"end": 7872,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7841,
											"end": 7872,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7841,
											"end": 7872,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 7905,
											"end": 7910,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7888,
											"end": 7911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7888,
											"end": 7911,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7888,
											"end": 7911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "F940D38196F30E7FF3EB255DD42DB8D99A75C1AC112199D4FC314CE6460BFC0C"
										},
										{
											"begin": 7888,
											"end": 7911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7888,
											"end": 7911,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7888,
											"end": 7911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7888,
											"end": 7911,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7888,
											"end": 7911,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7888,
											"end": 7911,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7888,
											"end": 7911,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7888,
											"end": 7911,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7888,
											"end": 7911,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 13
										},
										{
											"begin": 7944,
											"end": 7949,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7927,
											"end": 7950,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7927,
											"end": 7950,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7927,
											"end": 7950,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FD58461C4683DF397133C7E91FE2AA71559919B405F9E09C9C3AF7E875F54E3B"
										},
										{
											"begin": 7927,
											"end": 7950,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7927,
											"end": 7950,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7927,
											"end": 7950,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7927,
											"end": 7950,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7927,
											"end": 7950,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7927,
											"end": 7950,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7927,
											"end": 7950,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7927,
											"end": 7950,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7927,
											"end": 7950,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 13
										},
										{
											"begin": 7351,
											"end": 7958,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7351,
											"end": 7958,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7351,
											"end": 7958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 995,
											"end": 1069,
											"name": "tag",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 995,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1039,
											"end": 1069,
											"name": "PUSH",
											"source": 13,
											"value": "2D95A8186DB49DA8BD2356C70CF02038F7DE0D6ED39F6766FE2D93D5E7785616"
										},
										{
											"begin": 995,
											"end": 1069,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 995,
											"end": 1069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10162,
											"end": 11091,
											"name": "tag",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 10162,
											"end": 11091,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10267,
											"end": 10268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10257,
											"end": 10263,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10257,
											"end": 10268,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10254,
											"end": 10292,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 10254,
											"end": 10292,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10277,
											"end": 10292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10277,
											"end": 10292,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10277,
											"end": 10292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2C5211C600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10277,
											"end": 10292,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10277,
											"end": 10292,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10277,
											"end": 10292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10277,
											"end": 10292,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10277,
											"end": 10292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10277,
											"end": 10292,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10277,
											"end": 10292,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10277,
											"end": 10292,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10277,
											"end": 10292,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10277,
											"end": 10292,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10277,
											"end": 10292,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 10254,
											"end": 10292,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 10254,
											"end": 10292,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10315,
											"end": 10328,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "1238"
										},
										{
											"begin": 10306,
											"end": 10312,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10306,
											"end": 10328,
											"modifierDepth": 1,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10303,
											"end": 10360,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10303,
											"end": 10360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 10303,
											"end": 10360,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10337,
											"end": 10360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10337,
											"end": 10360,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10337,
											"end": 10360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "73A7C91000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10337,
											"end": 10360,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10337,
											"end": 10360,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10337,
											"end": 10360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10337,
											"end": 10360,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10337,
											"end": 10360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10337,
											"end": 10360,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10337,
											"end": 10360,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10337,
											"end": 10360,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10337,
											"end": 10360,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10337,
											"end": 10360,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10337,
											"end": 10360,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 10303,
											"end": 10360,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 10303,
											"end": 10360,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10381,
											"end": 10396,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10399,
											"end": 10411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 10399,
											"end": 10423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10412,
											"end": 10422,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 10399,
											"end": 10423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10399,
											"end": 10423,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10399,
											"end": 10423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10399,
											"end": 10423,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10399,
											"end": 10423,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10399,
											"end": 10423,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10399,
											"end": 10423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10399,
											"end": 10423,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10399,
											"end": 10423,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10399,
											"end": 10423,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10399,
											"end": 10423,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10399,
											"end": 10423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10399,
											"end": 10423,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10399,
											"end": 10423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10399,
											"end": 10423,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 10399,
											"end": 10430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10424,
											"end": 10429,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10399,
											"end": 10430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10399,
											"end": 10430,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10399,
											"end": 10430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10399,
											"end": 10430,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10399,
											"end": 10430,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10399,
											"end": 10430,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10399,
											"end": 10430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10399,
											"end": 10430,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10399,
											"end": 10430,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10399,
											"end": 10430,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10399,
											"end": 10430,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10399,
											"end": 10430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10399,
											"end": 10430,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10399,
											"end": 10430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10399,
											"end": 10430,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 10399,
											"end": 10430,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 10381,
											"end": 10430,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10381,
											"end": 10430,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10455,
											"end": 10461,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10445,
											"end": 10452,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10445,
											"end": 10461,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 10441,
											"end": 10491,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10441,
											"end": 10491,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 10441,
											"end": 10491,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10470,
											"end": 10491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10470,
											"end": 10491,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10470,
											"end": 10491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "F4D678B800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10470,
											"end": 10491,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10470,
											"end": 10491,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10470,
											"end": 10491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10470,
											"end": 10491,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10470,
											"end": 10491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10470,
											"end": 10491,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10470,
											"end": 10491,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10470,
											"end": 10491,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10470,
											"end": 10491,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10470,
											"end": 10491,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10470,
											"end": 10491,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 10441,
											"end": 10491,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 10441,
											"end": 10491,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10512,
											"end": 10529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10549,
											"end": 10550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10532,
											"end": 10551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10532,
											"end": 10551,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10532,
											"end": 10537,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10532,
											"end": 10551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10532,
											"end": 10551,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10532,
											"end": 10551,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 10532,
											"end": 10614,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 10532,
											"end": 10614,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10581,
											"end": 10614,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 10600,
											"end": 10605,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10607,
											"end": 10613,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10581,
											"end": 10599,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 10581,
											"end": 10614,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10581,
											"end": 10614,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 10581,
											"end": 10614,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10532,
											"end": 10614,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 10532,
											"end": 10614,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10532,
											"end": 10614,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 10532,
											"end": 10614,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10554,
											"end": 10578,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 10571,
											"end": 10577,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10554,
											"end": 10570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 10554,
											"end": 10578,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10554,
											"end": 10578,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 10554,
											"end": 10578,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10532,
											"end": 10614,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 10532,
											"end": 10614,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10512,
											"end": 10614,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10512,
											"end": 10614,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10671,
											"end": 10677,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10661,
											"end": 10668,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10661,
											"end": 10677,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 10661,
											"end": 10677,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10661,
											"end": 10677,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10661,
											"end": 10677,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 10661,
											"end": 10677,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10661,
											"end": 10677,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 10661,
											"end": 10677,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10627,
											"end": 10639,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 10627,
											"end": 10651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10640,
											"end": 10650,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 10627,
											"end": 10651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10627,
											"end": 10651,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10627,
											"end": 10651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10627,
											"end": 10651,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10627,
											"end": 10651,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10627,
											"end": 10651,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10627,
											"end": 10651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10627,
											"end": 10651,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10627,
											"end": 10651,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10627,
											"end": 10651,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10627,
											"end": 10651,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10627,
											"end": 10651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10627,
											"end": 10651,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10627,
											"end": 10651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10627,
											"end": 10651,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 10627,
											"end": 10658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10652,
											"end": 10657,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10627,
											"end": 10658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10627,
											"end": 10658,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10627,
											"end": 10658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10627,
											"end": 10658,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10627,
											"end": 10658,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10627,
											"end": 10658,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10627,
											"end": 10658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10627,
											"end": 10658,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10627,
											"end": 10658,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10627,
											"end": 10658,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10627,
											"end": 10658,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10627,
											"end": 10658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10627,
											"end": 10658,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10627,
											"end": 10658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10627,
											"end": 10658,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 10627,
											"end": 10677,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10627,
											"end": 10677,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10627,
											"end": 10677,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 10627,
											"end": 10677,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10708,
											"end": 10717,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10688,
											"end": 10704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 10688,
											"end": 10704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10688,
											"end": 10717,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10688,
											"end": 10717,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10688,
											"end": 10717,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 10688,
											"end": 10717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 10688,
											"end": 10717,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10688,
											"end": 10717,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10688,
											"end": 10717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 10688,
											"end": 10717,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10688,
											"end": 10717,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 10688,
											"end": 10717,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10688,
											"end": 10717,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10688,
											"end": 10717,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10688,
											"end": 10717,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10688,
											"end": 10717,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10688,
											"end": 10717,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10688,
											"end": 10717,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 10688,
											"end": 10717,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10728,
											"end": 10743,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 10728,
											"end": 10755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10744,
											"end": 10754,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 10728,
											"end": 10755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10728,
											"end": 10755,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10728,
											"end": 10755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10728,
											"end": 10755,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10728,
											"end": 10755,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10728,
											"end": 10755,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10728,
											"end": 10755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10728,
											"end": 10755,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10728,
											"end": 10755,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10728,
											"end": 10755,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10728,
											"end": 10755,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10728,
											"end": 10755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10728,
											"end": 10755,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10728,
											"end": 10755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10728,
											"end": 10755,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 10728,
											"end": 10755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10728,
											"end": 10757,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10728,
											"end": 10757,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 10728,
											"end": 10757,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10728,
											"end": 10757,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10728,
											"end": 10757,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10728,
											"end": 10757,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10728,
											"end": 10757,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 10728,
											"end": 10757,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10728,
											"end": 10757,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 10728,
											"end": 10757,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10728,
											"end": 10757,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 10728,
											"end": 10757,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10728,
											"end": 10757,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10728,
											"end": 10757,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10728,
											"end": 10757,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10728,
											"end": 10757,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 10728,
											"end": 10757,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10799,
											"end": 10800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10782,
											"end": 10801,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10782,
											"end": 10801,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10782,
											"end": 10787,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10782,
											"end": 10801,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10782,
											"end": 10801,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10782,
											"end": 10801,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10778,
											"end": 11014,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 10778,
											"end": 11014,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10819,
											"end": 10831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10837,
											"end": 10847,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10837,
											"end": 10852,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10860,
											"end": 10866,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 10837,
											"end": 10871,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10871,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10818,
											"end": 10871,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10818,
											"end": 10871,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10818,
											"end": 10871,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10891,
											"end": 10898,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10886,
											"end": 10923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 10886,
											"end": 10923,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10907,
											"end": 10923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10907,
											"end": 10923,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10907,
											"end": 10923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "90B8EC1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10907,
											"end": 10923,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10907,
											"end": 10923,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10907,
											"end": 10923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10907,
											"end": 10923,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10907,
											"end": 10923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10907,
											"end": 10923,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10907,
											"end": 10923,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10907,
											"end": 10923,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10907,
											"end": 10923,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10907,
											"end": 10923,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10907,
											"end": 10923,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 10886,
											"end": 10923,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 10886,
											"end": 10923,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10803,
											"end": 10935,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10778,
											"end": 11014,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 10778,
											"end": 11014,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10778,
											"end": 11014,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 10778,
											"end": 11014,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10956,
											"end": 11002,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 10983,
											"end": 10993,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 10995,
											"end": 11001,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10963,
											"end": 10968,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10956,
											"end": 10982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10956,
											"end": 10982,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10956,
											"end": 10982,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 10956,
											"end": 10982,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10956,
											"end": 11002,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10956,
											"end": 11002,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10956,
											"end": 11002,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10956,
											"end": 11002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10956,
											"end": 11002,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10956,
											"end": 11002,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10956,
											"end": 11002,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 10956,
											"end": 11002,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10778,
											"end": 11014,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 10778,
											"end": 11014,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11058,
											"end": 11063,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11031,
											"end": 11083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11031,
											"end": 11083,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11046,
											"end": 11056,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 11031,
											"end": 11083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11031,
											"end": 11083,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11031,
											"end": 11083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "DE1D532173C6DE1E3937C7AF1CB92745C738980729F53AC451A725F929F3B798"
										},
										{
											"begin": 11065,
											"end": 11071,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11073,
											"end": 11082,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11031,
											"end": 11083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11031,
											"end": 11083,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11031,
											"end": 11083,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 11031,
											"end": 11083,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11031,
											"end": 11083,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11031,
											"end": 11083,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11031,
											"end": 11083,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 11031,
											"end": 11083,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11031,
											"end": 11083,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 11031,
											"end": 11083,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11031,
											"end": 11083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11031,
											"end": 11083,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11031,
											"end": 11083,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11031,
											"end": 11083,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11031,
											"end": 11083,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11031,
											"end": 11083,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11031,
											"end": 11083,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 10233,
											"end": 11091,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10233,
											"end": 11091,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10162,
											"end": 11091,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10162,
											"end": 11091,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10162,
											"end": 11091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "tag",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 730,
											"end": 876,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 730,
											"end": 876,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 806,
											"end": 810,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 869,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 829,
											"end": 869,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 829,
											"end": 840,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 829,
											"end": 869,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 829,
											"end": 869,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 829,
											"end": 869,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 822,
											"end": 869,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 822,
											"end": 869,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 730,
											"end": 876,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 730,
											"end": 876,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 730,
											"end": 876,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 730,
											"end": 876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13240,
											"end": 13714,
											"name": "tag",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 13240,
											"end": 13714,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13322,
											"end": 13329,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13342,
											"end": 13368,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13371,
											"end": 13388,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 13371,
											"end": 13395,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13389,
											"end": 13394,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13371,
											"end": 13395,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13371,
											"end": 13395,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13371,
											"end": 13395,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13371,
											"end": 13395,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13371,
											"end": 13395,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13371,
											"end": 13395,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13371,
											"end": 13395,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13371,
											"end": 13395,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13371,
											"end": 13395,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13371,
											"end": 13395,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13371,
											"end": 13395,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13371,
											"end": 13395,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13371,
											"end": 13395,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13371,
											"end": 13395,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13371,
											"end": 13395,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 13371,
											"end": 13395,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13371,
											"end": 13395,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13371,
											"end": 13395,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 13371,
											"end": 13395,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13371,
											"end": 13395,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 13371,
											"end": 13395,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 13371,
											"end": 13395,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13371,
											"end": 13395,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 13371,
											"end": 13395,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13371,
											"end": 13395,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13342,
											"end": 13395,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13342,
											"end": 13395,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13435,
											"end": 13436,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13410,
											"end": 13437,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13410,
											"end": 13437,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13418,
											"end": 13422,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13410,
											"end": 13437,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13410,
											"end": 13437,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13410,
											"end": 13437,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13406,
											"end": 13461,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 13406,
											"end": 13461,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13446,
											"end": 13461,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13446,
											"end": 13461,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 13446,
											"end": 13461,
											"name": "PUSH",
											"source": 13,
											"value": "9589A27D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13446,
											"end": 13461,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13446,
											"end": 13461,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13446,
											"end": 13461,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 13446,
											"end": 13461,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13446,
											"end": 13461,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13446,
											"end": 13461,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 13446,
											"end": 13461,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13446,
											"end": 13461,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13446,
											"end": 13461,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13446,
											"end": 13461,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13446,
											"end": 13461,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 13406,
											"end": 13461,
											"name": "tag",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 13406,
											"end": 13461,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13475,
											"end": 13487,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13497,
											"end": 13501,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13517,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13497,
											"end": 13517,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13517,
											"name": "PUSH",
											"source": 13,
											"value": "FEAF968C"
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "tag",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 13497,
											"end": 13519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "tag",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 13497,
											"end": 13519,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13472,
											"end": 13519,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13472,
											"end": 13519,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13472,
											"end": 13519,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13472,
											"end": 13519,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13472,
											"end": 13519,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13472,
											"end": 13519,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13530,
											"end": 13544,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13562,
											"end": 13567,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13577,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13547,
											"end": 13577,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13577,
											"name": "PUSH",
											"source": 13,
											"value": "313CE567"
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "tag",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 13547,
											"end": 13579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "tag",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 13547,
											"end": 13579,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13590,
											"end": 13608,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13611,
											"end": 13653,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 13636,
											"end": 13642,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 13644,
											"end": 13652,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13611,
											"end": 13635,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 13611,
											"end": 13653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13611,
											"end": 13653,
											"name": "tag",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 13611,
											"end": 13653,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13590,
											"end": 13653,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13590,
											"end": 13653,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13703,
											"end": 13706,
											"name": "PUSH",
											"source": 13,
											"value": "5F5E100"
										},
										{
											"begin": 13693,
											"end": 13698,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13672,
											"end": 13682,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13672,
											"end": 13699,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 13672,
											"end": 13699,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13672,
											"end": 13699,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13672,
											"end": 13699,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 13672,
											"end": 13699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13672,
											"end": 13699,
											"name": "tag",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 13672,
											"end": 13699,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13671,
											"end": 13706,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 13671,
											"end": 13706,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13671,
											"end": 13706,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13671,
											"end": 13706,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 13671,
											"end": 13706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13671,
											"end": 13706,
											"name": "tag",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 13671,
											"end": 13706,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13664,
											"end": 13706,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 13664,
											"end": 13706,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13664,
											"end": 13706,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13664,
											"end": 13706,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13664,
											"end": 13706,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13664,
											"end": 13706,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13240,
											"end": 13714,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13240,
											"end": 13714,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13240,
											"end": 13714,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13240,
											"end": 13714,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13240,
											"end": 13714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13030,
											"end": 13232,
											"name": "tag",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 13030,
											"end": 13232,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13095,
											"end": 13102,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13115,
											"end": 13128,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13131,
											"end": 13150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 13131,
											"end": 13148,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 13131,
											"end": 13150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13131,
											"end": 13150,
											"name": "tag",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 13131,
											"end": 13150,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13115,
											"end": 13150,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13115,
											"end": 13150,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13202,
											"end": 13205,
											"name": "PUSH",
											"source": 13,
											"value": "5F5E100"
										},
										{
											"begin": 13193,
											"end": 13198,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13184,
											"end": 13190,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13184,
											"end": 13198,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 13184,
											"end": 13198,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13184,
											"end": 13198,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13184,
											"end": 13198,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 13184,
											"end": 13198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13184,
											"end": 13198,
											"name": "tag",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 13184,
											"end": 13198,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13183,
											"end": 13205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 13183,
											"end": 13205,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13183,
											"end": 13205,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13183,
											"end": 13205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 13183,
											"end": 13205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13183,
											"end": 13205,
											"name": "tag",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 13183,
											"end": 13205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13176,
											"end": 13205,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13176,
											"end": 13205,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13176,
											"end": 13205,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13030,
											"end": 13232,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13030,
											"end": 13232,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13030,
											"end": 13232,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13030,
											"end": 13232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 3252,
											"end": 3256,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 3258,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 3258,
											"end": 3270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 3241,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6232,
											"end": 6236,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 6261,
											"end": 6265,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6267,
											"end": 6274,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6253,
											"end": 6275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6323,
											"end": 6327,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6291,
											"end": 6297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6311,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6312,
											"end": 6319,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 6373,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 6373,
											"end": 6385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6364,
											"end": 6371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6358,
											"end": 6362,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 6407,
											"end": 6411,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6449,
											"end": 6454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6155,
											"end": 6471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6790,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 6814,
											"end": 6818,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6820,
											"end": 6827,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6806,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6806,
											"end": 6828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6876,
											"end": 6881,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6850,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6851,
											"end": 6855,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6864,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6865,
											"end": 6872,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 6927,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 6927,
											"end": 6939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 6925,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6912,
											"end": 6916,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 1,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 6961,
											"end": 6965,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7003,
											"end": 7008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6996,
											"end": 7008,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6708,
											"end": 7025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13947,
											"end": 14305,
											"name": "tag",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 13947,
											"end": 14305,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14041,
											"end": 14048,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14080,
											"end": 14081,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 14064,
											"end": 14077,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14064,
											"end": 14081,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 14064,
											"end": 14081,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14064,
											"end": 14081,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 14060,
											"end": 14298,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14060,
											"end": 14298,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 14060,
											"end": 14298,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14138,
											"end": 14139,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 14122,
											"end": 14135,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14122,
											"end": 14139,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 14122,
											"end": 14139,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14122,
											"end": 14139,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14122,
											"end": 14139,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 14122,
											"end": 14139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14122,
											"end": 14139,
											"name": "tag",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 14122,
											"end": 14139,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14115,
											"end": 14117,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 14115,
											"end": 14140,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 14115,
											"end": 14140,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14115,
											"end": 14140,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14115,
											"end": 14140,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 14115,
											"end": 14140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14115,
											"end": 14140,
											"name": "tag",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 14115,
											"end": 14140,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14105,
											"end": 14111,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14105,
											"end": 14141,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 14105,
											"end": 14141,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14105,
											"end": 14141,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14105,
											"end": 14141,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 14105,
											"end": 14141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14105,
											"end": 14141,
											"name": "tag",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 14105,
											"end": 14141,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14098,
											"end": 14141,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14098,
											"end": 14141,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14098,
											"end": 14141,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 14098,
											"end": 14141,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14060,
											"end": 14298,
											"name": "tag",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 14060,
											"end": 14298,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14179,
											"end": 14180,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 14163,
											"end": 14176,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14163,
											"end": 14180,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 14163,
											"end": 14180,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14163,
											"end": 14180,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 14159,
											"end": 14298,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14159,
											"end": 14298,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 14159,
											"end": 14298,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14225,
											"end": 14238,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14221,
											"end": 14222,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 14221,
											"end": 14238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 14221,
											"end": 14238,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14221,
											"end": 14238,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14221,
											"end": 14238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 14221,
											"end": 14238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14221,
											"end": 14238,
											"name": "tag",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 14221,
											"end": 14238,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14214,
											"end": 14216,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 14214,
											"end": 14239,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 14214,
											"end": 14239,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14214,
											"end": 14239,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14214,
											"end": 14239,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 14214,
											"end": 14239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14214,
											"end": 14239,
											"name": "tag",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 14214,
											"end": 14239,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14204,
											"end": 14210,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14204,
											"end": 14240,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 14204,
											"end": 14240,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14204,
											"end": 14240,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14204,
											"end": 14240,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 14204,
											"end": 14240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14204,
											"end": 14240,
											"name": "tag",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 14204,
											"end": 14240,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14197,
											"end": 14240,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14197,
											"end": 14240,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14197,
											"end": 14240,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 14197,
											"end": 14240,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14159,
											"end": 14298,
											"name": "tag",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 14159,
											"end": 14298,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14280,
											"end": 14286,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14273,
											"end": 14286,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14273,
											"end": 14286,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13947,
											"end": 14305,
											"name": "tag",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 13947,
											"end": 14305,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13947,
											"end": 14305,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13947,
											"end": 14305,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13947,
											"end": 14305,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13947,
											"end": 14305,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13947,
											"end": 14305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 3504,
											"end": 3508,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3496,
											"end": 3518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3581,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3583,
											"end": 3587,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 1,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 3541,
											"end": 3588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 9,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "415"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 14,
											"value": "415"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "418"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 14,
											"value": "418"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 14,
											"value": "37"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "421"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 14,
											"value": "421"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "427"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 14,
											"value": "427"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "tag",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1637,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1584,
											"end": 1638,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "tag",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 1734,
											"end": 1739,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 1716,
											"end": 1740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "tag",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1650,
											"end": 1746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "tag",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 1825,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "tag",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1818,
											"end": 1823,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1815,
											"end": 1850,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1862,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1866,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "tag",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1752,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "tag",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 1931,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1970,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "435"
										},
										{
											"begin": 2007,
											"end": 2012,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 1980,
											"end": 2013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "tag",
											"source": 14,
											"value": "435"
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1880,
											"end": 2019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "tag",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2084,
											"end": 2090,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2121,
											"end": 2130,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2112,
											"end": 2119,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "438"
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 2139,
											"end": 2218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "tag",
											"source": 14,
											"value": "438"
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "tag",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2259,
											"end": 2260,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "439"
										},
										{
											"begin": 2329,
											"end": 2336,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2309,
											"end": 2318,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2305,
											"end": 2327,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 2284,
											"end": 2337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "tag",
											"source": 14,
											"value": "439"
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2274,
											"end": 2337,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2274,
											"end": 2337,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2230,
											"end": 2347,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2025,
											"end": 2354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "tag",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2397,
											"end": 2404,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2431,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2415,
											"end": 2431,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2415,
											"end": 2431,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2360,
											"end": 2437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "tag",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 2548,
											"end": 2553,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 2530,
											"end": 2554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "tag",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2525,
											"end": 2528,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2518,
											"end": 2555,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2443,
											"end": 2561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "tag",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2660,
											"end": 2664,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2698,
											"end": 2700,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2687,
											"end": 2696,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2683,
											"end": 2701,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2675,
											"end": 2701,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2675,
											"end": 2701,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2711,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2764,
											"end": 2781,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2755,
											"end": 2761,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2711,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 2711,
											"end": 2782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2711,
											"end": 2782,
											"name": "tag",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 2711,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2567,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2795,
											"end": 2872,
											"name": "tag",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 2795,
											"end": 2872,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2832,
											"end": 2839,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2866,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2850,
											"end": 2866,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2850,
											"end": 2866,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2795,
											"end": 2872,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2795,
											"end": 2872,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2795,
											"end": 2872,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2795,
											"end": 2872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2878,
											"end": 3000,
											"name": "tag",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 2878,
											"end": 3000,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 2951,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "tag",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2944,
											"end": 2949,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2941,
											"end": 2976,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2931,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 2931,
											"end": 2994,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2990,
											"end": 2991,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2987,
											"end": 2988,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2980,
											"end": 2992,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2931,
											"end": 2994,
											"name": "tag",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 2931,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2878,
											"end": 3000,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2878,
											"end": 3000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3006,
											"end": 3145,
											"name": "tag",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 3006,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3052,
											"end": 3057,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3090,
											"end": 3096,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3077,
											"end": 3097,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3068,
											"end": 3097,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3068,
											"end": 3097,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3106,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 3133,
											"end": 3138,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3106,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 3106,
											"end": 3139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3106,
											"end": 3139,
											"name": "tag",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 3106,
											"end": 3139,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3006,
											"end": 3145,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3006,
											"end": 3145,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3006,
											"end": 3145,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3006,
											"end": 3145,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3006,
											"end": 3145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3151,
											"end": 3480,
											"name": "tag",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 3151,
											"end": 3480,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3216,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3259,
											"end": 3261,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3247,
											"end": 3256,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3238,
											"end": 3245,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3234,
											"end": 3257,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3230,
											"end": 3262,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3227,
											"end": 3346,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3227,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 3227,
											"end": 3346,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3265,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 3265,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 3265,
											"end": 3344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3265,
											"end": 3344,
											"name": "tag",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 3265,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3227,
											"end": 3346,
											"name": "tag",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 3227,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3385,
											"end": 3386,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3410,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "454"
										},
										{
											"begin": 3455,
											"end": 3462,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3452,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3435,
											"end": 3444,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3431,
											"end": 3453,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3410,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 3410,
											"end": 3463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3410,
											"end": 3463,
											"name": "tag",
											"source": 14,
											"value": "454"
										},
										{
											"begin": 3410,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3400,
											"end": 3463,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3400,
											"end": 3463,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3356,
											"end": 3473,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3151,
											"end": 3480,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3151,
											"end": 3480,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3151,
											"end": 3480,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3151,
											"end": 3480,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3151,
											"end": 3480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3486,
											"end": 3604,
											"name": "tag",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 3486,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3573,
											"end": 3597,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "456"
										},
										{
											"begin": 3591,
											"end": 3596,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3573,
											"end": 3597,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 3573,
											"end": 3597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3573,
											"end": 3597,
											"name": "tag",
											"source": 14,
											"value": "456"
										},
										{
											"begin": 3573,
											"end": 3597,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3568,
											"end": 3571,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3561,
											"end": 3598,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3486,
											"end": 3604,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3486,
											"end": 3604,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3486,
											"end": 3604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3610,
											"end": 3832,
											"name": "tag",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 3610,
											"end": 3832,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3703,
											"end": 3707,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3741,
											"end": 3743,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3730,
											"end": 3739,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3726,
											"end": 3744,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3718,
											"end": 3744,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3718,
											"end": 3744,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3754,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "458"
										},
										{
											"begin": 3822,
											"end": 3823,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3811,
											"end": 3820,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3807,
											"end": 3824,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3798,
											"end": 3804,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3754,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 3754,
											"end": 3825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3754,
											"end": 3825,
											"name": "tag",
											"source": 14,
											"value": "458"
										},
										{
											"begin": 3754,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3610,
											"end": 3832,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3610,
											"end": 3832,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3610,
											"end": 3832,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3610,
											"end": 3832,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3610,
											"end": 3832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3838,
											"end": 3898,
											"name": "tag",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 3838,
											"end": 3898,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3866,
											"end": 3869,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3887,
											"end": 3892,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3880,
											"end": 3892,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3880,
											"end": 3892,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3838,
											"end": 3898,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3838,
											"end": 3898,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3838,
											"end": 3898,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3838,
											"end": 3898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3904,
											"end": 4046,
											"name": "tag",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 3904,
											"end": 4046,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3954,
											"end": 3963,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3987,
											"end": 4040,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "461"
										},
										{
											"begin": 4005,
											"end": 4039,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 4014,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "463"
										},
										{
											"begin": 4032,
											"end": 4037,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4014,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 4014,
											"end": 4038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4014,
											"end": 4038,
											"name": "tag",
											"source": 14,
											"value": "463"
										},
										{
											"begin": 4014,
											"end": 4038,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4005,
											"end": 4039,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 4005,
											"end": 4039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4005,
											"end": 4039,
											"name": "tag",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 4005,
											"end": 4039,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3987,
											"end": 4040,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 3987,
											"end": 4040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3987,
											"end": 4040,
											"name": "tag",
											"source": 14,
											"value": "461"
										},
										{
											"begin": 3987,
											"end": 4040,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3974,
											"end": 4040,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3974,
											"end": 4040,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3904,
											"end": 4046,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3904,
											"end": 4046,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3904,
											"end": 4046,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3904,
											"end": 4046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4052,
											"end": 4178,
											"name": "tag",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 4052,
											"end": 4178,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4102,
											"end": 4111,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4135,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 4166,
											"end": 4171,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4135,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 4135,
											"end": 4172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4135,
											"end": 4172,
											"name": "tag",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 4135,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4122,
											"end": 4172,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4122,
											"end": 4172,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4052,
											"end": 4178,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4052,
											"end": 4178,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4052,
											"end": 4178,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4052,
											"end": 4178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4184,
											"end": 4338,
											"name": "tag",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 4184,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4262,
											"end": 4271,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4295,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 4326,
											"end": 4331,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4295,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 4295,
											"end": 4332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4295,
											"end": 4332,
											"name": "tag",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 4295,
											"end": 4332,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4282,
											"end": 4332,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4282,
											"end": 4332,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4184,
											"end": 4338,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4184,
											"end": 4338,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4184,
											"end": 4338,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4184,
											"end": 4338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4344,
											"end": 4531,
											"name": "tag",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 4344,
											"end": 4531,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4459,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 4518,
											"end": 4523,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4459,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 4459,
											"end": 4524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4459,
											"end": 4524,
											"name": "tag",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 4459,
											"end": 4524,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4454,
											"end": 4457,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4447,
											"end": 4525,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4344,
											"end": 4531,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4344,
											"end": 4531,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4344,
											"end": 4531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4537,
											"end": 4815,
											"name": "tag",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4537,
											"end": 4815,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4658,
											"end": 4662,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4696,
											"end": 4698,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4685,
											"end": 4694,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4673,
											"end": 4699,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4673,
											"end": 4699,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4709,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4794,
											"end": 4803,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4790,
											"end": 4807,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4781,
											"end": 4787,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4709,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 4709,
											"end": 4808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4709,
											"end": 4808,
											"name": "tag",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 4709,
											"end": 4808,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4537,
											"end": 4815,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4537,
											"end": 4815,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4537,
											"end": 4815,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4537,
											"end": 4815,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4537,
											"end": 4815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4821,
											"end": 5295,
											"name": "tag",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 4821,
											"end": 5295,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4889,
											"end": 4895,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4897,
											"end": 4903,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4946,
											"end": 4948,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4934,
											"end": 4943,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4925,
											"end": 4932,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4921,
											"end": 4944,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 4949,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4914,
											"end": 5033,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4914,
											"end": 5033,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "473"
										},
										{
											"begin": 4914,
											"end": 5033,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4952,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 4952,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 4952,
											"end": 5031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4952,
											"end": 5031,
											"name": "tag",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 4952,
											"end": 5031,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4914,
											"end": 5033,
											"name": "tag",
											"source": 14,
											"value": "473"
										},
										{
											"begin": 4914,
											"end": 5033,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5072,
											"end": 5073,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5097,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "475"
										},
										{
											"begin": 5142,
											"end": 5149,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5133,
											"end": 5139,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5122,
											"end": 5131,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5118,
											"end": 5140,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5097,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 5097,
											"end": 5150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5097,
											"end": 5150,
											"name": "tag",
											"source": 14,
											"value": "475"
										},
										{
											"begin": 5097,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5087,
											"end": 5150,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5087,
											"end": 5150,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5043,
											"end": 5160,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5199,
											"end": 5201,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5225,
											"end": 5278,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "476"
										},
										{
											"begin": 5270,
											"end": 5277,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5261,
											"end": 5267,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5250,
											"end": 5259,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5246,
											"end": 5268,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5225,
											"end": 5278,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 5225,
											"end": 5278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5225,
											"end": 5278,
											"name": "tag",
											"source": 14,
											"value": "476"
										},
										{
											"begin": 5225,
											"end": 5278,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5215,
											"end": 5278,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5215,
											"end": 5278,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5170,
											"end": 5288,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4821,
											"end": 5295,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4821,
											"end": 5295,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4821,
											"end": 5295,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4821,
											"end": 5295,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4821,
											"end": 5295,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4821,
											"end": 5295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5301,
											"end": 5423,
											"name": "tag",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 5301,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5374,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "478"
										},
										{
											"begin": 5392,
											"end": 5397,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5374,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 5374,
											"end": 5398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5374,
											"end": 5398,
											"name": "tag",
											"source": 14,
											"value": "478"
										},
										{
											"begin": 5374,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5367,
											"end": 5372,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5364,
											"end": 5399,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 5354,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "479"
										},
										{
											"begin": 5354,
											"end": 5417,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5413,
											"end": 5414,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5410,
											"end": 5411,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5403,
											"end": 5415,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5354,
											"end": 5417,
											"name": "tag",
											"source": 14,
											"value": "479"
										},
										{
											"begin": 5354,
											"end": 5417,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5301,
											"end": 5423,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5301,
											"end": 5423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5429,
											"end": 5568,
											"name": "tag",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 5429,
											"end": 5568,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5475,
											"end": 5480,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5513,
											"end": 5519,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5500,
											"end": 5520,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 5491,
											"end": 5520,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5491,
											"end": 5520,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5529,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "481"
										},
										{
											"begin": 5556,
											"end": 5561,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5529,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 5529,
											"end": 5562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5529,
											"end": 5562,
											"name": "tag",
											"source": 14,
											"value": "481"
										},
										{
											"begin": 5529,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5429,
											"end": 5568,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5429,
											"end": 5568,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5429,
											"end": 5568,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5429,
											"end": 5568,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5429,
											"end": 5568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5574,
											"end": 6048,
											"name": "tag",
											"source": 14,
											"value": "76"
										},
										{
											"begin": 5574,
											"end": 6048,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5642,
											"end": 5648,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5650,
											"end": 5656,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5699,
											"end": 5701,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5687,
											"end": 5696,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5678,
											"end": 5685,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5674,
											"end": 5697,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5670,
											"end": 5702,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 5667,
											"end": 5786,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5667,
											"end": 5786,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "483"
										},
										{
											"begin": 5667,
											"end": 5786,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5705,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "484"
										},
										{
											"begin": 5705,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 5705,
											"end": 5784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5705,
											"end": 5784,
											"name": "tag",
											"source": 14,
											"value": "484"
										},
										{
											"begin": 5705,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5667,
											"end": 5786,
											"name": "tag",
											"source": 14,
											"value": "483"
										},
										{
											"begin": 5667,
											"end": 5786,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5825,
											"end": 5826,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5850,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "485"
										},
										{
											"begin": 5895,
											"end": 5902,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5886,
											"end": 5892,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5875,
											"end": 5884,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5871,
											"end": 5893,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5850,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 5850,
											"end": 5903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5850,
											"end": 5903,
											"name": "tag",
											"source": 14,
											"value": "485"
										},
										{
											"begin": 5850,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5840,
											"end": 5903,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5840,
											"end": 5903,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5796,
											"end": 5913,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5952,
											"end": 5954,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5978,
											"end": 6031,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 6023,
											"end": 6030,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6014,
											"end": 6020,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6003,
											"end": 6012,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5999,
											"end": 6021,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5978,
											"end": 6031,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 5978,
											"end": 6031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5978,
											"end": 6031,
											"name": "tag",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 5978,
											"end": 6031,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5968,
											"end": 6031,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5968,
											"end": 6031,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5923,
											"end": 6041,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5574,
											"end": 6048,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5574,
											"end": 6048,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5574,
											"end": 6048,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5574,
											"end": 6048,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5574,
											"end": 6048,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5574,
											"end": 6048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6054,
											"end": 6528,
											"name": "tag",
											"source": 14,
											"value": "81"
										},
										{
											"begin": 6054,
											"end": 6528,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6122,
											"end": 6128,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6130,
											"end": 6136,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6181,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6167,
											"end": 6176,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6158,
											"end": 6165,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6154,
											"end": 6177,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6150,
											"end": 6182,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 6147,
											"end": 6266,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6147,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "488"
										},
										{
											"begin": 6147,
											"end": 6266,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6185,
											"end": 6264,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "489"
										},
										{
											"begin": 6185,
											"end": 6264,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 6185,
											"end": 6264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6185,
											"end": 6264,
											"name": "tag",
											"source": 14,
											"value": "489"
										},
										{
											"begin": 6185,
											"end": 6264,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6147,
											"end": 6266,
											"name": "tag",
											"source": 14,
											"value": "488"
										},
										{
											"begin": 6147,
											"end": 6266,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6305,
											"end": 6306,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6330,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 6375,
											"end": 6382,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6366,
											"end": 6372,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6355,
											"end": 6364,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 6351,
											"end": 6373,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6330,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 6330,
											"end": 6383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6330,
											"end": 6383,
											"name": "tag",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 6330,
											"end": 6383,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6320,
											"end": 6383,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6320,
											"end": 6383,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6276,
											"end": 6393,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6432,
											"end": 6434,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6458,
											"end": 6511,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 6503,
											"end": 6510,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6494,
											"end": 6500,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6483,
											"end": 6492,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 6479,
											"end": 6501,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6458,
											"end": 6511,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 6458,
											"end": 6511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6458,
											"end": 6511,
											"name": "tag",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 6458,
											"end": 6511,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6448,
											"end": 6511,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6448,
											"end": 6511,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6403,
											"end": 6521,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6054,
											"end": 6528,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6054,
											"end": 6528,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6054,
											"end": 6528,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6054,
											"end": 6528,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6054,
											"end": 6528,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6054,
											"end": 6528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6534,
											"end": 6648,
											"name": "tag",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 6534,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6601,
											"end": 6607,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6635,
											"end": 6640,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6629,
											"end": 6641,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6619,
											"end": 6641,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6619,
											"end": 6641,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6534,
											"end": 6648,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6534,
											"end": 6648,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6534,
											"end": 6648,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6534,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6654,
											"end": 6838,
											"name": "tag",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 6654,
											"end": 6838,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6753,
											"end": 6764,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6787,
											"end": 6793,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6782,
											"end": 6785,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6775,
											"end": 6794,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6827,
											"end": 6831,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6822,
											"end": 6825,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6818,
											"end": 6832,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6803,
											"end": 6832,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6803,
											"end": 6832,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6654,
											"end": 6838,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6654,
											"end": 6838,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6654,
											"end": 6838,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6654,
											"end": 6838,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6654,
											"end": 6838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6844,
											"end": 6976,
											"name": "tag",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 6844,
											"end": 6976,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6911,
											"end": 6915,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6934,
											"end": 6937,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6926,
											"end": 6937,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6926,
											"end": 6937,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6964,
											"end": 6968,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6959,
											"end": 6962,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6955,
											"end": 6969,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6947,
											"end": 6969,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6947,
											"end": 6969,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6844,
											"end": 6976,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6844,
											"end": 6976,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6844,
											"end": 6976,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6844,
											"end": 6976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6982,
											"end": 7090,
											"name": "tag",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 6982,
											"end": 7090,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7059,
											"end": 7083,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "496"
										},
										{
											"begin": 7077,
											"end": 7082,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7059,
											"end": 7083,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 7059,
											"end": 7083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7059,
											"end": 7083,
											"name": "tag",
											"source": 14,
											"value": "496"
										},
										{
											"begin": 7059,
											"end": 7083,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7054,
											"end": 7057,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7047,
											"end": 7084,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6982,
											"end": 7090,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6982,
											"end": 7090,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6982,
											"end": 7090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7096,
											"end": 7275,
											"name": "tag",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 7096,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7165,
											"end": 7175,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7186,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "498"
										},
										{
											"begin": 7228,
											"end": 7231,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7220,
											"end": 7226,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7186,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 7186,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7186,
											"end": 7232,
											"name": "tag",
											"source": 14,
											"value": "498"
										},
										{
											"begin": 7186,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7264,
											"end": 7268,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7259,
											"end": 7262,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7255,
											"end": 7269,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7241,
											"end": 7269,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7241,
											"end": 7269,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7096,
											"end": 7275,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7096,
											"end": 7275,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7096,
											"end": 7275,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7096,
											"end": 7275,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7096,
											"end": 7275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7281,
											"end": 7394,
											"name": "tag",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 7281,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7351,
											"end": 7355,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7383,
											"end": 7387,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7378,
											"end": 7381,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7374,
											"end": 7388,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7366,
											"end": 7388,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7366,
											"end": 7388,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7281,
											"end": 7394,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7281,
											"end": 7394,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7281,
											"end": 7394,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7281,
											"end": 7394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7430,
											"end": 8162,
											"name": "tag",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 7430,
											"end": 8162,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7549,
											"end": 7552,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7578,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 7626,
											"end": 7631,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7578,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 7578,
											"end": 7632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7578,
											"end": 7632,
											"name": "tag",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 7578,
											"end": 7632,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7648,
											"end": 7734,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "502"
										},
										{
											"begin": 7727,
											"end": 7733,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7722,
											"end": 7725,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7648,
											"end": 7734,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 7648,
											"end": 7734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7648,
											"end": 7734,
											"name": "tag",
											"source": 14,
											"value": "502"
										},
										{
											"begin": 7648,
											"end": 7734,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7641,
											"end": 7734,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 7641,
											"end": 7734,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7758,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 7808,
											"end": 7813,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7758,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 7758,
											"end": 7814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7758,
											"end": 7814,
											"name": "tag",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 7758,
											"end": 7814,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7837,
											"end": 7844,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7868,
											"end": 7869,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7853,
											"end": 8137,
											"name": "tag",
											"source": 14,
											"value": "504"
										},
										{
											"begin": 7853,
											"end": 8137,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7878,
											"end": 7884,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7875,
											"end": 7876,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 7853,
											"end": 8137,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7853,
											"end": 8137,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 7853,
											"end": 8137,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7954,
											"end": 7960,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7948,
											"end": 7961,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 7981,
											"end": 8044,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 8040,
											"end": 8043,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 8025,
											"end": 8038,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7981,
											"end": 8044,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 7981,
											"end": 8044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7981,
											"end": 8044,
											"name": "tag",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 7981,
											"end": 8044,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7974,
											"end": 8044,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": 7974,
											"end": 8044,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8067,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "508"
										},
										{
											"begin": 8120,
											"end": 8126,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8067,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 8067,
											"end": 8127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8067,
											"end": 8127,
											"name": "tag",
											"source": 14,
											"value": "508"
										},
										{
											"begin": 8067,
											"end": 8127,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8057,
											"end": 8127,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8057,
											"end": 8127,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7913,
											"end": 8137,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7900,
											"end": 7901,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 7897,
											"end": 7898,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7893,
											"end": 7902,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7888,
											"end": 7902,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7888,
											"end": 7902,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7853,
											"end": 8137,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "504"
										},
										{
											"begin": 7853,
											"end": 8137,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7853,
											"end": 8137,
											"name": "tag",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 7853,
											"end": 8137,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7857,
											"end": 7871,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8153,
											"end": 8156,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8146,
											"end": 8156,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 8146,
											"end": 8156,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7554,
											"end": 8162,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7554,
											"end": 8162,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7554,
											"end": 8162,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7430,
											"end": 8162,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7430,
											"end": 8162,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7430,
											"end": 8162,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7430,
											"end": 8162,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7430,
											"end": 8162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8168,
											"end": 8541,
											"name": "tag",
											"source": 14,
											"value": "122"
										},
										{
											"begin": 8168,
											"end": 8541,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8311,
											"end": 8315,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8349,
											"end": 8351,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8338,
											"end": 8347,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8334,
											"end": 8352,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8326,
											"end": 8352,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8326,
											"end": 8352,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8398,
											"end": 8407,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8392,
											"end": 8396,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8388,
											"end": 8408,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8384,
											"end": 8385,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8373,
											"end": 8382,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8369,
											"end": 8386,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8362,
											"end": 8409,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8426,
											"end": 8534,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "510"
										},
										{
											"begin": 8529,
											"end": 8533,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8520,
											"end": 8526,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8426,
											"end": 8534,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 8426,
											"end": 8534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8426,
											"end": 8534,
											"name": "tag",
											"source": 14,
											"value": "510"
										},
										{
											"begin": 8426,
											"end": 8534,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8418,
											"end": 8534,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8418,
											"end": 8534,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8168,
											"end": 8541,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8168,
											"end": 8541,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8168,
											"end": 8541,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8168,
											"end": 8541,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8168,
											"end": 8541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8547,
											"end": 8727,
											"name": "tag",
											"source": 14,
											"value": "158"
										},
										{
											"begin": 8547,
											"end": 8727,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8595,
											"end": 8672,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8592,
											"end": 8593,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8585,
											"end": 8673,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8692,
											"end": 8696,
											"name": "PUSH",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 8689,
											"end": 8690,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 8682,
											"end": 8697,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8716,
											"end": 8720,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 8713,
											"end": 8714,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8706,
											"end": 8721,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 8733,
											"end": 8913,
											"name": "tag",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 8733,
											"end": 8913,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8781,
											"end": 8858,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8778,
											"end": 8779,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8771,
											"end": 8859,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8878,
											"end": 8882,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 8875,
											"end": 8876,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 8868,
											"end": 8883,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8902,
											"end": 8906,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 8899,
											"end": 8900,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8892,
											"end": 8907,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 8919,
											"end": 9110,
											"name": "tag",
											"source": 14,
											"value": "164"
										},
										{
											"begin": 8919,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8959,
											"end": 8962,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8978,
											"end": 8998,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "514"
										},
										{
											"begin": 8996,
											"end": 8997,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8978,
											"end": 8998,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 8978,
											"end": 8998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8978,
											"end": 8998,
											"name": "tag",
											"source": 14,
											"value": "514"
										},
										{
											"begin": 8978,
											"end": 8998,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8973,
											"end": 8998,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8973,
											"end": 8998,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9012,
											"end": 9032,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "515"
										},
										{
											"begin": 9030,
											"end": 9031,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9012,
											"end": 9032,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 9012,
											"end": 9032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9012,
											"end": 9032,
											"name": "tag",
											"source": 14,
											"value": "515"
										},
										{
											"begin": 9012,
											"end": 9032,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9007,
											"end": 9032,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9007,
											"end": 9032,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9055,
											"end": 9056,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9052,
											"end": 9053,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9048,
											"end": 9057,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9041,
											"end": 9057,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9041,
											"end": 9057,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9076,
											"end": 9079,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9073,
											"end": 9074,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9070,
											"end": 9080,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 9067,
											"end": 9103,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9067,
											"end": 9103,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "516"
										},
										{
											"begin": 9067,
											"end": 9103,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9083,
											"end": 9101,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "517"
										},
										{
											"begin": 9083,
											"end": 9101,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 9083,
											"end": 9101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9083,
											"end": 9101,
											"name": "tag",
											"source": 14,
											"value": "517"
										},
										{
											"begin": 9083,
											"end": 9101,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9067,
											"end": 9103,
											"name": "tag",
											"source": 14,
											"value": "516"
										},
										{
											"begin": 9067,
											"end": 9103,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8919,
											"end": 9110,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8919,
											"end": 9110,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8919,
											"end": 9110,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8919,
											"end": 9110,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8919,
											"end": 9110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9116,
											"end": 9221,
											"name": "tag",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 9116,
											"end": 9221,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9152,
											"end": 9159,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9192,
											"end": 9214,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9185,
											"end": 9190,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9181,
											"end": 9215,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 9170,
											"end": 9215,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9170,
											"end": 9215,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9116,
											"end": 9221,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9116,
											"end": 9221,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9116,
											"end": 9221,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9116,
											"end": 9221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9227,
											"end": 9347,
											"name": "tag",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 9227,
											"end": 9347,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9299,
											"end": 9322,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "520"
										},
										{
											"begin": 9316,
											"end": 9321,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9299,
											"end": 9322,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 9299,
											"end": 9322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9299,
											"end": 9322,
											"name": "tag",
											"source": 14,
											"value": "520"
										},
										{
											"begin": 9299,
											"end": 9322,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9292,
											"end": 9297,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9289,
											"end": 9323,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 9279,
											"end": 9341,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "521"
										},
										{
											"begin": 9279,
											"end": 9341,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9334,
											"end": 9335,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9327,
											"end": 9339,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 9279,
											"end": 9341,
											"name": "tag",
											"source": 14,
											"value": "521"
										},
										{
											"begin": 9279,
											"end": 9341,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9227,
											"end": 9347,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9227,
											"end": 9347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9353,
											"end": 9494,
											"name": "tag",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 9353,
											"end": 9494,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9409,
											"end": 9414,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9440,
											"end": 9446,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9434,
											"end": 9447,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 9425,
											"end": 9447,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9425,
											"end": 9447,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9456,
											"end": 9488,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "523"
										},
										{
											"begin": 9482,
											"end": 9487,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9456,
											"end": 9488,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 9456,
											"end": 9488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9456,
											"end": 9488,
											"name": "tag",
											"source": 14,
											"value": "523"
										},
										{
											"begin": 9456,
											"end": 9488,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9353,
											"end": 9494,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9353,
											"end": 9494,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9353,
											"end": 9494,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9353,
											"end": 9494,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9353,
											"end": 9494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9500,
											"end": 9576,
											"name": "tag",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 9500,
											"end": 9576,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9536,
											"end": 9543,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9565,
											"end": 9570,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9554,
											"end": 9570,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9554,
											"end": 9570,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9500,
											"end": 9576,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9500,
											"end": 9576,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9500,
											"end": 9576,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9500,
											"end": 9576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9582,
											"end": 9702,
											"name": "tag",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 9582,
											"end": 9702,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9654,
											"end": 9677,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "526"
										},
										{
											"begin": 9671,
											"end": 9676,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9654,
											"end": 9677,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 9654,
											"end": 9677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9654,
											"end": 9677,
											"name": "tag",
											"source": 14,
											"value": "526"
										},
										{
											"begin": 9654,
											"end": 9677,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9647,
											"end": 9652,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9644,
											"end": 9678,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 9634,
											"end": 9696,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "527"
										},
										{
											"begin": 9634,
											"end": 9696,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9692,
											"end": 9693,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9689,
											"end": 9690,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9682,
											"end": 9694,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 9634,
											"end": 9696,
											"name": "tag",
											"source": 14,
											"value": "527"
										},
										{
											"begin": 9634,
											"end": 9696,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9582,
											"end": 9702,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9582,
											"end": 9702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9708,
											"end": 9849,
											"name": "tag",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 9708,
											"end": 9849,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9764,
											"end": 9769,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9795,
											"end": 9801,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9789,
											"end": 9802,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 9780,
											"end": 9802,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9780,
											"end": 9802,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9811,
											"end": 9843,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "529"
										},
										{
											"begin": 9837,
											"end": 9842,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9811,
											"end": 9843,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 9811,
											"end": 9843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9811,
											"end": 9843,
											"name": "tag",
											"source": 14,
											"value": "529"
										},
										{
											"begin": 9811,
											"end": 9843,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9708,
											"end": 9849,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9708,
											"end": 9849,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9708,
											"end": 9849,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9708,
											"end": 9849,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9708,
											"end": 9849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9855,
											"end": 9998,
											"name": "tag",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 9855,
											"end": 9998,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9912,
											"end": 9917,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9943,
											"end": 9949,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9937,
											"end": 9950,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 9928,
											"end": 9950,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9928,
											"end": 9950,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9959,
											"end": 9992,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "531"
										},
										{
											"begin": 9986,
											"end": 9991,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9959,
											"end": 9992,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 9959,
											"end": 9992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9959,
											"end": 9992,
											"name": "tag",
											"source": 14,
											"value": "531"
										},
										{
											"begin": 9959,
											"end": 9992,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9855,
											"end": 9998,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9855,
											"end": 9998,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9855,
											"end": 9998,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9855,
											"end": 9998,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9855,
											"end": 9998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10004,
											"end": 10975,
											"name": "tag",
											"source": 14,
											"value": "180"
										},
										{
											"begin": 10004,
											"end": 10975,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10107,
											"end": 10113,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10115,
											"end": 10121,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10123,
											"end": 10129,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10131,
											"end": 10137,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10139,
											"end": 10145,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10188,
											"end": 10191,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 10176,
											"end": 10185,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10167,
											"end": 10174,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 10163,
											"end": 10186,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 10159,
											"end": 10192,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 10156,
											"end": 10276,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10156,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "533"
										},
										{
											"begin": 10156,
											"end": 10276,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10195,
											"end": 10274,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "534"
										},
										{
											"begin": 10195,
											"end": 10274,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 10195,
											"end": 10274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10195,
											"end": 10274,
											"name": "tag",
											"source": 14,
											"value": "534"
										},
										{
											"begin": 10195,
											"end": 10274,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10156,
											"end": 10276,
											"name": "tag",
											"source": 14,
											"value": "533"
										},
										{
											"begin": 10156,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10315,
											"end": 10316,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10340,
											"end": 10403,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 10395,
											"end": 10402,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 10386,
											"end": 10392,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10375,
											"end": 10384,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 10371,
											"end": 10393,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10340,
											"end": 10403,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 10340,
											"end": 10403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10340,
											"end": 10403,
											"name": "tag",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 10340,
											"end": 10403,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10330,
											"end": 10403,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 10330,
											"end": 10403,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10286,
											"end": 10413,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10452,
											"end": 10454,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10478,
											"end": 10541,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 10533,
											"end": 10540,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 10524,
											"end": 10530,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10513,
											"end": 10522,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 10509,
											"end": 10531,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10478,
											"end": 10541,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 10478,
											"end": 10541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10478,
											"end": 10541,
											"name": "tag",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 10478,
											"end": 10541,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10468,
											"end": 10541,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 10468,
											"end": 10541,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10423,
											"end": 10551,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10590,
											"end": 10592,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10616,
											"end": 10680,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "537"
										},
										{
											"begin": 10672,
											"end": 10679,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 10663,
											"end": 10669,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10652,
											"end": 10661,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 10648,
											"end": 10670,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10616,
											"end": 10680,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 10616,
											"end": 10680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10616,
											"end": 10680,
											"name": "tag",
											"source": 14,
											"value": "537"
										},
										{
											"begin": 10616,
											"end": 10680,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10606,
											"end": 10680,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 10606,
											"end": 10680,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10561,
											"end": 10690,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10729,
											"end": 10731,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 10755,
											"end": 10819,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "538"
										},
										{
											"begin": 10811,
											"end": 10818,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 10802,
											"end": 10808,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10791,
											"end": 10800,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 10787,
											"end": 10809,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10755,
											"end": 10819,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 10755,
											"end": 10819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10755,
											"end": 10819,
											"name": "tag",
											"source": 14,
											"value": "538"
										},
										{
											"begin": 10755,
											"end": 10819,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10745,
											"end": 10819,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10745,
											"end": 10819,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10700,
											"end": 10829,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10868,
											"end": 10871,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 10895,
											"end": 10958,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "539"
										},
										{
											"begin": 10950,
											"end": 10957,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 10941,
											"end": 10947,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10930,
											"end": 10939,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 10926,
											"end": 10948,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10895,
											"end": 10958,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 10895,
											"end": 10958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10895,
											"end": 10958,
											"name": "tag",
											"source": 14,
											"value": "539"
										},
										{
											"begin": 10895,
											"end": 10958,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10885,
											"end": 10958,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10885,
											"end": 10958,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10839,
											"end": 10968,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10004,
											"end": 10975,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10004,
											"end": 10975,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 10004,
											"end": 10975,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10004,
											"end": 10975,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10004,
											"end": 10975,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 10004,
											"end": 10975,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10004,
											"end": 10975,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 10004,
											"end": 10975,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10004,
											"end": 10975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10981,
											"end": 11214,
											"name": "tag",
											"source": 14,
											"value": "205"
										},
										{
											"begin": 10981,
											"end": 11214,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11020,
											"end": 11023,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11043,
											"end": 11067,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "541"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11043,
											"end": 11067,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 11043,
											"end": 11067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11043,
											"end": 11067,
											"name": "tag",
											"source": 14,
											"value": "541"
										},
										{
											"begin": 11043,
											"end": 11067,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11034,
											"end": 11067,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11034,
											"end": 11067,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11089,
											"end": 11155,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11082,
											"end": 11087,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11079,
											"end": 11156,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11076,
											"end": 11179,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "542"
										},
										{
											"begin": 11076,
											"end": 11179,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11159,
											"end": 11177,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "543"
										},
										{
											"begin": 11159,
											"end": 11177,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 11159,
											"end": 11177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11159,
											"end": 11177,
											"name": "tag",
											"source": 14,
											"value": "543"
										},
										{
											"begin": 11159,
											"end": 11177,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11076,
											"end": 11179,
											"name": "tag",
											"source": 14,
											"value": "542"
										},
										{
											"begin": 11076,
											"end": 11179,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11206,
											"end": 11207,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 11199,
											"end": 11204,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11195,
											"end": 11208,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11188,
											"end": 11208,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11188,
											"end": 11208,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10981,
											"end": 11214,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10981,
											"end": 11214,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10981,
											"end": 11214,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10981,
											"end": 11214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11220,
											"end": 11552,
											"name": "tag",
											"source": 14,
											"value": "209"
										},
										{
											"begin": 11220,
											"end": 11552,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11341,
											"end": 11345,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11379,
											"end": 11381,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11368,
											"end": 11377,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11364,
											"end": 11382,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11356,
											"end": 11382,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11356,
											"end": 11382,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11392,
											"end": 11463,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "545"
										},
										{
											"begin": 11460,
											"end": 11461,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11449,
											"end": 11458,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11445,
											"end": 11462,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11436,
											"end": 11442,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11392,
											"end": 11463,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 11392,
											"end": 11463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11392,
											"end": 11463,
											"name": "tag",
											"source": 14,
											"value": "545"
										},
										{
											"begin": 11392,
											"end": 11463,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11473,
											"end": 11545,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "546"
										},
										{
											"begin": 11541,
											"end": 11543,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11530,
											"end": 11539,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11526,
											"end": 11544,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11517,
											"end": 11523,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11473,
											"end": 11545,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 11473,
											"end": 11545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11473,
											"end": 11545,
											"name": "tag",
											"source": 14,
											"value": "546"
										},
										{
											"begin": 11473,
											"end": 11545,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11220,
											"end": 11552,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 11220,
											"end": 11552,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11220,
											"end": 11552,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11220,
											"end": 11552,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11220,
											"end": 11552,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11220,
											"end": 11552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11558,
											"end": 11752,
											"name": "tag",
											"source": 14,
											"value": "245"
										},
										{
											"begin": 11558,
											"end": 11752,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11598,
											"end": 11602,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11618,
											"end": 11638,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "548"
										},
										{
											"begin": 11636,
											"end": 11637,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11618,
											"end": 11638,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 11618,
											"end": 11638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11618,
											"end": 11638,
											"name": "tag",
											"source": 14,
											"value": "548"
										},
										{
											"begin": 11618,
											"end": 11638,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11613,
											"end": 11638,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11613,
											"end": 11638,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11672,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 11670,
											"end": 11671,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11672,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 11652,
											"end": 11672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11672,
											"name": "tag",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 11652,
											"end": 11672,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11647,
											"end": 11672,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11647,
											"end": 11672,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11696,
											"end": 11697,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11693,
											"end": 11694,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11689,
											"end": 11698,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11681,
											"end": 11698,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11681,
											"end": 11698,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11720,
											"end": 11721,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11714,
											"end": 11718,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11711,
											"end": 11722,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 11708,
											"end": 11745,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11708,
											"end": 11745,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "550"
										},
										{
											"begin": 11708,
											"end": 11745,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11725,
											"end": 11743,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "551"
										},
										{
											"begin": 11725,
											"end": 11743,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 11725,
											"end": 11743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11725,
											"end": 11743,
											"name": "tag",
											"source": 14,
											"value": "551"
										},
										{
											"begin": 11725,
											"end": 11743,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11708,
											"end": 11745,
											"name": "tag",
											"source": 14,
											"value": "550"
										},
										{
											"begin": 11708,
											"end": 11745,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11558,
											"end": 11752,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11558,
											"end": 11752,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11558,
											"end": 11752,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11558,
											"end": 11752,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11558,
											"end": 11752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11758,
											"end": 11938,
											"name": "tag",
											"source": 14,
											"value": "254"
										},
										{
											"begin": 11758,
											"end": 11938,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11806,
											"end": 11883,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11803,
											"end": 11804,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11796,
											"end": 11884,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11903,
											"end": 11907,
											"name": "PUSH",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 11900,
											"end": 11901,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 11893,
											"end": 11908,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11927,
											"end": 11931,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 11924,
											"end": 11925,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11917,
											"end": 11932,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 11944,
											"end": 12091,
											"name": "tag",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 11944,
											"end": 12091,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12045,
											"end": 12056,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12082,
											"end": 12085,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12067,
											"end": 12085,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12067,
											"end": 12085,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11944,
											"end": 12091,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11944,
											"end": 12091,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11944,
											"end": 12091,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11944,
											"end": 12091,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11944,
											"end": 12091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12097,
											"end": 12211,
											"name": "tag",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 12097,
											"end": 12211,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12097,
											"end": 12211,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12097,
											"end": 12211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12217,
											"end": 12615,
											"name": "tag",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 12217,
											"end": 12615,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12376,
											"end": 12379,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12397,
											"end": 12480,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "556"
										},
										{
											"begin": 12478,
											"end": 12479,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12473,
											"end": 12476,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12397,
											"end": 12480,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 12397,
											"end": 12480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12397,
											"end": 12480,
											"name": "tag",
											"source": 14,
											"value": "556"
										},
										{
											"begin": 12397,
											"end": 12480,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12390,
											"end": 12480,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12390,
											"end": 12480,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12489,
											"end": 12582,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "557"
										},
										{
											"begin": 12578,
											"end": 12581,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12489,
											"end": 12582,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 12489,
											"end": 12582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12489,
											"end": 12582,
											"name": "tag",
											"source": 14,
											"value": "557"
										},
										{
											"begin": 12489,
											"end": 12582,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12607,
											"end": 12608,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12602,
											"end": 12605,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12598,
											"end": 12609,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12591,
											"end": 12609,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12591,
											"end": 12609,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12217,
											"end": 12615,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12217,
											"end": 12615,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12217,
											"end": 12615,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12217,
											"end": 12615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12621,
											"end": 13000,
											"name": "tag",
											"source": 14,
											"value": "271"
										},
										{
											"begin": 12621,
											"end": 13000,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12805,
											"end": 12808,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12827,
											"end": 12974,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "559"
										},
										{
											"begin": 12970,
											"end": 12973,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12827,
											"end": 12974,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 12827,
											"end": 12974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12827,
											"end": 12974,
											"name": "tag",
											"source": 14,
											"value": "559"
										},
										{
											"begin": 12827,
											"end": 12974,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12820,
											"end": 12974,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12820,
											"end": 12974,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12991,
											"end": 12994,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12984,
											"end": 12994,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12984,
											"end": 12994,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12621,
											"end": 13000,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12621,
											"end": 13000,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12621,
											"end": 13000,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12621,
											"end": 13000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13006,
											"end": 13092,
											"name": "tag",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 13006,
											"end": 13092,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13041,
											"end": 13048,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13081,
											"end": 13085,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 13074,
											"end": 13079,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13070,
											"end": 13086,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13059,
											"end": 13086,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13059,
											"end": 13086,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13006,
											"end": 13092,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13006,
											"end": 13092,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13006,
											"end": 13092,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13006,
											"end": 13092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13098,
											"end": 13216,
											"name": "tag",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 13098,
											"end": 13216,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13169,
											"end": 13191,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "562"
										},
										{
											"begin": 13185,
											"end": 13190,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13169,
											"end": 13191,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 13169,
											"end": 13191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13169,
											"end": 13191,
											"name": "tag",
											"source": 14,
											"value": "562"
										},
										{
											"begin": 13169,
											"end": 13191,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13162,
											"end": 13167,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13159,
											"end": 13192,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 13149,
											"end": 13210,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 13149,
											"end": 13210,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13206,
											"end": 13207,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13203,
											"end": 13204,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13196,
											"end": 13208,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 13149,
											"end": 13210,
											"name": "tag",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 13149,
											"end": 13210,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13098,
											"end": 13216,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13098,
											"end": 13216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13222,
											"end": 13361,
											"name": "tag",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 13222,
											"end": 13361,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13277,
											"end": 13282,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13308,
											"end": 13314,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13302,
											"end": 13315,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 13293,
											"end": 13315,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13293,
											"end": 13315,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13324,
											"end": 13355,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "565"
										},
										{
											"begin": 13349,
											"end": 13354,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13324,
											"end": 13355,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 13324,
											"end": 13355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13324,
											"end": 13355,
											"name": "tag",
											"source": 14,
											"value": "565"
										},
										{
											"begin": 13324,
											"end": 13355,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13222,
											"end": 13361,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13222,
											"end": 13361,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13222,
											"end": 13361,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13222,
											"end": 13361,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13222,
											"end": 13361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13367,
											"end": 13714,
											"name": "tag",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 13367,
											"end": 13714,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13435,
											"end": 13441,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13484,
											"end": 13486,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13472,
											"end": 13481,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13463,
											"end": 13470,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13459,
											"end": 13482,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 13455,
											"end": 13487,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 13452,
											"end": 13571,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13452,
											"end": 13571,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "567"
										},
										{
											"begin": 13452,
											"end": 13571,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13490,
											"end": 13569,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "568"
										},
										{
											"begin": 13490,
											"end": 13569,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 13490,
											"end": 13569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13490,
											"end": 13569,
											"name": "tag",
											"source": 14,
											"value": "568"
										},
										{
											"begin": 13490,
											"end": 13569,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13452,
											"end": 13571,
											"name": "tag",
											"source": 14,
											"value": "567"
										},
										{
											"begin": 13452,
											"end": 13571,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13610,
											"end": 13611,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13635,
											"end": 13697,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "569"
										},
										{
											"begin": 13689,
											"end": 13696,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13680,
											"end": 13686,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13669,
											"end": 13678,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13665,
											"end": 13687,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13635,
											"end": 13697,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 13635,
											"end": 13697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13635,
											"end": 13697,
											"name": "tag",
											"source": 14,
											"value": "569"
										},
										{
											"begin": 13635,
											"end": 13697,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13625,
											"end": 13697,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13625,
											"end": 13697,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13581,
											"end": 13707,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13367,
											"end": 13714,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13367,
											"end": 13714,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13367,
											"end": 13714,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13367,
											"end": 13714,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13367,
											"end": 13714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13720,
											"end": 14130,
											"name": "tag",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 13720,
											"end": 14130,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13760,
											"end": 13767,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13783,
											"end": 13803,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 13801,
											"end": 13802,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13783,
											"end": 13803,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 13783,
											"end": 13803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13783,
											"end": 13803,
											"name": "tag",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 13783,
											"end": 13803,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13778,
											"end": 13803,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13778,
											"end": 13803,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13817,
											"end": 13837,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "572"
										},
										{
											"begin": 13835,
											"end": 13836,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13817,
											"end": 13837,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 13817,
											"end": 13837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13817,
											"end": 13837,
											"name": "tag",
											"source": 14,
											"value": "572"
										},
										{
											"begin": 13817,
											"end": 13837,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13812,
											"end": 13837,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13812,
											"end": 13837,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13872,
											"end": 13873,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13869,
											"end": 13870,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13865,
											"end": 13874,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 13894,
											"end": 13924,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "573"
										},
										{
											"begin": 13912,
											"end": 13923,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13894,
											"end": 13924,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 13894,
											"end": 13924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13894,
											"end": 13924,
											"name": "tag",
											"source": 14,
											"value": "573"
										},
										{
											"begin": 13894,
											"end": 13924,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13883,
											"end": 13924,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13883,
											"end": 13924,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14073,
											"end": 14074,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14064,
											"end": 14071,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14060,
											"end": 14075,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 14057,
											"end": 14058,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14054,
											"end": 14076,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 14034,
											"end": 14035,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14027,
											"end": 14036,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14007,
											"end": 14090,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 13984,
											"end": 14123,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "574"
										},
										{
											"begin": 13984,
											"end": 14123,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14103,
											"end": 14121,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "575"
										},
										{
											"begin": 14103,
											"end": 14121,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 14103,
											"end": 14121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14103,
											"end": 14121,
											"name": "tag",
											"source": 14,
											"value": "575"
										},
										{
											"begin": 14103,
											"end": 14121,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13984,
											"end": 14123,
											"name": "tag",
											"source": 14,
											"value": "574"
										},
										{
											"begin": 13984,
											"end": 14123,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13768,
											"end": 14130,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13720,
											"end": 14130,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13720,
											"end": 14130,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13720,
											"end": 14130,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13720,
											"end": 14130,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13720,
											"end": 14130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14136,
											"end": 14316,
											"name": "tag",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 14136,
											"end": 14316,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14184,
											"end": 14261,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14181,
											"end": 14182,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14174,
											"end": 14262,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14281,
											"end": 14285,
											"name": "PUSH",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 14278,
											"end": 14279,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 14271,
											"end": 14286,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14305,
											"end": 14309,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 14302,
											"end": 14303,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14295,
											"end": 14310,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 14322,
											"end": 14507,
											"name": "tag",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 14322,
											"end": 14507,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14362,
											"end": 14363,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14379,
											"end": 14399,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 14397,
											"end": 14398,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14379,
											"end": 14399,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 14379,
											"end": 14399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14379,
											"end": 14399,
											"name": "tag",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 14379,
											"end": 14399,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14374,
											"end": 14399,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14374,
											"end": 14399,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14413,
											"end": 14433,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "579"
										},
										{
											"begin": 14431,
											"end": 14432,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14413,
											"end": 14433,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 14413,
											"end": 14433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14413,
											"end": 14433,
											"name": "tag",
											"source": 14,
											"value": "579"
										},
										{
											"begin": 14413,
											"end": 14433,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14408,
											"end": 14433,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14408,
											"end": 14433,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14452,
											"end": 14453,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14442,
											"end": 14477,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "580"
										},
										{
											"begin": 14442,
											"end": 14477,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14457,
											"end": 14475,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "581"
										},
										{
											"begin": 14457,
											"end": 14475,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 14457,
											"end": 14475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14457,
											"end": 14475,
											"name": "tag",
											"source": 14,
											"value": "581"
										},
										{
											"begin": 14457,
											"end": 14475,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14442,
											"end": 14477,
											"name": "tag",
											"source": 14,
											"value": "580"
										},
										{
											"begin": 14442,
											"end": 14477,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14499,
											"end": 14500,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14496,
											"end": 14497,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14492,
											"end": 14501,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 14487,
											"end": 14501,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14487,
											"end": 14501,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14322,
											"end": 14507,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14322,
											"end": 14507,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14322,
											"end": 14507,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14322,
											"end": 14507,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14322,
											"end": 14507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14513,
											"end": 14682,
											"name": "tag",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 14513,
											"end": 14682,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14597,
											"end": 14608,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14631,
											"end": 14637,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14626,
											"end": 14629,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14619,
											"end": 14638,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14671,
											"end": 14675,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14666,
											"end": 14669,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14662,
											"end": 14676,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14647,
											"end": 14676,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14647,
											"end": 14676,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14513,
											"end": 14682,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14513,
											"end": 14682,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14513,
											"end": 14682,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14513,
											"end": 14682,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14513,
											"end": 14682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14869,
											"name": "tag",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 14688,
											"end": 14869,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14828,
											"end": 14861,
											"name": "PUSH",
											"source": 14,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 14824,
											"end": 14825,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14816,
											"end": 14822,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14812,
											"end": 14826,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14805,
											"end": 14862,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14869,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14875,
											"end": 15241,
											"name": "tag",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 14875,
											"end": 15241,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15017,
											"end": 15020,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15038,
											"end": 15105,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "585"
										},
										{
											"begin": 15102,
											"end": 15104,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 15097,
											"end": 15100,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15038,
											"end": 15105,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 15038,
											"end": 15105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15038,
											"end": 15105,
											"name": "tag",
											"source": 14,
											"value": "585"
										},
										{
											"begin": 15038,
											"end": 15105,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15031,
											"end": 15105,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15031,
											"end": 15105,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15114,
											"end": 15207,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "586"
										},
										{
											"begin": 15203,
											"end": 15206,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15114,
											"end": 15207,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 15114,
											"end": 15207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15114,
											"end": 15207,
											"name": "tag",
											"source": 14,
											"value": "586"
										},
										{
											"begin": 15114,
											"end": 15207,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15232,
											"end": 15234,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15227,
											"end": 15230,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15223,
											"end": 15235,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15216,
											"end": 15235,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15216,
											"end": 15235,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14875,
											"end": 15241,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14875,
											"end": 15241,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14875,
											"end": 15241,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14875,
											"end": 15241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15247,
											"end": 15666,
											"name": "tag",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 15247,
											"end": 15666,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15413,
											"end": 15417,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15451,
											"end": 15453,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15440,
											"end": 15449,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15436,
											"end": 15454,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15428,
											"end": 15454,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15428,
											"end": 15454,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15500,
											"end": 15509,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15494,
											"end": 15498,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15490,
											"end": 15510,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 15486,
											"end": 15487,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15475,
											"end": 15484,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15471,
											"end": 15488,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15464,
											"end": 15511,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15528,
											"end": 15659,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "588"
										},
										{
											"begin": 15654,
											"end": 15658,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15528,
											"end": 15659,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 15528,
											"end": 15659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15528,
											"end": 15659,
											"name": "tag",
											"source": 14,
											"value": "588"
										},
										{
											"begin": 15528,
											"end": 15659,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15520,
											"end": 15659,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15520,
											"end": 15659,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15247,
											"end": 15666,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15247,
											"end": 15666,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15247,
											"end": 15666,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15247,
											"end": 15666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15672,
											"end": 15790,
											"name": "tag",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 15672,
											"end": 15790,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15759,
											"end": 15783,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "590"
										},
										{
											"begin": 15777,
											"end": 15782,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15759,
											"end": 15783,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 15759,
											"end": 15783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15759,
											"end": 15783,
											"name": "tag",
											"source": 14,
											"value": "590"
										},
										{
											"begin": 15759,
											"end": 15783,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15754,
											"end": 15757,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15747,
											"end": 15784,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15672,
											"end": 15790,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15672,
											"end": 15790,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15672,
											"end": 15790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15796,
											"end": 16238,
											"name": "tag",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 15796,
											"end": 16238,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15945,
											"end": 15949,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15983,
											"end": 15985,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 15972,
											"end": 15981,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15968,
											"end": 15986,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15960,
											"end": 15986,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15960,
											"end": 15986,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15996,
											"end": 16067,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "592"
										},
										{
											"begin": 16064,
											"end": 16065,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16053,
											"end": 16062,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16049,
											"end": 16066,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16040,
											"end": 16046,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 15996,
											"end": 16067,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 15996,
											"end": 16067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15996,
											"end": 16067,
											"name": "tag",
											"source": 14,
											"value": "592"
										},
										{
											"begin": 15996,
											"end": 16067,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16077,
											"end": 16149,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "593"
										},
										{
											"begin": 16145,
											"end": 16147,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16134,
											"end": 16143,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16130,
											"end": 16148,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16121,
											"end": 16127,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 16077,
											"end": 16149,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 16077,
											"end": 16149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16077,
											"end": 16149,
											"name": "tag",
											"source": 14,
											"value": "593"
										},
										{
											"begin": 16077,
											"end": 16149,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16159,
											"end": 16231,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "594"
										},
										{
											"begin": 16227,
											"end": 16229,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 16216,
											"end": 16225,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16212,
											"end": 16230,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16203,
											"end": 16209,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 16159,
											"end": 16231,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 16159,
											"end": 16231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16159,
											"end": 16231,
											"name": "tag",
											"source": 14,
											"value": "594"
										},
										{
											"begin": 16159,
											"end": 16231,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15796,
											"end": 16238,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 15796,
											"end": 16238,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 15796,
											"end": 16238,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15796,
											"end": 16238,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15796,
											"end": 16238,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15796,
											"end": 16238,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15796,
											"end": 16238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16244,
											"end": 16576,
											"name": "tag",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 16244,
											"end": 16576,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16365,
											"end": 16369,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16403,
											"end": 16405,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 16392,
											"end": 16401,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16388,
											"end": 16406,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16380,
											"end": 16406,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16380,
											"end": 16406,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16416,
											"end": 16487,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "596"
										},
										{
											"begin": 16484,
											"end": 16485,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16473,
											"end": 16482,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16469,
											"end": 16486,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16460,
											"end": 16466,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 16416,
											"end": 16487,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 16416,
											"end": 16487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16416,
											"end": 16487,
											"name": "tag",
											"source": 14,
											"value": "596"
										},
										{
											"begin": 16416,
											"end": 16487,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16497,
											"end": 16569,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "597"
										},
										{
											"begin": 16565,
											"end": 16567,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16554,
											"end": 16563,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16550,
											"end": 16568,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16541,
											"end": 16547,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 16497,
											"end": 16569,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 16497,
											"end": 16569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16497,
											"end": 16569,
											"name": "tag",
											"source": 14,
											"value": "597"
										},
										{
											"begin": 16497,
											"end": 16569,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16244,
											"end": 16576,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 16244,
											"end": 16576,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16244,
											"end": 16576,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16244,
											"end": 16576,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16244,
											"end": 16576,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16244,
											"end": 16576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16582,
											"end": 16773,
											"name": "tag",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 16582,
											"end": 16773,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16620,
											"end": 16624,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16640,
											"end": 16658,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "599"
										},
										{
											"begin": 16656,
											"end": 16657,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16640,
											"end": 16658,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 16640,
											"end": 16658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16640,
											"end": 16658,
											"name": "tag",
											"source": 14,
											"value": "599"
										},
										{
											"begin": 16640,
											"end": 16658,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16635,
											"end": 16658,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16635,
											"end": 16658,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16672,
											"end": 16690,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "600"
										},
										{
											"begin": 16688,
											"end": 16689,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16672,
											"end": 16690,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 16672,
											"end": 16690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16672,
											"end": 16690,
											"name": "tag",
											"source": 14,
											"value": "600"
										},
										{
											"begin": 16672,
											"end": 16690,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16667,
											"end": 16690,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16667,
											"end": 16690,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16714,
											"end": 16715,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16711,
											"end": 16712,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16707,
											"end": 16716,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 16699,
											"end": 16716,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16699,
											"end": 16716,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16738,
											"end": 16742,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 16732,
											"end": 16736,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16729,
											"end": 16743,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 16726,
											"end": 16766,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16726,
											"end": 16766,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "601"
										},
										{
											"begin": 16726,
											"end": 16766,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 16746,
											"end": 16764,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "602"
										},
										{
											"begin": 16746,
											"end": 16764,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 16746,
											"end": 16764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16746,
											"end": 16764,
											"name": "tag",
											"source": 14,
											"value": "602"
										},
										{
											"begin": 16746,
											"end": 16764,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16726,
											"end": 16766,
											"name": "tag",
											"source": 14,
											"value": "601"
										},
										{
											"begin": 16726,
											"end": 16766,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16582,
											"end": 16773,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16582,
											"end": 16773,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16582,
											"end": 16773,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16582,
											"end": 16773,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16582,
											"end": 16773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16779,
											"end": 16881,
											"name": "tag",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 16779,
											"end": 16881,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16821,
											"end": 16829,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16868,
											"end": 16873,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16865,
											"end": 16866,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 16861,
											"end": 16874,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 16840,
											"end": 16874,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16840,
											"end": 16874,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16779,
											"end": 16881,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16779,
											"end": 16881,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16779,
											"end": 16881,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16779,
											"end": 16881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16887,
											"end": 17735,
											"name": "tag",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 16887,
											"end": 17735,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16948,
											"end": 16953,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16955,
											"end": 16959,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16979,
											"end": 16985,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16970,
											"end": 16985,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16970,
											"end": 16985,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17003,
											"end": 17008,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16994,
											"end": 17008,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16994,
											"end": 17008,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17017,
											"end": 17729,
											"name": "tag",
											"source": 14,
											"value": "605"
										},
										{
											"begin": 17017,
											"end": 17729,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17038,
											"end": 17039,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 17028,
											"end": 17036,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 17025,
											"end": 17040,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 17017,
											"end": 17729,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 17017,
											"end": 17729,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "607"
										},
										{
											"begin": 17017,
											"end": 17729,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 17133,
											"end": 17137,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 17128,
											"end": 17131,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 17124,
											"end": 17138,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 17118,
											"end": 17122,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17115,
											"end": 17139,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 17112,
											"end": 17162,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 17112,
											"end": 17162,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "608"
										},
										{
											"begin": 17112,
											"end": 17162,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 17142,
											"end": 17160,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "609"
										},
										{
											"begin": 17142,
											"end": 17160,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 17142,
											"end": 17160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17142,
											"end": 17160,
											"name": "tag",
											"source": 14,
											"value": "609"
										},
										{
											"begin": 17142,
											"end": 17160,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17112,
											"end": 17162,
											"name": "tag",
											"source": 14,
											"value": "608"
										},
										{
											"begin": 17112,
											"end": 17162,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17192,
											"end": 17193,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 17182,
											"end": 17190,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 17178,
											"end": 17194,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 17175,
											"end": 17626,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 17175,
											"end": 17626,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "610"
										},
										{
											"begin": 17175,
											"end": 17626,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 17607,
											"end": 17611,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 17600,
											"end": 17605,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17596,
											"end": 17612,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 17587,
											"end": 17612,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17587,
											"end": 17612,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17175,
											"end": 17626,
											"name": "tag",
											"source": 14,
											"value": "610"
										},
										{
											"begin": 17175,
											"end": 17626,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17657,
											"end": 17661,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 17651,
											"end": 17655,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17647,
											"end": 17662,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 17639,
											"end": 17662,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17639,
											"end": 17662,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17687,
											"end": 17719,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "611"
										},
										{
											"begin": 17710,
											"end": 17718,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 17687,
											"end": 17719,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 17687,
											"end": 17719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17687,
											"end": 17719,
											"name": "tag",
											"source": 14,
											"value": "611"
										},
										{
											"begin": 17687,
											"end": 17719,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17675,
											"end": 17719,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 17675,
											"end": 17719,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17017,
											"end": 17729,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "605"
										},
										{
											"begin": 17017,
											"end": 17729,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17017,
											"end": 17729,
											"name": "tag",
											"source": 14,
											"value": "607"
										},
										{
											"begin": 17017,
											"end": 17729,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16887,
											"end": 17735,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 16887,
											"end": 17735,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16887,
											"end": 17735,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 16887,
											"end": 17735,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16887,
											"end": 17735,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16887,
											"end": 17735,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16887,
											"end": 17735,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16887,
											"end": 17735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17741,
											"end": 18814,
											"name": "tag",
											"source": 14,
											"value": "408"
										},
										{
											"begin": 17741,
											"end": 18814,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17795,
											"end": 17800,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17986,
											"end": 17994,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17976,
											"end": 18016,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "613"
										},
										{
											"begin": 17976,
											"end": 18016,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18007,
											"end": 18008,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 17998,
											"end": 18008,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17998,
											"end": 18008,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18009,
											"end": 18014,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "612"
										},
										{
											"begin": 18009,
											"end": 18014,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17976,
											"end": 18016,
											"name": "tag",
											"source": 14,
											"value": "613"
										},
										{
											"begin": 17976,
											"end": 18016,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18035,
											"end": 18039,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18025,
											"end": 18061,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "614"
										},
										{
											"begin": 18025,
											"end": 18061,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18052,
											"end": 18053,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18043,
											"end": 18053,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18043,
											"end": 18053,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18054,
											"end": 18059,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "612"
										},
										{
											"begin": 18054,
											"end": 18059,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18025,
											"end": 18061,
											"name": "tag",
											"source": 14,
											"value": "614"
										},
										{
											"begin": 18025,
											"end": 18061,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18121,
											"end": 18125,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18169,
											"end": 18170,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 18164,
											"end": 18191,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18164,
											"end": 18191,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 18164,
											"end": 18191,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "616"
										},
										{
											"begin": 18164,
											"end": 18191,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18205,
											"end": 18206,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 18200,
											"end": 18391,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18200,
											"end": 18391,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 18200,
											"end": 18391,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "617"
										},
										{
											"begin": 18200,
											"end": 18391,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18114,
											"end": 18391,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "615"
										},
										{
											"begin": 18114,
											"end": 18391,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18164,
											"end": 18191,
											"name": "tag",
											"source": 14,
											"value": "616"
										},
										{
											"begin": 18164,
											"end": 18191,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18182,
											"end": 18183,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 18173,
											"end": 18183,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18173,
											"end": 18183,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18184,
											"end": 18189,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18184,
											"end": 18189,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "612"
										},
										{
											"begin": 18184,
											"end": 18189,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18200,
											"end": 18391,
											"name": "tag",
											"source": 14,
											"value": "617"
										},
										{
											"begin": 18200,
											"end": 18391,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18245,
											"end": 18248,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 18235,
											"end": 18243,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 18232,
											"end": 18249,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 18229,
											"end": 18272,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 18229,
											"end": 18272,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "618"
										},
										{
											"begin": 18229,
											"end": 18272,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18252,
											"end": 18270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "619"
										},
										{
											"begin": 18252,
											"end": 18270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 18252,
											"end": 18270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18252,
											"end": 18270,
											"name": "tag",
											"source": 14,
											"value": "619"
										},
										{
											"begin": 18252,
											"end": 18270,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18229,
											"end": 18272,
											"name": "tag",
											"source": 14,
											"value": "618"
										},
										{
											"begin": 18229,
											"end": 18272,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18301,
											"end": 18309,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18298,
											"end": 18299,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 18294,
											"end": 18310,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 18285,
											"end": 18310,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18285,
											"end": 18310,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18336,
											"end": 18339,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 18329,
											"end": 18334,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18326,
											"end": 18340,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 18323,
											"end": 18363,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 18323,
											"end": 18363,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "620"
										},
										{
											"begin": 18323,
											"end": 18363,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18343,
											"end": 18361,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "621"
										},
										{
											"begin": 18343,
											"end": 18361,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 18343,
											"end": 18361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18343,
											"end": 18361,
											"name": "tag",
											"source": 14,
											"value": "621"
										},
										{
											"begin": 18343,
											"end": 18361,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18323,
											"end": 18363,
											"name": "tag",
											"source": 14,
											"value": "620"
										},
										{
											"begin": 18323,
											"end": 18363,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18376,
											"end": 18381,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18376,
											"end": 18381,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "612"
										},
										{
											"begin": 18376,
											"end": 18381,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18114,
											"end": 18391,
											"name": "tag",
											"source": 14,
											"value": "615"
										},
										{
											"begin": 18114,
											"end": 18391,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18114,
											"end": 18391,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18500,
											"end": 18502,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18490,
											"end": 18498,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18487,
											"end": 18503,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 18481,
											"end": 18484,
											"name": "PUSH",
											"source": 14,
											"value": "133"
										},
										{
											"begin": 18475,
											"end": 18479,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18472,
											"end": 18485,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 18468,
											"end": 18504,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 18450,
											"end": 18452,
											"name": "PUSH",
											"source": 14,
											"value": "4E"
										},
										{
											"begin": 18440,
											"end": 18448,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 18437,
											"end": 18453,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 18432,
											"end": 18434,
											"name": "PUSH",
											"source": 14,
											"value": "B"
										},
										{
											"begin": 18426,
											"end": 18430,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 18423,
											"end": 18435,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 18419,
											"end": 18454,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 18403,
											"end": 18514,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 18400,
											"end": 18646,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 18400,
											"end": 18646,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "622"
										},
										{
											"begin": 18400,
											"end": 18646,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18556,
											"end": 18564,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18550,
											"end": 18554,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18546,
											"end": 18565,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 18537,
											"end": 18565,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18537,
											"end": 18565,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18591,
											"end": 18594,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18584,
											"end": 18589,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18581,
											"end": 18595,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 18578,
											"end": 18618,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 18578,
											"end": 18618,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "623"
										},
										{
											"begin": 18578,
											"end": 18618,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18598,
											"end": 18616,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "624"
										},
										{
											"begin": 18598,
											"end": 18616,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 18598,
											"end": 18616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18598,
											"end": 18616,
											"name": "tag",
											"source": 14,
											"value": "624"
										},
										{
											"begin": 18598,
											"end": 18616,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18578,
											"end": 18618,
											"name": "tag",
											"source": 14,
											"value": "623"
										},
										{
											"begin": 18578,
											"end": 18618,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18631,
											"end": 18636,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "612"
										},
										{
											"begin": 18631,
											"end": 18636,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18400,
											"end": 18646,
											"name": "tag",
											"source": 14,
											"value": "622"
										},
										{
											"begin": 18400,
											"end": 18646,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18671,
											"end": 18713,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "625"
										},
										{
											"begin": 18709,
											"end": 18712,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 18699,
											"end": 18707,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 18693,
											"end": 18697,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 18690,
											"end": 18691,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 18671,
											"end": 18713,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 18671,
											"end": 18713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18671,
											"end": 18713,
											"name": "tag",
											"source": 14,
											"value": "625"
										},
										{
											"begin": 18671,
											"end": 18713,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18656,
											"end": 18713,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 18656,
											"end": 18713,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18656,
											"end": 18713,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18656,
											"end": 18713,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18745,
											"end": 18749,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18740,
											"end": 18743,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 18736,
											"end": 18750,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 18729,
											"end": 18734,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18726,
											"end": 18751,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 18723,
											"end": 18774,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 18723,
											"end": 18774,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "626"
										},
										{
											"begin": 18723,
											"end": 18774,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18754,
											"end": 18772,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "627"
										},
										{
											"begin": 18754,
											"end": 18772,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 18754,
											"end": 18772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18754,
											"end": 18772,
											"name": "tag",
											"source": 14,
											"value": "627"
										},
										{
											"begin": 18754,
											"end": 18772,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18723,
											"end": 18774,
											"name": "tag",
											"source": 14,
											"value": "626"
										},
										{
											"begin": 18723,
											"end": 18774,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18803,
											"end": 18807,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18796,
											"end": 18801,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18792,
											"end": 18808,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 18783,
											"end": 18808,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18783,
											"end": 18808,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17741,
											"end": 18814,
											"name": "tag",
											"source": 14,
											"value": "612"
										},
										{
											"begin": 17741,
											"end": 18814,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17741,
											"end": 18814,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 17741,
											"end": 18814,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 17741,
											"end": 18814,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17741,
											"end": 18814,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17741,
											"end": 18814,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17741,
											"end": 18814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18820,
											"end": 19101,
											"name": "tag",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 18820,
											"end": 19101,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18878,
											"end": 18883,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18902,
											"end": 18925,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "629"
										},
										{
											"begin": 18920,
											"end": 18924,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18902,
											"end": 18925,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 18902,
											"end": 18925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18902,
											"end": 18925,
											"name": "tag",
											"source": 14,
											"value": "629"
										},
										{
											"begin": 18902,
											"end": 18925,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18894,
											"end": 18925,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18894,
											"end": 18925,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18946,
											"end": 18971,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "630"
										},
										{
											"begin": 18962,
											"end": 18970,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18946,
											"end": 18971,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 18946,
											"end": 18971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18946,
											"end": 18971,
											"name": "tag",
											"source": 14,
											"value": "630"
										},
										{
											"begin": 18946,
											"end": 18971,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18934,
											"end": 18971,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 18934,
											"end": 18971,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18990,
											"end": 19094,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "631"
										},
										{
											"begin": 19027,
											"end": 19093,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19017,
											"end": 19025,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 19011,
											"end": 19015,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 18990,
											"end": 19094,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "408"
										},
										{
											"begin": 18990,
											"end": 19094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18990,
											"end": 19094,
											"name": "tag",
											"source": 14,
											"value": "631"
										},
										{
											"begin": 18990,
											"end": 19094,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18981,
											"end": 19094,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18981,
											"end": 19094,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18820,
											"end": 19101,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 18820,
											"end": 19101,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18820,
											"end": 19101,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18820,
											"end": 19101,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18820,
											"end": 19101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19107,
											"end": 19439,
											"name": "tag",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 19107,
											"end": 19439,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19228,
											"end": 19232,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19266,
											"end": 19268,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 19255,
											"end": 19264,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19251,
											"end": 19269,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19243,
											"end": 19269,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19243,
											"end": 19269,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19279,
											"end": 19350,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "633"
										},
										{
											"begin": 19347,
											"end": 19348,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19336,
											"end": 19345,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19332,
											"end": 19349,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19323,
											"end": 19329,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 19279,
											"end": 19350,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 19279,
											"end": 19350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19279,
											"end": 19350,
											"name": "tag",
											"source": 14,
											"value": "633"
										},
										{
											"begin": 19279,
											"end": 19350,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19360,
											"end": 19432,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "634"
										},
										{
											"begin": 19428,
											"end": 19430,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19417,
											"end": 19426,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19413,
											"end": 19431,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19404,
											"end": 19410,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 19360,
											"end": 19432,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 19360,
											"end": 19432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19360,
											"end": 19432,
											"name": "tag",
											"source": 14,
											"value": "634"
										},
										{
											"begin": 19360,
											"end": 19432,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19107,
											"end": 19439,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 19107,
											"end": 19439,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19107,
											"end": 19439,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19107,
											"end": 19439,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19107,
											"end": 19439,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19107,
											"end": 19439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19445,
											"end": 19667,
											"name": "tag",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 19445,
											"end": 19667,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19538,
											"end": 19542,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19576,
											"end": 19578,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19565,
											"end": 19574,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19561,
											"end": 19579,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19553,
											"end": 19579,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19553,
											"end": 19579,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19589,
											"end": 19660,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "636"
										},
										{
											"begin": 19657,
											"end": 19658,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19646,
											"end": 19655,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19642,
											"end": 19659,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19633,
											"end": 19639,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 19589,
											"end": 19660,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 19589,
											"end": 19660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19589,
											"end": 19660,
											"name": "tag",
											"source": 14,
											"value": "636"
										},
										{
											"begin": 19589,
											"end": 19660,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19445,
											"end": 19667,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19445,
											"end": 19667,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19445,
											"end": 19667,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19445,
											"end": 19667,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19445,
											"end": 19667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/KipuBankV2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BANK_MANAGER_ROLE()": "f2157052",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"deposit(address,uint256)": "47e7ef24",
							"depositCount(address)": "f4443d9a",
							"ethUsdFeed()": "8009b7bd",
							"getLatestEthPrice()": "30c0b9ec",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getSupportedTokens()": "d3c7c2c7",
							"getTotalDepositsInUSD(address)": "1e604ea3",
							"getUserBalance(address,address)": "6805d6ad",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"maxWithdrawal()": "8c0ff5b7",
							"priceFeedForToken(address)": "2e3441a9",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setPriceFeed(address,address)": "76e11286",
							"supportToken(address,address)": "92b9f8f5",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalBankCapacityUSD()": "a773a500",
							"totalDepositsUSD()": "e7d66d63",
							"unsupportToken(address)": "ee3d6866",
							"withdraw(address,uint256)": "f3fef3a3",
							"withdrawalCount(address)": "b3d8bcdc"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxWithdrawal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalCapacityUSD\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_ethUsdFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BankCapExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DirectCallNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DirectTransferNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBankCapacity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOracle\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxWithdrawalExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaximumWithdrawalInvalid\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenNotSupported\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroDepositNotAllowed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdValue6\",\"type\":\"uint256\"}],\"name\":\"DepositMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxWithdrawalWei\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCapacityUSD\",\"type\":\"uint256\"}],\"name\":\"ParamentersUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"PriceFeedRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feed\",\"type\":\"address\"}],\"name\":\"PriceFeedSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenSupported\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenUnsupported\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdValue6\",\"type\":\"uint256\"}],\"name\":\"WithdrawalMade\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"BANK_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"depositCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethUsdFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestEthPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSupportedTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getTotalDepositsInUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalUSD\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getUserBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxWithdrawal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"priceFeedForToken\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feed\",\"type\":\"address\"}],\"name\":\"setPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feed\",\"type\":\"address\"}],\"name\":\"supportToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBankCapacityUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDepositsUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"unsupportToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"withdrawalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"DepositMade(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"Amount of ETH deposited.\",\"token\":\"what token it was.\",\"usdValue6\":\"its equivalent value in USD (with 6 decimal places).\",\"user\":\"is the user's address. \"}},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"WithdrawalMade(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"Amount of ETH withdrawn.\",\"user\":\"the user's address \"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_maxWithdrawal\":\"Maximum withdrawal limit per transaction.\",\"_totalCapacityUSD\":\"Total ETH capacity of the bank in USD.\"}},\"deposit(address,uint256)\":{\"details\":\"Check global limit and record deposit.allows a user to deposit ETH or a token.updates their balance and total in USD.emits a deposit event.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getUserBalance(address,address)\":{\"params\":{\"user\":\"Address of the user to query.\"},\"returns\":{\"_0\":\"The ETH balance of the user in the vault.\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"withdraw(address,uint256)\":{\"details\":\"user to withdraw ETH or token.check limits and balance. update balances and total in USD and perform the secure transfer.issue a withdrawal event.\",\"params\":{\"amount\":\"The amount of ETH to withdraw and uses secure transfers and custom errors.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"BankCapExceeded()\":[{\"notice\":\"It is thrown if the Bank Cap Exceeded\"}],\"DirectCallNotAllowed()\":[{\"notice\":\"It is thrown if someone calls the contract with incorrect data.\"}],\"DirectTransferNotAllowed()\":[{\"notice\":\"Thrown if you try to send ETH directly to the contract.\"}],\"InsufficientBalance()\":[{\"notice\":\"When a user tries to withdraw more than their balance\"}],\"InvalidAmount()\":[{\"notice\":\"It is raised when the amount sent or requested is invalid\"}],\"InvalidBankCapacity()\":[{\"notice\":\"Thrown if the bank capacity in the constructor is invalid.\"}],\"InvalidOracle()\":[{\"notice\":\"It is thrown if the oracle address\"}],\"MaxWithdrawalExceeded()\":[{\"notice\":\"When a withdrawal exceeds the transaction limit.\"}],\"MaximumWithdrawalInvalid()\":[{\"notice\":\"Thrown if the maxRetiro value in the constructor is invalid.\"}],\"TokenNotSupported()\":[{\"notice\":\"It is thrown if the token used is not supported by the bank\"}],\"TransferFailed()\":[{\"notice\":\"Thrown if an ETH or token transfer fails\"}],\"ZeroDepositNotAllowed()\":[{\"notice\":\"When trying to deposit 0 ETH.\"}]},\"events\":{\"DepositMade(address,address,uint256,uint256)\":{\"notice\":\"Emitted when a user deposits an ETh or token into the contract.\"},\"ParamentersUpdated(uint256,uint256)\":{\"notice\":\"Emitted when the bank's main parameters are updated:\"},\"PriceFeedRemoved(address)\":{\"notice\":\"Emitted when the oracle associated with a token is deleted.\"},\"PriceFeedSet(address,address)\":{\"notice\":\"It is issued when a new oracle is assigned to a token, used to obtain its price in USD\"},\"TokenSupported(address)\":{\"notice\":\"Emitted when an administrator (BANK_MANAGER_ROLE) adds support for a new ERC-20 token\"},\"TokenUnsupported(address)\":{\"notice\":\"Emitted when support for a previously accepted token is removed.\"},\"WithdrawalMade(address,address,uint256,uint256)\":{\"notice\":\"It is issued when the user makes a successful withdrawal.\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Initializes the contract with the specified limits.\"},\"deposit(address,uint256)\":{\"notice\":\"Deposits ETH into the user's personal vault.\"},\"depositCount(address)\":{\"notice\":\"Number of deposits made by each user.\"},\"ethUsdFeed()\":{\"notice\":\"Oraculo chailink ETH/USD\"},\"getUserBalance(address,address)\":{\"notice\":\"Returns the current vault balance of a given user.\"},\"maxWithdrawal()\":{\"notice\":\"M\\u00e1ximo permitido por transacci\\u00f3n de retiro.\"},\"supportToken(address,address)\":{\"notice\":\"Agrega soporte para un token ERC20 \"},\"totalBankCapacityUSD()\":{\"notice\":\"Capacidad total del banco en ETH.\"},\"totalDepositsUSD()\":{\"notice\":\"Total actual de todos los dep\\u00f3sitos en el contrato.\"},\"unsupportToken(address)\":{\"notice\":\"The function marks a token as unsupported and can only be executed by a user with the BANK_MANAGER_ROLE role, preventing any user from disabling support for a token.\"},\"withdraw(address,uint256)\":{\"notice\":\"Withdraws a specified amount of ETH from the user's vault.\"},\"withdrawalCount(address)\":{\"notice\":\"Number of withdrawals made by each user.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/KipuBankV2.sol\":\"KipuBank\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"src/KipuBankV2.sol\":{\"keccak256\":\"0x71b834b16a40fe5e7fc072d15130420e0acb1ce57d9c2e2a83994674ebcf14a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5beb009aba508af6e9f4be0b1794c21ce8997ce4d15a089a78dcb9642a2fc0a\",\"dweb:/ipfs/Qma6z4zVKSV7qWDCjVRaqif8cmMTXK1E1H3GrWgGxwL96m\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 73,
								"contract": "src/KipuBankV2.sol:KipuBank",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)68_storage)"
							},
							{
								"astId": 526,
								"contract": "src/KipuBankV2.sol:KipuBank",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1250,
								"contract": "src/KipuBankV2.sol:KipuBank",
								"label": "priceFeedForToken",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_contract(AggregatorV3Interface)45)"
							},
							{
								"astId": 1257,
								"contract": "src/KipuBankV2.sol:KipuBank",
								"label": "vaultBalance",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1262,
								"contract": "src/KipuBankV2.sol:KipuBank",
								"label": "depositCount",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1267,
								"contract": "src/KipuBankV2.sol:KipuBank",
								"label": "withdrawalCount",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1270,
								"contract": "src/KipuBankV2.sol:KipuBank",
								"label": "supportedTokens",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1274,
								"contract": "src/KipuBankV2.sol:KipuBank",
								"label": "isTokenSupported",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1277,
								"contract": "src/KipuBankV2.sol:KipuBank",
								"label": "totalDepositsUSD",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(AggregatorV3Interface)45": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_contract(AggregatorV3Interface)45)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => contract AggregatorV3Interface)",
								"numberOfBytes": "32",
								"value": "t_contract(AggregatorV3Interface)45"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)68_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)68_storage"
							},
							"t_struct(RoleData)68_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 65,
										"contract": "src/KipuBankV2.sol:KipuBank",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 67,
										"contract": "src/KipuBankV2.sol:KipuBank",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"BankCapExceeded()": [
								{
									"notice": "It is thrown if the Bank Cap Exceeded"
								}
							],
							"DirectCallNotAllowed()": [
								{
									"notice": "It is thrown if someone calls the contract with incorrect data."
								}
							],
							"DirectTransferNotAllowed()": [
								{
									"notice": "Thrown if you try to send ETH directly to the contract."
								}
							],
							"InsufficientBalance()": [
								{
									"notice": "When a user tries to withdraw more than their balance"
								}
							],
							"InvalidAmount()": [
								{
									"notice": "It is raised when the amount sent or requested is invalid"
								}
							],
							"InvalidBankCapacity()": [
								{
									"notice": "Thrown if the bank capacity in the constructor is invalid."
								}
							],
							"InvalidOracle()": [
								{
									"notice": "It is thrown if the oracle address"
								}
							],
							"MaxWithdrawalExceeded()": [
								{
									"notice": "When a withdrawal exceeds the transaction limit."
								}
							],
							"MaximumWithdrawalInvalid()": [
								{
									"notice": "Thrown if the maxRetiro value in the constructor is invalid."
								}
							],
							"TokenNotSupported()": [
								{
									"notice": "It is thrown if the token used is not supported by the bank"
								}
							],
							"TransferFailed()": [
								{
									"notice": "Thrown if an ETH or token transfer fails"
								}
							],
							"ZeroDepositNotAllowed()": [
								{
									"notice": "When trying to deposit 0 ETH."
								}
							]
						},
						"events": {
							"DepositMade(address,address,uint256,uint256)": {
								"notice": "Emitted when a user deposits an ETh or token into the contract."
							},
							"ParamentersUpdated(uint256,uint256)": {
								"notice": "Emitted when the bank's main parameters are updated:"
							},
							"PriceFeedRemoved(address)": {
								"notice": "Emitted when the oracle associated with a token is deleted."
							},
							"PriceFeedSet(address,address)": {
								"notice": "It is issued when a new oracle is assigned to a token, used to obtain its price in USD"
							},
							"TokenSupported(address)": {
								"notice": "Emitted when an administrator (BANK_MANAGER_ROLE) adds support for a new ERC-20 token"
							},
							"TokenUnsupported(address)": {
								"notice": "Emitted when support for a previously accepted token is removed."
							},
							"WithdrawalMade(address,address,uint256,uint256)": {
								"notice": "It is issued when the user makes a successful withdrawal."
							}
						},
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "Initializes the contract with the specified limits."
							},
							"deposit(address,uint256)": {
								"notice": "Deposits ETH into the user's personal vault."
							},
							"depositCount(address)": {
								"notice": "Number of deposits made by each user."
							},
							"ethUsdFeed()": {
								"notice": "Oraculo chailink ETH/USD"
							},
							"getUserBalance(address,address)": {
								"notice": "Returns the current vault balance of a given user."
							},
							"maxWithdrawal()": {
								"notice": "Máximo permitido por transacción de retiro."
							},
							"supportToken(address,address)": {
								"notice": "Agrega soporte para un token ERC20 "
							},
							"totalBankCapacityUSD()": {
								"notice": "Capacidad total del banco en ETH."
							},
							"totalDepositsUSD()": {
								"notice": "Total actual de todos los depósitos en el contrato."
							},
							"unsupportToken(address)": {
								"notice": "The function marks a token as unsupported and can only be executed by a user with the BANK_MANAGER_ROLE role, preventing any user from disabling support for a token."
							},
							"withdraw(address,uint256)": {
								"notice": "Withdraws a specified amount of ETH from the user's vault."
							},
							"withdrawalCount(address)": {
								"notice": "Number of withdrawals made by each user."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "67:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "102:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "136:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "136:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:7:0"
									},
									"scope": 45,
									"src": "93:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "156:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "193:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "193:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:15:0"
									},
									"scope": 45,
									"src": "147:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "254:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:0"
									},
									"scope": 45,
									"src": "212:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "276:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "301:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "294:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "294:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:25:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "344:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "337:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "360:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "353:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "353:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "376:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "368:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "395:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "387:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "413:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "406:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:93:0"
									},
									"scope": 45,
									"src": "267:163:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "443:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "458:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "503:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "496:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "496:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "519:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "512:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "512:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "535:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "527:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "554:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "546:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "572:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "565:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:93:0"
									},
									"scope": 45,
									"src": "434:155:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "57:534:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:560:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							342
						],
						"Context": [
							1178
						],
						"ERC165": [
							1202
						],
						"IAccessControl": [
							425
						],
						"IERC165": [
							1214
						]
					},
					"id": 343,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 49,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 343,
							"sourceUnit": 426,
							"src": "134:52:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 48,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 425,
										"src": "142:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 51,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 343,
							"sourceUnit": 1179,
							"src": "187:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 50,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1178,
										"src": "195:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 54,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 343,
							"sourceUnit": 1203,
							"src": "233:66:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 52,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1214,
										"src": "241:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 53,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1202,
										"src": "250:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 56,
										"name": "Context",
										"nameLocations": [
											"1997:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1178,
										"src": "1997:7:1"
									},
									"id": 57,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:7:1"
								},
								{
									"baseName": {
										"id": 58,
										"name": "IAccessControl",
										"nameLocations": [
											"2006:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 425,
										"src": "2006:14:1"
									},
									"id": 59,
									"nodeType": "InheritanceSpecifier",
									"src": "2006:14:1"
								},
								{
									"baseName": {
										"id": 60,
										"name": "ERC165",
										"nameLocations": [
											"2022:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1202,
										"src": "2022:6:1"
									},
									"id": 61,
									"nodeType": "InheritanceSpecifier",
									"src": "2022:6:1"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 55,
								"nodeType": "StructuredDocumentation",
								"src": "301:1660:1",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 342,
							"linearizedBaseContracts": [
								342,
								1202,
								1214,
								425,
								1178
							],
							"name": "AccessControl",
							"nameLocation": "1980:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 68,
									"members": [
										{
											"constant": false,
											"id": 65,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2094:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 68,
											"src": "2061:40:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 64,
												"keyName": "account",
												"keyNameLocation": "2077:7:1",
												"keyType": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2061:32:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 63,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2088:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 67,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2119:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 68,
											"src": "2111:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 66,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2111:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2042:8:1",
									"nodeType": "StructDefinition",
									"scope": 342,
									"src": "2035:100:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 73,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2183:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 342,
									"src": "2141:48:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$68_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 72,
										"keyName": "role",
										"keyNameLocation": "2157:4:1",
										"keyType": {
											"id": 69,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2149:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2141:33:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$68_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 71,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 70,
												"name": "RoleData",
												"nameLocations": [
													"2165:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 68,
												"src": "2165:8:1"
											},
											"referencedDeclaration": 68,
											"src": "2165:8:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$68_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 76,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2220:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 342,
									"src": "2196:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 74,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2196:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 75,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2241:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "2463:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 82,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "2484:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 81,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															140,
															161
														],
														"referencedDeclaration": 140,
														"src": "2473:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2473:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "2473:16:1"
											},
											{
												"id": 85,
												"nodeType": "PlaceholderStatement",
												"src": "2499:1:1"
											}
										]
									},
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "2252:174:1",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 87,
									"name": "onlyRole",
									"nameLocation": "2440:8:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2457:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2449:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 78,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:14:1"
									},
									"src": "2431:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1201
									],
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "2632:111:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 96,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2649:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 98,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 425,
																		"src": "2669:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$425_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$425_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 97,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2664:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2664:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$425",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2685:11:1",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2664:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2649:47:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 104,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "2724:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 102,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2700:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$342_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2706:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1201,
															"src": "2700:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2700:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2649:87:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 95,
												"id": 107,
												"nodeType": "Return",
												"src": "2642:94:1"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "2513:23:1",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2550:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 92,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2608:8:1"
									},
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2575:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "2568:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 89,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2567:20:1"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "2626:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 93,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2626:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2625:6:1"
									},
									"scope": 342,
									"src": "2541:202:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										392
									],
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "2913:53:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 119,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 73,
																"src": "2930:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$68_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 121,
															"indexExpression": {
																"id": 120,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 112,
																"src": "2937:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2930:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$68_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 122,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2943:7:1",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 65,
														"src": "2930:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 124,
													"indexExpression": {
														"id": 123,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "2951:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2930:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 118,
												"id": 125,
												"nodeType": "Return",
												"src": "2923:36:1"
											}
										]
									},
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "2749:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2839:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2855:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "2847:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 111,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2847:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2869:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "2861:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2861:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2846:31:1"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "2907:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 116,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2907:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2906:6:1"
									},
									"scope": 342,
									"src": "2830:136:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "3231:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 134,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "3252:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 135,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1160,
																"src": "3258:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3258:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 133,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															140,
															161
														],
														"referencedDeclaration": 161,
														"src": "3241:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "3241:30:1"
											}
										]
									},
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "2972:198:1",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3184:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3203:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "3195:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 129,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3195:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3194:14:1"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:1"
									},
									"scope": 342,
									"src": "3175:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "3481:124:1",
										"statements": [
											{
												"condition": {
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3495:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 149,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "3504:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 150,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "3510:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 148,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 127,
															"src": "3496:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3496:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 159,
												"nodeType": "IfStatement",
												"src": "3491:108:1",
												"trueBody": {
													"id": 158,
													"nodeType": "Block",
													"src": "3520:79:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 154,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 145,
																		"src": "3574:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 155,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 143,
																		"src": "3583:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 153,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "3541:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3541:47:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 157,
															"nodeType": "RevertStatement",
															"src": "3534:54:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "3284:119:1",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3417:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3436:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "3428:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 142,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3428:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3450:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "3442:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3442:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3427:31:1"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3481:0:1"
									},
									"scope": 342,
									"src": "3408:197:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										400
									],
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "3860:46:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 169,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "3877:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$68_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 171,
														"indexExpression": {
															"id": 170,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "3884:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3877:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$68_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3890:9:1",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 67,
													"src": "3877:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 168,
												"id": 173,
												"nodeType": "Return",
												"src": "3870:29:1"
											}
										]
									},
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "3611:170:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3795:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3816:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "3808:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 163,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3808:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:14:1"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "3851:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 166,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:9:1"
									},
									"scope": 342,
									"src": "3786:120:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										408
									],
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "4296:42:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 189,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "4317:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 190,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "4323:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 188,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "4306:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4306:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "4306:25:1"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "3912:285:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 194,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "4289:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 183,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "4276:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 186,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 182,
												"name": "onlyRole",
												"nameLocations": [
													"4267:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 87,
												"src": "4267:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4267:28:1"
										}
									],
									"name": "grantRole",
									"nameLocation": "4211:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4229:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "4221:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 177,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4221:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4243:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "4235:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4235:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4220:31:1"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4296:0:1"
									},
									"scope": 342,
									"src": "4202:136:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										416
									],
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "4713:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 208,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "4735:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 209,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "4741:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 207,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "4723:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4723:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "4723:26:1"
											}
										]
									},
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "4344:269:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 203,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 202,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "4693:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4693:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 205,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 201,
												"name": "onlyRole",
												"nameLocations": [
													"4684:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 87,
												"src": "4684:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4684:28:1"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4627:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4646:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "4638:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 196,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4638:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "4652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4637:31:1"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4713:0:1"
									},
									"scope": 342,
									"src": "4618:138:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										424
									],
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "5383:166:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 221,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "5397:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 222,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "5419:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5419:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5397:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 229,
												"nodeType": "IfStatement",
												"src": "5393:102:1",
												"trueBody": {
													"id": 228,
													"nodeType": "Block",
													"src": "5433:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 225,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "5454:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5454:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 227,
															"nodeType": "RevertStatement",
															"src": "5447:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 231,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "5517:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 232,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "5523:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 230,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "5505:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5505:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 234,
												"nodeType": "ExpressionStatement",
												"src": "5505:37:1"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "4762:537:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5313:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5334:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "5326:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 215,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5348:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "5340:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5340:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5325:42:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5383:0:1"
									},
									"scope": 342,
									"src": "5304:245:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "5747:174:1",
										"statements": [
											{
												"assignments": [
													245
												],
												"declarations": [
													{
														"constant": false,
														"id": 245,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5765:17:1",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "5757:25:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 244,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5757:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 249,
												"initialValue": {
													"arguments": [
														{
															"id": 247,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "5798:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 246,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "5785:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5785:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5757:46:1"
											},
											{
												"expression": {
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 250,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 73,
																"src": "5813:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$68_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 252,
															"indexExpression": {
																"id": 251,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 239,
																"src": "5820:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5813:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$68_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5826:9:1",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 67,
														"src": "5813:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 254,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "5838:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5813:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "5813:34:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 258,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "5879:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 259,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "5885:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 260,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "5904:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 257,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "5862:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5862:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 262,
												"nodeType": "EmitStatement",
												"src": "5857:57:1"
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "5555:114:1",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5683:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5705:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "5697:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 238,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5697:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5719:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "5711:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 240,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5711:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5696:33:1"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5747:0:1"
									},
									"scope": 342,
									"src": "5674:247:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "6238:233:1",
										"statements": [
											{
												"condition": {
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6252:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 275,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "6261:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 276,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "6267:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 274,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 127,
															"src": "6253:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6253:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 300,
													"nodeType": "Block",
													"src": "6428:37:1",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6449:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 273,
															"id": 299,
															"nodeType": "Return",
															"src": "6442:12:1"
														}
													]
												},
												"id": 301,
												"nodeType": "IfStatement",
												"src": "6248:217:1",
												"trueBody": {
													"id": 297,
													"nodeType": "Block",
													"src": "6277:145:1",
													"statements": [
														{
															"expression": {
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 279,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 73,
																				"src": "6291:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$68_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 281,
																			"indexExpression": {
																				"id": 280,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 267,
																				"src": "6298:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6291:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$68_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 282,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6304:7:1",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 65,
																		"src": "6291:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 284,
																	"indexExpression": {
																		"id": 283,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 269,
																		"src": "6312:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6291:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6323:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6291:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 287,
															"nodeType": "ExpressionStatement",
															"src": "6291:36:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 289,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 267,
																		"src": "6358:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 290,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 269,
																		"src": "6364:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 291,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1160,
																			"src": "6373:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 292,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6373:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 288,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "6346:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6346:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 294,
															"nodeType": "EmitStatement",
															"src": "6341:45:1"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6407:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 273,
															"id": 296,
															"nodeType": "Return",
															"src": "6400:11:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "5927:223:1",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6164:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6183:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "6175:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 266,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6175:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6197:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "6189:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6189:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6174:31:1"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "6232:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 271,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6232:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6231:6:1"
									},
									"scope": 342,
									"src": "6155:316:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "6792:233:1",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 314,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "6814:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 315,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "6820:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 313,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "6806:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6806:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 338,
													"nodeType": "Block",
													"src": "6982:37:1",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7003:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 312,
															"id": 337,
															"nodeType": "Return",
															"src": "6996:12:1"
														}
													]
												},
												"id": 339,
												"nodeType": "IfStatement",
												"src": "6802:217:1",
												"trueBody": {
													"id": 335,
													"nodeType": "Block",
													"src": "6830:146:1",
													"statements": [
														{
															"expression": {
																"id": 324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 317,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 73,
																				"src": "6844:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$68_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 319,
																			"indexExpression": {
																				"id": 318,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 306,
																				"src": "6851:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6844:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$68_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 320,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6857:7:1",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 65,
																		"src": "6844:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 322,
																	"indexExpression": {
																		"id": 321,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 308,
																		"src": "6865:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6844:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6876:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6844:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 325,
															"nodeType": "ExpressionStatement",
															"src": "6844:37:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 327,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 306,
																		"src": "6912:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 328,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 308,
																		"src": "6918:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 329,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1160,
																			"src": "6927:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6927:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 326,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 382,
																	"src": "6900:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6900:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 332,
															"nodeType": "EmitStatement",
															"src": "6895:45:1"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6961:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 312,
															"id": 334,
															"nodeType": "Return",
															"src": "6954:11:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "6477:226:1",
										"text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6717:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6737:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "6729:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 305,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6729:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6751:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "6743:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6743:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6728:31:1"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "6786:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 310,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6786:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6785:6:1"
									},
									"scope": 342,
									"src": "6708:317:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 343,
							"src": "1962:5065:1",
							"usedErrors": [
								352,
								355
							],
							"usedEvents": [
								364,
								373,
								382
							]
						}
					],
					"src": "108:6920:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							425
						]
					},
					"id": 426,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 344,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 345,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:2",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 425,
							"linearizedBaseContracts": [
								425
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:2",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 352,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "357:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "374:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 349,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:2"
									},
									"src": "318:76:2"
								},
								{
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:2",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 355,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:2"
									},
									"src": "553:37:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:2",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 364,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "878:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 357,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "900:33:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 359,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "935:28:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 361,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:2"
									},
									"src": "855:110:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:2",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 373,
									"name": "RoleGranted",
									"nameLocation": "1277:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "1289:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 366,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "1311:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "1336:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:2"
									},
									"src": "1271:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:2",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 382,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1664:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 375,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1686:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1711:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:2"
									},
									"src": "1646:89:2"
								},
								{
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:2",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 392,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "1839:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 384,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "1853:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:2"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "1893:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 389,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:2"
									},
									"scope": 425,
									"src": "1822:77:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:2",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "2116:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 394,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:2"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "2153:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 397,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:2"
									},
									"scope": 425,
									"src": "2094:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:2",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 408,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "2431:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 402,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "2445:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:2"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:2"
									},
									"scope": 425,
									"src": "2412:59:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:2",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 416,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "2725:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 410,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "2739:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:2"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:2"
									},
									"scope": 425,
									"src": "2705:60:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:2",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 424,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "3289:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 418,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "3303:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:2"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:2"
									},
									"scope": 425,
									"src": "3267:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 426,
							"src": "226:3116:2",
							"usedErrors": [
								352,
								355
							],
							"usedEvents": [
								364,
								373,
								382
							]
						}
					],
					"src": "109:3234:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							507
						],
						"IERC165": [
							1214
						],
						"IERC20": [
							658
						]
					},
					"id": 508,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 427,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 429,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 508,
							"sourceUnit": 516,
							"src": "133:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 428,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 658,
										"src": "141:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 431,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 508,
							"sourceUnit": 512,
							"src": "170:38:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 430,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1214,
										"src": "178:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 433,
										"name": "IERC20",
										"nameLocations": [
											"590:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 658,
										"src": "590:6:3"
									},
									"id": 434,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:3"
								},
								{
									"baseName": {
										"id": 435,
										"name": "IERC165",
										"nameLocations": [
											"598:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1214,
										"src": "598:7:3"
									},
									"id": 436,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:3"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 432,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:3",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 507,
							"linearizedBaseContracts": [
								507,
								1214,
								658
							],
							"name": "IERC1363",
							"nameLocation": "578:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 437,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 446,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1548:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1560:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:3"
									},
									"returnParameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1593:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 443,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:3"
									},
									"scope": 507,
									"src": "1523:76:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 458,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2088:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2100:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2115:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 452,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:3"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2154:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 455,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:3"
									},
									"scope": 507,
									"src": "2063:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 470,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "2653:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "2667:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "2679:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:3"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "2712:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 467,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:3"
									},
									"scope": 507,
									"src": "2624:94:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 484,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3294:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3308:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3320:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3335:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 478,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:3"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3374:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 481,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:3"
									},
									"scope": 507,
									"src": "3265:115:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 494,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "3805:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "3822:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:3"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "3855:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 491,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:3"
									},
									"scope": 507,
									"src": "3781:80:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 506,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "4374:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "4391:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "4406:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 500,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:3"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "4445:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 503,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:3"
									},
									"scope": 507,
									"src": "4350:101:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 508,
							"src": "568:3885:3",
							"usedErrors": [],
							"usedEvents": [
								592,
								601
							]
						}
					],
					"src": "107:4347:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1214
						]
					},
					"id": 512,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 509,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 511,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 512,
							"sourceUnit": 1215,
							"src": "133:59:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 510,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1214,
										"src": "141:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							658
						]
					},
					"id": 516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 513,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 515,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 516,
							"sourceUnit": 659,
							"src": "132:49:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 514,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 658,
										"src": "140:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							580
						]
					},
					"id": 581,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 517,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 518,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:6",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 580,
							"linearizedBaseContracts": [
								580
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 521,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 580,
									"src": "1676:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 519,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 520,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 524,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 580,
									"src": "1723:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 522,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 523,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 526,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 580,
									"src": "1767:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 525,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "1811:39:6",
										"statements": [
											{
												"expression": {
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 529,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "1821:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 530,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "1831:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 532,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:6"
											}
										]
									},
									"id": 534,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:6"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:6"
									},
									"scope": 580,
									"src": "1797:53:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "2251:79:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 537,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "2261:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:6"
											},
											{
												"id": 540,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 541,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "2303:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:6"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:6",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 545,
									"name": "nonReentrant",
									"nameLocation": "2236:12:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:6"
									},
									"src": "2227:103:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "2375:248:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 549,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "2468:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 550,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "2479:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 548,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:6"
											},
											{
												"expression": {
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 555,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "2598:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 556,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "2608:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 558,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:6"
											}
										]
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:6"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:6"
									},
									"scope": 580,
									"src": "2336:287:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "2667:171:6",
										"statements": [
											{
												"expression": {
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 563,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "2809:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 564,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "2819:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:6"
											}
										]
									},
									"id": 568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:6"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:6"
									},
									"scope": 580,
									"src": "2629:209:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "3081:43:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 574,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "3098:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 575,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "3109:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 573,
												"id": 577,
												"nodeType": "Return",
												"src": "3091:26:6"
											}
										]
									},
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:6",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:6"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "3075:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 571,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:6"
									},
									"scope": 580,
									"src": "3017:107:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 581,
							"src": "888:2238:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							658
						]
					},
					"id": 659,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 582,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 583,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:7",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 658,
							"linearizedBaseContracts": [
								658
							],
							"name": "IERC20",
							"nameLocation": "215:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:7",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 592,
									"name": "Transfer",
									"nameLocation": "397:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "406:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "428:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "448:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:7"
									},
									"src": "391:72:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 593,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:7",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 601,
									"name": "Approval",
									"nameLocation": "628:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "637:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "660:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "685:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:7"
									},
									"src": "622:78:7"
								},
								{
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:7",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 607,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:7"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "822:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:7"
									},
									"scope": 658,
									"src": "776:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:7",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 615,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "932:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:7"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "972:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:7"
									},
									"scope": 658,
									"src": "913:68:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:7",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 625,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "1223:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "1235:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:7"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "1268:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 622,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:7"
									},
									"scope": 658,
									"src": "1205:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:7",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 635,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1568:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1583:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:7"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1623:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:7"
									},
									"scope": 658,
									"src": "1549:83:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:7",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 645,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "2327:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "2344:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:7"
									},
									"returnParameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "2377:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 642,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:7"
									},
									"scope": 658,
									"src": "2310:73:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:7",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 657,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "2713:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "2727:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "2739:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:7"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "2772:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 654,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:7"
									},
									"scope": 658,
									"src": "2691:87:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 659,
							"src": "205:2575:7",
							"usedErrors": [],
							"usedEvents": [
								592,
								601
							]
						}
					],
					"src": "106:2675:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							658
						],
						"IERC20Metadata": [
							684
						]
					},
					"id": 685,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 660,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 662,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 685,
							"sourceUnit": 659,
							"src": "151:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 661,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 658,
										"src": "159:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 664,
										"name": "IERC20",
										"nameLocations": [
											"306:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 658,
										"src": "306:6:8"
									},
									"id": 665,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:8"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 663,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:8",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 684,
							"linearizedBaseContracts": [
								684,
								658
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:8",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 671,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:8"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "417:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 668,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:8"
									},
									"scope": 684,
									"src": "378:54:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:8",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 677,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:8"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "540:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 674,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:8"
									},
									"scope": 684,
									"src": "499:56:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:8",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 683,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:8"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "674:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 680,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:8"
									},
									"scope": 684,
									"src": "631:50:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 685,
							"src": "278:405:8",
							"usedErrors": [],
							"usedEvents": [
								592,
								601
							]
						}
					],
					"src": "125:559:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							507
						],
						"IERC20": [
							658
						],
						"SafeERC20": [
							1148
						]
					},
					"id": 1149,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 686,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 688,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1149,
							"sourceUnit": 659,
							"src": "141:37:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 687,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 658,
										"src": "149:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 690,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1149,
							"sourceUnit": 508,
							"src": "179:58:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 689,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 507,
										"src": "187:8:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 691,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:9",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1148,
							"linearizedBaseContracts": [
								1148
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:9",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 696,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "823:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:9"
									},
									"src": "792:46:9"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:9",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 705,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "959:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "976:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "1002:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:9"
									},
									"src": "920:109:9"
								},
								{
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "1291:88:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 717,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "1321:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$658",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 720,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 709,
																		"src": "1343:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$658",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:9",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 625,
																	"src": "1343:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 722,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 711,
																			"src": "1360:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 723,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 713,
																			"src": "1364:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 724,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 718,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:9",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$658",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 716,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1106,
														"src": "1301:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:9"
											}
										]
									},
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:9",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "1241:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$658",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 708,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 707,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 658,
														"src": "1241:6:9"
													},
													"referencedDeclaration": 658,
													"src": "1241:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$658",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "1255:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "1267:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:9"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:9"
									},
									"scope": 1148,
									"src": "1219:160:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "1708:98:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 743,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "1738:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$658",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 746,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 733,
																		"src": "1760:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$658",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:9",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 657,
																	"src": "1760:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 748,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 735,
																			"src": "1781:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 749,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 737,
																			"src": "1787:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 750,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 739,
																			"src": "1791:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 751,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 744,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:9",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$658",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 742,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1106,
														"src": "1718:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 754,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:9"
											}
										]
									},
									"documentation": {
										"id": 730,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:9",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "1644:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$658",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 732,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 731,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 658,
														"src": "1644:6:9"
													},
													"referencedDeclaration": 658,
													"src": "1644:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$658",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "1658:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "1672:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "1684:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:9"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:9"
									},
									"scope": 1148,
									"src": "1618:188:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 781,
										"nodeType": "Block",
										"src": "2033:99:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 770,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "2074:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$658",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 773,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 760,
																		"src": "2096:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$658",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:9",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 625,
																	"src": "2096:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 775,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 762,
																			"src": "2113:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 776,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 764,
																			"src": "2117:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 777,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 771,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:9",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$658",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 769,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "2050:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 768,
												"id": 780,
												"nodeType": "Return",
												"src": "2043:82:9"
											}
										]
									},
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:9",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "1968:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$658",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 759,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 758,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 658,
														"src": "1968:6:9"
													},
													"referencedDeclaration": 658,
													"src": "1968:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$658",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "1982:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "1994:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:9"
									},
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "2027:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 766,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:9"
									},
									"scope": 1148,
									"src": "1943:189:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 810,
										"nodeType": "Block",
										"src": "2381:109:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 798,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "2422:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$658",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 801,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 786,
																		"src": "2444:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$658",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:9",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 657,
																	"src": "2444:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 803,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 788,
																			"src": "2465:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 804,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 790,
																			"src": "2471:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 805,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 792,
																			"src": "2475:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 806,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 799,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 800,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:9",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$658",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 797,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "2398:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 796,
												"id": 809,
												"nodeType": "Return",
												"src": "2391:92:9"
											}
										]
									},
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:9",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "2302:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$658",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 785,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 784,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 658,
														"src": "2302:6:9"
													},
													"referencedDeclaration": 658,
													"src": "2302:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$658",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "2316:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "2330:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "2342:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:9"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "2375:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 794,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:9"
									},
									"scope": 1148,
									"src": "2273:217:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 841,
										"nodeType": "Block",
										"src": "3232:139:9",
										"statements": [
											{
												"assignments": [
													823
												],
												"declarations": [
													{
														"constant": false,
														"id": 823,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 841,
														"src": "3242:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 822,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 832,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 828,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1148",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1148",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 826,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 830,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "3296:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 824,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "3265:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$658",
																"typeString": "contract IERC20"
															}
														},
														"id": 825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:9",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 635,
														"src": "3265:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 834,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "3327:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$658",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 835,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "3334:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 836,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 823,
																"src": "3343:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 837,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 819,
																"src": "3358:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$658",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 833,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "3314:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:9"
											}
										]
									},
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:9",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "3177:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$658",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 814,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 813,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 658,
														"src": "3177:6:9"
													},
													"referencedDeclaration": 658,
													"src": "3177:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$658",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "3191:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "3208:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:9"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:9"
									},
									"scope": 1148,
									"src": "3146:225:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 884,
										"nodeType": "Block",
										"src": "4137:370:9",
										"statements": [
											{
												"id": 883,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:9",
												"statements": [
													{
														"assignments": [
															854
														],
														"declarations": [
															{
																"constant": false,
																"id": 854,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:9",
																"nodeType": "VariableDeclaration",
																"scope": 883,
																"src": "4171:24:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 853,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 863,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 859,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1148",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1148",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 857,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 861,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 848,
																	"src": "4229:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 855,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 846,
																	"src": "4198:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$658",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:9",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 635,
																"src": "4198:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 864,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 854,
																"src": "4255:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 865,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 850,
																"src": "4274:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 874,
														"nodeType": "IfStatement",
														"src": "4251:160:9",
														"trueBody": {
															"id": 873,
															"nodeType": "Block",
															"src": "4293:118:9",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 868,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 848,
																				"src": "4351:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 869,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 854,
																				"src": "4360:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 870,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 850,
																				"src": "4378:17:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 867,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 705,
																			"src": "4318:32:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 872,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:9"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 876,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 846,
																	"src": "4437:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$658",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 877,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 848,
																	"src": "4444:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 878,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 854,
																		"src": "4453:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 879,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 850,
																		"src": "4472:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$658",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 875,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 932,
																"src": "4424:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 882,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 843,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:9",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "4070:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$658",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 845,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 844,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 658,
														"src": "4070:6:9"
													},
													"referencedDeclaration": 658,
													"src": "4070:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$658",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "4084:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "4101:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:9"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:9"
									},
									"scope": 1148,
									"src": "4039:468:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "5161:303:9",
										"statements": [
											{
												"assignments": [
													897
												],
												"declarations": [
													{
														"constant": false,
														"id": 897,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 931,
														"src": "5171:25:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 896,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 906,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 900,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 889,
																"src": "5214:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$658",
																	"typeString": "contract IERC20"
																}
															},
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:9",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 645,
															"src": "5214:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 902,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 891,
																	"src": "5230:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 903,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "5239:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 904,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 898,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 899,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:9",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:9"
											},
											{
												"condition": {
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:9",
													"subExpression": {
														"arguments": [
															{
																"id": 908,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 889,
																"src": "5286:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$658",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 909,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 897,
																"src": "5293:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$658",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 907,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "5262:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 930,
												"nodeType": "IfStatement",
												"src": "5257:201:9",
												"trueBody": {
													"id": 929,
													"nodeType": "Block",
													"src": "5308:150:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 913,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 889,
																		"src": "5342:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$658",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 916,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 889,
																					"src": "5364:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$658",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 917,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:9",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 645,
																				"src": "5364:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 918,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 891,
																						"src": "5380:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 919,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 920,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 914,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 915,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:9",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$658",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 912,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1106,
																	"src": "5322:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 923,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 925,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 889,
																		"src": "5427:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$658",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 926,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 897,
																		"src": "5434:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$658",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 924,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1106,
																	"src": "5407:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 928,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:9",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "5106:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$658",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 888,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 887,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 658,
														"src": "5106:6:9"
													},
													"referencedDeclaration": 658,
													"src": "5106:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$658",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "5120:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "5137:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:9"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:9"
									},
									"scope": 1148,
									"src": "5084:380:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 974,
										"nodeType": "Block",
										"src": "5911:219:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 945,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 938,
																"src": "5925:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:9",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 947,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 948,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 963,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:9",
														"subExpression": {
															"arguments": [
																{
																	"id": 959,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 938,
																	"src": "6034:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 960,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "6038:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 961,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "6045:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 957,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 936,
																	"src": "6012:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$507",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:9",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 458,
																"src": "6012:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 972,
													"nodeType": "IfStatement",
													"src": "6007:117:9",
													"trueBody": {
														"id": 971,
														"nodeType": "Block",
														"src": "6052:72:9",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 967,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 936,
																					"src": "6106:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$507",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$507",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 966,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 965,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 968,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 964,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 696,
																		"src": "6073:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 970,
																"nodeType": "RevertStatement",
																"src": "6066:47:9"
															}
														]
													}
												},
												"id": 973,
												"nodeType": "IfStatement",
												"src": "5921:203:9",
												"trueBody": {
													"id": 956,
													"nodeType": "Block",
													"src": "5946:55:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 951,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 936,
																		"src": "5973:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$507",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 952,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 938,
																		"src": "5980:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 953,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 940,
																		"src": "5984:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$507",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 950,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "5960:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 954,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 955,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:9",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "5840:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$507",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 935,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 934,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 507,
														"src": "5840:8:9"
													},
													"referencedDeclaration": 507,
													"src": "5840:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$507",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "5856:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "5868:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "5883:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 941,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:9"
									},
									"returnParameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:9"
									},
									"scope": 1148,
									"src": "5808:322:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "6649:239:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 990,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 983,
																"src": "6663:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:9",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 993,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1010,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:9",
														"subExpression": {
															"arguments": [
																{
																	"id": 1005,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 981,
																	"src": "6786:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1006,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "6792:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1007,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 985,
																	"src": "6796:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1008,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 987,
																	"src": "6803:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1003,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 979,
																	"src": "6760:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$507",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:9",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 484,
																"src": "6760:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1019,
													"nodeType": "IfStatement",
													"src": "6755:127:9",
													"trueBody": {
														"id": 1018,
														"nodeType": "Block",
														"src": "6810:72:9",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1014,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 979,
																					"src": "6864:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$507",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$507",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1013,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1012,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1015,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1011,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 696,
																		"src": "6831:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1017,
																"nodeType": "RevertStatement",
																"src": "6824:47:9"
															}
														]
													}
												},
												"id": 1020,
												"nodeType": "IfStatement",
												"src": "6659:223:9",
												"trueBody": {
													"id": 1002,
													"nodeType": "Block",
													"src": "6684:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 996,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 979,
																		"src": "6715:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$507",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 997,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 981,
																		"src": "6722:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 998,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 983,
																		"src": "6728:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 999,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 985,
																		"src": "6732:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$507",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 995,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 756,
																	"src": "6698:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1001,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:9",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "6527:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$507",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 978,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 977,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 507,
														"src": "6527:8:9"
													},
													"referencedDeclaration": 507,
													"src": "6527:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$507",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "6551:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "6573:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "6593:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "6616:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 986,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:9"
									},
									"returnParameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:9"
									},
									"scope": 1148,
									"src": "6482:406:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1064,
										"nodeType": "Block",
										"src": "7655:218:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1035,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1028,
																"src": "7669:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:9",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1037,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1038,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1053,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:9",
														"subExpression": {
															"arguments": [
																{
																	"id": 1049,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1028,
																	"src": "7777:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1050,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1030,
																	"src": "7781:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1051,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1032,
																	"src": "7788:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1047,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1026,
																	"src": "7756:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$507",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:9",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 506,
																"src": "7756:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1062,
													"nodeType": "IfStatement",
													"src": "7751:116:9",
													"trueBody": {
														"id": 1061,
														"nodeType": "Block",
														"src": "7795:72:9",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1057,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1026,
																					"src": "7849:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$507",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$507",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1056,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1055,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1058,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1054,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 696,
																		"src": "7816:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1060,
																"nodeType": "RevertStatement",
																"src": "7809:47:9"
															}
														]
													}
												},
												"id": 1063,
												"nodeType": "IfStatement",
												"src": "7665:202:9",
												"trueBody": {
													"id": 1046,
													"nodeType": "Block",
													"src": "7690:55:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1041,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1026,
																		"src": "7717:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$507",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1042,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1028,
																		"src": "7724:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1043,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1030,
																		"src": "7728:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$507",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1040,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 932,
																	"src": "7704:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1045,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1023,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:9",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 1065,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "7584:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$507",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1025,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1024,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 507,
														"src": "7584:8:9"
													},
													"referencedDeclaration": 507,
													"src": "7584:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$507",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "7600:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "7612:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "7627:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1031,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:9"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:9"
									},
									"scope": 1148,
									"src": "7553:320:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1105,
										"nodeType": "Block",
										"src": "8440:650:9",
										"statements": [
											{
												"assignments": [
													1075
												],
												"declarations": [
													{
														"constant": false,
														"id": 1075,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1105,
														"src": "8450:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1074,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1076,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:9"
											},
											{
												"assignments": [
													1078
												],
												"declarations": [
													{
														"constant": false,
														"id": 1078,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1105,
														"src": "8478:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1077,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1079,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:9"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:9",
													"nodeType": "YulBlock",
													"src": "8532:396:9",
													"statements": [
														{
															"nativeSrc": "8546:75:9",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:9"
																		},
																		"nativeSrc": "8566:5:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:9"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:9",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:9"
																		},
																		"nativeSrc": "8583:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:9"
																		},
																		"nativeSrc": "8600:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:9",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:9"
																},
																"nativeSrc": "8561:60:9",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:9"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:9",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:9",
																"nodeType": "YulBlock",
																"src": "8682:157:9",
																"statements": [
																	{
																		"nativeSrc": "8700:22:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:9",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:9",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:9",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:9"
																			},
																			"nativeSrc": "8711:11:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:9"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:9",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:9",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:9",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:9"
																					},
																					"nativeSrc": "8762:16:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:9"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:9",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:9"
																			},
																			"nativeSrc": "8739:40:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:9"
																		},
																		"nativeSrc": "8739:40:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:9"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:9",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:9"
																					},
																					"nativeSrc": "8808:16:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:9"
																			},
																			"nativeSrc": "8796:29:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:9"
																		},
																		"nativeSrc": "8796:29:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:9"
																},
																"nativeSrc": "8666:15:9",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:9"
															},
															"nativeSrc": "8663:176:9",
															"nodeType": "YulIf",
															"src": "8663:176:9"
														},
														{
															"nativeSrc": "8852:30:9",
															"nodeType": "YulAssignment",
															"src": "8852:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:9",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:9"
																},
																"nativeSrc": "8866:16:9",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:9"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:9",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:9"
																}
															]
														},
														{
															"nativeSrc": "8895:23:9",
															"nodeType": "YulAssignment",
															"src": "8895:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:9"
																},
																"nativeSrc": "8910:8:9",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:9"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:9"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1071,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1071,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1075,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:9",
														"valueSize": 1
													},
													{
														"declaration": 1078,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:9",
														"valueSize": 1
													},
													{
														"declaration": 1069,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1080,
												"nodeType": "InlineAssembly",
												"src": "8507:421:9"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1083,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1081,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "8942:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1094,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1092,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "8994:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:9",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1091,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1086,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1069,
																			"src": "8968:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$658",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$658",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1085,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1084,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1088,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:9",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1104,
												"nodeType": "IfStatement",
												"src": "8938:146:9",
												"trueBody": {
													"id": 1103,
													"nodeType": "Block",
													"src": "9012:72:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1099,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1069,
																				"src": "9066:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$658",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$658",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1098,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1097,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1096,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 696,
																	"src": "9033:24:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1102,
															"nodeType": "RevertStatement",
															"src": "9026:47:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:9",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 1106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "8399:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$658",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1068,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1067,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 658,
														"src": "8399:6:9"
													},
													"referencedDeclaration": 658,
													"src": "8399:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$658",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "8413:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1070,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:9"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:9"
									},
									"scope": 1148,
									"src": "8370:720:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "9681:391:9",
										"statements": [
											{
												"assignments": [
													1118
												],
												"declarations": [
													{
														"constant": false,
														"id": 1118,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1146,
														"src": "9691:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1117,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1119,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:9"
											},
											{
												"assignments": [
													1121
												],
												"declarations": [
													{
														"constant": false,
														"id": 1121,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1146,
														"src": "9713:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1120,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1122,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:9"
											},
											{
												"assignments": [
													1124
												],
												"declarations": [
													{
														"constant": false,
														"id": 1124,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1146,
														"src": "9741:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1123,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1125,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:9"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:9",
													"nodeType": "YulBlock",
													"src": "9795:174:9",
													"statements": [
														{
															"nativeSrc": "9809:71:9",
															"nodeType": "YulAssignment",
															"src": "9809:71:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:9"
																		},
																		"nativeSrc": "9825:5:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:9"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:9",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:9"
																		},
																		"nativeSrc": "9842:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:9"
																		},
																		"nativeSrc": "9859:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:9"
																},
																"nativeSrc": "9820:60:9",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:9"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:9"
																}
															]
														},
														{
															"nativeSrc": "9893:30:9",
															"nodeType": "YulAssignment",
															"src": "9893:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:9",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:9"
																},
																"nativeSrc": "9907:16:9",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:9"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:9",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:9"
																}
															]
														},
														{
															"nativeSrc": "9936:23:9",
															"nodeType": "YulAssignment",
															"src": "9936:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:9"
																},
																"nativeSrc": "9951:8:9",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:9"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:9"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1112,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1112,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1121,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:9",
														"valueSize": 1
													},
													{
														"declaration": 1124,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:9",
														"valueSize": 1
													},
													{
														"declaration": 1118,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:9",
														"valueSize": 1
													},
													{
														"declaration": 1110,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1126,
												"nodeType": "InlineAssembly",
												"src": "9770:199:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1127,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1118,
														"src": "9985:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1128,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1121,
																		"src": "9997:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1139,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1124,
																		"src": "10048:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:9",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1133,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1110,
																						"src": "10023:5:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$658",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$658",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 1132,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1131,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:9",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1134,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1135,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:9",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:9",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1143,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1116,
												"id": 1145,
												"nodeType": "Return",
												"src": "9978:87:9"
											}
										]
									},
									"documentation": {
										"id": 1107,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:9",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 1147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "9625:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$658",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1109,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1108,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 658,
														"src": "9625:6:9"
													},
													"referencedDeclaration": 658,
													"src": "9625:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$658",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "9639:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1111,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:9"
									},
									"returnParameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "9675:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1114,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:9"
									},
									"scope": 1148,
									"src": "9592:480:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1149,
							"src": "698:9376:9",
							"usedErrors": [
								696,
								705
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1178
						]
					},
					"id": 1179,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1150,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:10"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1151,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:10",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1178,
							"linearizedBaseContracts": [
								1178
							],
							"name": "Context",
							"nameLocation": "642:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1159,
										"nodeType": "Block",
										"src": "718:34:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1156,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1155,
												"id": 1158,
												"nodeType": "Return",
												"src": "728:17:10"
											}
										]
									},
									"id": 1160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:10"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "709:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:10"
									},
									"scope": 1178,
									"src": "656:96:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1168,
										"nodeType": "Block",
										"src": "825:32:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1165,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:10",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1164,
												"id": 1167,
												"nodeType": "Return",
												"src": "835:15:10"
											}
										]
									},
									"id": 1169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:10"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "809:14:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1162,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:10"
									},
									"scope": 1178,
									"src": "758:99:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1176,
										"nodeType": "Block",
										"src": "935:25:10",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1173,
												"id": 1175,
												"nodeType": "Return",
												"src": "945:8:10"
											}
										]
									},
									"id": 1177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:10"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "926:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:10"
									},
									"scope": 1178,
									"src": "863:97:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1179,
							"src": "624:338:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1202
						],
						"IERC165": [
							1214
						]
					},
					"id": 1203,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1180,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1182,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1203,
							"sourceUnit": 1215,
							"src": "140:38:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1181,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1214,
										"src": "148:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1184,
										"name": "IERC165",
										"nameLocations": [
											"688:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1214,
										"src": "688:7:11"
									},
									"id": 1185,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:11"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1183,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:11",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1202,
							"linearizedBaseContracts": [
								1202,
								1214
							],
							"name": "ERC165",
							"nameLocation": "678:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1213
									],
									"body": {
										"id": 1200,
										"nodeType": "Block",
										"src": "812:64:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1193,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "829:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1195,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1214,
																	"src": "849:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1214_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1214_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1194,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "844:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "844:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1214",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1197,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "858:11:11",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "844:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "829:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1192,
												"id": 1199,
												"nodeType": "Return",
												"src": "822:47:11"
											}
										]
									},
									"documentation": {
										"id": 1186,
										"nodeType": "StructuredDocumentation",
										"src": "702:23:11",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 1201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "739:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "764:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "757:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1187,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "757:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:20:11"
									},
									"returnParameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "806:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1190,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "806:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "805:6:11"
									},
									"scope": 1202,
									"src": "730:146:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1203,
							"src": "660:218:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:765:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1214
						]
					},
					"id": 1215,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1204,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1205,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:12",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1214,
							"linearizedBaseContracts": [
								1214
							],
							"name": "IERC165",
							"nameLocation": "433:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1206,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:12",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "819:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1207,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:12"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "862:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1210,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:12"
									},
									"scope": 1214,
									"src": "792:76:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1215,
							"src": "423:447:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:12"
				},
				"id": 12
			},
			"src/KipuBankV2.sol": {
				"ast": {
					"absolutePath": "src/KipuBankV2.sol",
					"exportedSymbols": {
						"AccessControl": [
							342
						],
						"AggregatorV3Interface": [
							45
						],
						"Context": [
							1178
						],
						"ERC165": [
							1202
						],
						"IAccessControl": [
							425
						],
						"IERC1363": [
							507
						],
						"IERC165": [
							1214
						],
						"IERC20": [
							658
						],
						"IERC20Metadata": [
							684
						],
						"KipuBank": [
							2120
						],
						"ReentrancyGuard": [
							580
						],
						"SafeERC20": [
							1148
						]
					},
					"id": 2121,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1216,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1217,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2121,
							"sourceUnit": 343,
							"src": "408:58:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1218,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2121,
							"sourceUnit": 581,
							"src": "468:62:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1219,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2121,
							"sourceUnit": 659,
							"src": "532:56:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1220,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2121,
							"sourceUnit": 1149,
							"src": "590:65:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 1221,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2121,
							"sourceUnit": 685,
							"src": "657:75:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"id": 1222,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2121,
							"sourceUnit": 46,
							"src": "734:76:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1223,
										"name": "AccessControl",
										"nameLocations": [
											"835:13:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 342,
										"src": "835:13:13"
									},
									"id": 1224,
									"nodeType": "InheritanceSpecifier",
									"src": "835:13:13"
								},
								{
									"baseName": {
										"id": 1225,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"850:15:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 580,
										"src": "850:15:13"
									},
									"id": 1226,
									"nodeType": "InheritanceSpecifier",
									"src": "850:15:13"
								}
							],
							"canonicalName": "KipuBank",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2120,
							"linearizedBaseContracts": [
								2120,
								580,
								342,
								1202,
								1214,
								425,
								1178
							],
							"name": "KipuBank",
							"nameLocation": "823:8:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1230,
									"libraryName": {
										"id": 1227,
										"name": "SafeERC20",
										"nameLocations": [
											"878:9:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1148,
										"src": "878:9:13"
									},
									"nodeType": "UsingForDirective",
									"src": "872:27:13",
									"typeName": {
										"id": 1229,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1228,
											"name": "IERC20",
											"nameLocations": [
												"892:6:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 658,
											"src": "892:6:13"
										},
										"referencedDeclaration": 658,
										"src": "892:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$658",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "f2157052",
									"id": 1235,
									"mutability": "constant",
									"name": "BANK_MANAGER_ROLE",
									"nameLocation": "1019:17:13",
									"nodeType": "VariableDeclaration",
									"scope": 2120,
									"src": "995:74:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1231,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "995:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "42414e4b5f4d414e414745525f524f4c45",
												"id": 1233,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1049:19:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_2d95a8186db49da8bd2356c70cf02038f7de0d6ed39f6766fe2d93d5e7785616",
													"typeString": "literal_string \"BANK_MANAGER_ROLE\""
												},
												"value": "BANK_MANAGER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_2d95a8186db49da8bd2356c70cf02038f7de0d6ed39f6766fe2d93d5e7785616",
													"typeString": "literal_string \"BANK_MANAGER_ROLE\""
												}
											],
											"id": 1232,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1039:9:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1234,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1039:30:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "1203:57:13",
										"text": "@notice Máximo permitido por transacción de retiro."
									},
									"functionSelector": "8c0ff5b7",
									"id": 1238,
									"mutability": "immutable",
									"name": "maxWithdrawal",
									"nameLocation": "1291:13:13",
									"nodeType": "VariableDeclaration",
									"scope": 2120,
									"src": "1266:38:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1237,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1266:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1239,
										"nodeType": "StructuredDocumentation",
										"src": "1313:45:13",
										"text": "@notice Capacidad total del banco en ETH."
									},
									"functionSelector": "a773a500",
									"id": 1241,
									"mutability": "immutable",
									"name": "totalBankCapacityUSD",
									"nameLocation": "1389:20:13",
									"nodeType": "VariableDeclaration",
									"scope": 2120,
									"src": "1364:45:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1240,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1364:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1242,
										"nodeType": "StructuredDocumentation",
										"src": "1418:35:13",
										"text": "@notice Oraculo chailink ETH/USD"
									},
									"functionSelector": "8009b7bd",
									"id": 1245,
									"mutability": "immutable",
									"name": "ethUsdFeed",
									"nameLocation": "1498:10:13",
									"nodeType": "VariableDeclaration",
									"scope": 2120,
									"src": "1459:49:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 1244,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1243,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"1459:21:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "1459:21:13"
										},
										"referencedDeclaration": 45,
										"src": "1459:21:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2e3441a9",
									"id": 1250,
									"mutability": "mutable",
									"name": "priceFeedForToken",
									"nameLocation": "1687:17:13",
									"nodeType": "VariableDeclaration",
									"scope": 2120,
									"src": "1638:66:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$45_$",
										"typeString": "mapping(address => contract AggregatorV3Interface)"
									},
									"typeName": {
										"id": 1249,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1246,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1646:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1638:41:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$45_$",
											"typeString": "mapping(address => contract AggregatorV3Interface)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1248,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1247,
												"name": "AggregatorV3Interface",
												"nameLocations": [
													"1657:21:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "1657:21:13"
											},
											"referencedDeclaration": 45,
											"src": "1657:21:13",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
												"typeString": "contract AggregatorV3Interface"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1251,
										"nodeType": "StructuredDocumentation",
										"src": "1718:46:13",
										"text": "@notice User balances stored in the vault."
									},
									"id": 1257,
									"mutability": "mutable",
									"name": "vaultBalance",
									"nameLocation": "1827:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 2120,
									"src": "1770:69:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1256,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1252,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1778:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1770:48:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1255,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1253,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1798:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1789:28:13",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1254,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1809:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1258,
										"nodeType": "StructuredDocumentation",
										"src": "1848:49:13",
										"text": "@notice Number of deposits made by each user."
									},
									"functionSelector": "f4443d9a",
									"id": 1262,
									"mutability": "mutable",
									"name": "depositCount",
									"nameLocation": "1938:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 2120,
									"src": "1903:47:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1261,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1259,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1911:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1903:27:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1260,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1922:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1263,
										"nodeType": "StructuredDocumentation",
										"src": "1959:52:13",
										"text": "@notice Number of withdrawals made by each user."
									},
									"functionSelector": "b3d8bcdc",
									"id": 1267,
									"mutability": "mutable",
									"name": "withdrawalCount",
									"nameLocation": "2052:15:13",
									"nodeType": "VariableDeclaration",
									"scope": 2120,
									"src": "2017:50:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1266,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1264,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2025:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2017:27:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1265,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2036:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1270,
									"mutability": "mutable",
									"name": "supportedTokens",
									"nameLocation": "2096:15:13",
									"nodeType": "VariableDeclaration",
									"scope": 2120,
									"src": "2078:33:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1268,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2078:7:13",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1269,
										"nodeType": "ArrayTypeName",
										"src": "2078:9:13",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1274,
									"mutability": "mutable",
									"name": "isTokenSupported",
									"nameLocation": "2170:16:13",
									"nodeType": "VariableDeclaration",
									"scope": 2120,
									"src": "2137:49:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1273,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1271,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2145:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2137:24:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1272,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2156:4:13",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1275,
										"nodeType": "StructuredDocumentation",
										"src": "2297:66:13",
										"text": "@notice Total actual de todos los depósitos en el contrato."
									},
									"functionSelector": "e7d66d63",
									"id": 1277,
									"mutability": "mutable",
									"name": "totalDepositsUSD",
									"nameLocation": "2384:16:13",
									"nodeType": "VariableDeclaration",
									"scope": 2120,
									"src": "2369:31:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1276,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2369:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1278,
										"nodeType": "StructuredDocumentation",
										"src": "2554:290:13",
										"text": "@notice Emitted when a user deposits an ETh or token into the contract.\n @param user is the user's address. \n @param amount Amount of ETH deposited.\n @param token what token it was.\n @param usdValue6 its equivalent value in USD (with 6 decimal places)."
									},
									"eventSelector": "57bad7e3c9efecf6e1f60bbd846b999e9da4a409224287a8df09779f2330135e",
									"id": 1288,
									"name": "DepositMade",
									"nameLocation": "2856:11:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2884:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "2868:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2868:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1282,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2906:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "2890:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2890:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2921:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "2913:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2913:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"indexed": false,
												"mutability": "mutable",
												"name": "usdValue6",
												"nameLocation": "2937:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "2929:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2929:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2867:80:13"
									},
									"src": "2850:98:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "2960:158:13",
										"text": "@notice It is issued when the user makes a successful withdrawal.\n @param user the user's address \n @param amount Amount of ETH withdrawn."
									},
									"eventSelector": "de1d532173c6de1e3937c7af1cb92745c738980729f53ac451a725f929f3b798",
									"id": 1299,
									"name": "WithdrawalMade",
									"nameLocation": "3136:14:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3167:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "3151:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3151:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3189:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "3173:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3173:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3204:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "3196:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1297,
												"indexed": false,
												"mutability": "mutable",
												"name": "usdValue6",
												"nameLocation": "3220:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "3212:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3212:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3150:80:13"
									},
									"src": "3130:101:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1300,
										"nodeType": "StructuredDocumentation",
										"src": "3243:97:13",
										"text": "@notice Emitted when an administrator (BANK_MANAGER_ROLE) adds support for a new ERC-20 token"
									},
									"eventSelector": "ea3145306a87baeba6bb1a8b5c8d3744f840a81cb436b3509f64fc978600cdfb",
									"id": 1304,
									"name": "TokenSupported",
									"nameLocation": "3352:14:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3384:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "3367:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3367:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3366:24:13"
									},
									"src": "3346:45:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1305,
										"nodeType": "StructuredDocumentation",
										"src": "3403:76:13",
										"text": "@notice Emitted when support for a previously accepted token is removed."
									},
									"eventSelector": "f940d38196f30e7ff3eb255dd42db8d99a75c1ac112199d4fc314ce6460bfc0c",
									"id": 1309,
									"name": "TokenUnsupported",
									"nameLocation": "3491:16:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3524:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "3508:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3508:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3507:23:13"
									},
									"src": "3485:46:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1310,
										"nodeType": "StructuredDocumentation",
										"src": "3539:98:13",
										"text": "@notice It is issued when a new oracle is assigned to a token, used to obtain its price in USD"
									},
									"eventSelector": "d2d8394cf7549a5ddbc2ba3dd7b2de8d53c891472d1f2907008ed6a10045fdae",
									"id": 1316,
									"name": "PriceFeedSet",
									"nameLocation": "3649:12:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3678:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "3662:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3662:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"indexed": true,
												"mutability": "mutable",
												"name": "feed",
												"nameLocation": "3701:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "3685:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3685:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3661:45:13"
									},
									"src": "3643:64:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1317,
										"nodeType": "StructuredDocumentation",
										"src": "3715:71:13",
										"text": "@notice Emitted when the oracle associated with a token is deleted."
									},
									"eventSelector": "fd58461c4683df397133c7e91fe2aa71559919b405f9e09c9c3af7e875f54e3b",
									"id": 1321,
									"name": "PriceFeedRemoved",
									"nameLocation": "3798:16:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3831:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "3815:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3815:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3814:23:13"
									},
									"src": "3792:46:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1322,
										"nodeType": "StructuredDocumentation",
										"src": "3846:64:13",
										"text": "@notice Emitted when the bank's main parameters are updated:"
									},
									"eventSelector": "db67e4e188651a4e7d8b07ebb82954eabea11fc221b9e9dade49ea810ac2aa4b",
									"id": 1328,
									"name": "ParamentersUpdated",
									"nameLocation": "3922:18:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMaxWithdrawalWei",
												"nameLocation": "3949:19:13",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "3941:27:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3941:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"indexed": false,
												"mutability": "mutable",
												"name": "newCapacityUSD",
												"nameLocation": "3978:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "3970:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3970:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3940:53:13"
									},
									"src": "3916:78:13"
								},
								{
									"documentation": {
										"id": 1329,
										"nodeType": "StructuredDocumentation",
										"src": "4243:60:13",
										"text": "@notice When a withdrawal exceeds the transaction limit."
									},
									"errorSelector": "73a7c910",
									"id": 1331,
									"name": "MaxWithdrawalExceeded",
									"nameLocation": "4315:21:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4336:2:13"
									},
									"src": "4309:30:13"
								},
								{
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "4347:65:13",
										"text": "@notice When a user tries to withdraw more than their balance"
									},
									"errorSelector": "f4d678b8",
									"id": 1334,
									"name": "InsufficientBalance",
									"nameLocation": "4424:19:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4443:2:13"
									},
									"src": "4418:28:13"
								},
								{
									"documentation": {
										"id": 1335,
										"nodeType": "StructuredDocumentation",
										"src": "4454:41:13",
										"text": "@notice When trying to deposit 0 ETH."
									},
									"errorSelector": "86150199",
									"id": 1337,
									"name": "ZeroDepositNotAllowed",
									"nameLocation": "4507:21:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4528:2:13"
									},
									"src": "4501:30:13"
								},
								{
									"documentation": {
										"id": 1338,
										"nodeType": "StructuredDocumentation",
										"src": "4539:67:13",
										"text": "@notice Thrown if you try to send ETH directly to the contract."
									},
									"errorSelector": "3ee6509d",
									"id": 1340,
									"name": "DirectTransferNotAllowed",
									"nameLocation": "4618:24:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4642:2:13"
									},
									"src": "4612:33:13"
								},
								{
									"documentation": {
										"id": 1341,
										"nodeType": "StructuredDocumentation",
										"src": "4657:75:13",
										"text": "@notice It is thrown if someone calls the contract with incorrect data."
									},
									"errorSelector": "3921c703",
									"id": 1343,
									"name": "DirectCallNotAllowed",
									"nameLocation": "4744:20:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4764:2:13"
									},
									"src": "4738:29:13"
								},
								{
									"documentation": {
										"id": 1344,
										"nodeType": "StructuredDocumentation",
										"src": "4775:71:13",
										"text": "@notice It is thrown if the token used is not supported by the bank"
									},
									"errorSelector": "3dd1b305",
									"id": 1346,
									"name": "TokenNotSupported",
									"nameLocation": "4858:17:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4875:2:13"
									},
									"src": "4852:26:13"
								},
								{
									"documentation": {
										"id": 1347,
										"nodeType": "StructuredDocumentation",
										"src": "4886:72:13",
										"text": "@notice Thrown if the maxRetiro value in the constructor is invalid."
									},
									"errorSelector": "f1f13a38",
									"id": 1349,
									"name": "MaximumWithdrawalInvalid",
									"nameLocation": "4970:24:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4994:2:13"
									},
									"src": "4964:33:13"
								},
								{
									"documentation": {
										"id": 1350,
										"nodeType": "StructuredDocumentation",
										"src": "5009:52:13",
										"text": "@notice Thrown if an ETH or token transfer fails"
									},
									"errorSelector": "90b8ec18",
									"id": 1352,
									"name": "TransferFailed",
									"nameLocation": "5073:14:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5087:2:13"
									},
									"src": "5067:23:13"
								},
								{
									"documentation": {
										"id": 1353,
										"nodeType": "StructuredDocumentation",
										"src": "5102:70:13",
										"text": "@notice Thrown if the bank capacity in the constructor is invalid."
									},
									"errorSelector": "afea1c57",
									"id": 1355,
									"name": "InvalidBankCapacity",
									"nameLocation": "5184:19:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5203:2:13"
									},
									"src": "5178:28:13"
								},
								{
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "5218:69:13",
										"text": "@notice It is raised when the amount sent or requested is invalid"
									},
									"errorSelector": "2c5211c6",
									"id": 1358,
									"name": "InvalidAmount",
									"nameLocation": "5299:13:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5312:2:13"
									},
									"src": "5293:22:13"
								},
								{
									"documentation": {
										"id": 1359,
										"nodeType": "StructuredDocumentation",
										"src": "5327:46:13",
										"text": "@notice It is thrown if the oracle address"
									},
									"errorSelector": "9589a27d",
									"id": 1361,
									"name": "InvalidOracle",
									"nameLocation": "5385:13:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5398:2:13"
									},
									"src": "5379:22:13"
								},
								{
									"documentation": {
										"id": 1362,
										"nodeType": "StructuredDocumentation",
										"src": "5413:48:13",
										"text": "@notice It is thrown if the Bank Cap Exceeded"
									},
									"errorSelector": "448f3ca8",
									"id": 1364,
									"name": "BankCapExceeded",
									"nameLocation": "5473:15:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5488:2:13"
									},
									"src": "5467:24:13"
								},
								{
									"body": {
										"id": 1424,
										"nodeType": "Block",
										"src": "5918:505:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1374,
														"name": "_maxWithdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "5933:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1375,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5951:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5933:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1380,
												"nodeType": "IfStatement",
												"src": "5929:58:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1377,
															"name": "MaximumWithdrawalInvalid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1349,
															"src": "5961:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1378,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5961:26:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1379,
													"nodeType": "RevertStatement",
													"src": "5954:33:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1381,
														"name": "_totalCapacityUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1369,
														"src": "6002:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6023:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6002:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1387,
												"nodeType": "IfStatement",
												"src": "5998:56:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1384,
															"name": "InvalidBankCapacity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1355,
															"src": "6033:19:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6033:21:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1386,
													"nodeType": "RevertStatement",
													"src": "6026:28:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1388,
														"name": "_ethUsdFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1371,
														"src": "6069:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1391,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6092:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6084:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1389,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6084:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 1392,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6084:10:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6069:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1397,
												"nodeType": "IfStatement",
												"src": "6065:53:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1394,
															"name": "InvalidOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "6103:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1395,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6103:15:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1396,
													"nodeType": "RevertStatement",
													"src": "6096:22:13"
												}
											},
											{
												"expression": {
													"id": 1400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1398,
														"name": "maxWithdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "6132:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1399,
														"name": "_maxWithdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "6148:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6132:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1401,
												"nodeType": "ExpressionStatement",
												"src": "6132:30:13"
											},
											{
												"expression": {
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1402,
														"name": "totalBankCapacityUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "6173:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1403,
														"name": "_totalCapacityUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1369,
														"src": "6196:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6173:40:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1405,
												"nodeType": "ExpressionStatement",
												"src": "6173:40:13"
											},
											{
												"expression": {
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1406,
														"name": "ethUsdFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1245,
														"src": "6224:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1408,
																"name": "_ethUsdFeed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1371,
																"src": "6259:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1407,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "6237:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 1409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6237:34:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "6224:47:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 1411,
												"nodeType": "ExpressionStatement",
												"src": "6224:47:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1413,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "6332:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1414,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6352:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6356:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6352:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1412,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "6321:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6321:42:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1417,
												"nodeType": "ExpressionStatement",
												"src": "6321:42:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1419,
															"name": "BANK_MANAGER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "6385:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1420,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6404:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6408:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6404:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1418,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "6374:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6374:41:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1423,
												"nodeType": "ExpressionStatement",
												"src": "6374:41:13"
											}
										]
									},
									"documentation": {
										"id": 1365,
										"nodeType": "StructuredDocumentation",
										"src": "5613:209:13",
										"text": "@notice Initializes the contract with the specified limits.\n @param _maxWithdrawal Maximum withdrawal limit per transaction.\n @param _totalCapacityUSD Total ETH capacity of the bank in USD."
									},
									"id": 1425,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "_maxWithdrawal",
												"nameLocation": "5854:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "5846:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5846:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "_totalCapacityUSD",
												"nameLocation": "5878:17:13",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "5870:25:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5870:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "_ethUsdFeed",
												"nameLocation": "5905:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "5897:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5897:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5845:72:13"
									},
									"returnParameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5918:0:13"
									},
									"scope": 2120,
									"src": "5834:589:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1489,
										"nodeType": "Block",
										"src": "6746:410:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1436,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1428,
														"src": "6761:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1439,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6778:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6770:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1437,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6770:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 1440,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6770:10:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6761:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1445,
												"nodeType": "IfStatement",
												"src": "6757:51:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1442,
															"name": "TokenNotSupported",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1346,
															"src": "6789:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6789:19:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1444,
													"nodeType": "RevertStatement",
													"src": "6782:26:13"
												}
											},
											{
												"condition": {
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6823:24:13",
													"subExpression": {
														"baseExpression": {
															"id": 1446,
															"name": "isTokenSupported",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "6824:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1448,
														"indexExpression": {
															"id": 1447,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1428,
															"src": "6841:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6824:23:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1467,
												"nodeType": "IfStatement",
												"src": "6819:170:13",
												"trueBody": {
													"id": 1466,
													"nodeType": "Block",
													"src": "6849:140:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1453,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1428,
																		"src": "6885:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1450,
																		"name": "supportedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1270,
																		"src": "6864:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6880:4:13",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "6864:20:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 1454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6864:27:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1455,
															"nodeType": "ExpressionStatement",
															"src": "6864:27:13"
														},
														{
															"expression": {
																"id": 1460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1456,
																		"name": "isTokenSupported",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1274,
																		"src": "6906:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1458,
																	"indexExpression": {
																		"id": 1457,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1428,
																		"src": "6923:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6906:23:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6932:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6906:30:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1461,
															"nodeType": "ExpressionStatement",
															"src": "6906:30:13"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1463,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1428,
																		"src": "6971:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1462,
																	"name": "TokenSupported",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1304,
																	"src": "6956:14:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 1464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6956:21:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1465,
															"nodeType": "EmitStatement",
															"src": "6951:26:13"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1468,
														"name": "feed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1430,
														"src": "7003:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7019:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7011:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1469,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7011:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 1472,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7011:10:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7003:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1488,
												"nodeType": "IfStatement",
												"src": "6999:150:13",
												"trueBody": {
													"id": 1487,
													"nodeType": "Block",
													"src": "7023:126:13",
													"statements": [
														{
															"expression": {
																"id": 1480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1474,
																		"name": "priceFeedForToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1250,
																		"src": "7038:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$45_$",
																			"typeString": "mapping(address => contract AggregatorV3Interface)"
																		}
																	},
																	"id": 1476,
																	"indexExpression": {
																		"id": 1475,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1428,
																		"src": "7056:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7038:24:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																		"typeString": "contract AggregatorV3Interface"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1478,
																			"name": "feed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1430,
																			"src": "7087:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1477,
																		"name": "AggregatorV3Interface",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 45,
																		"src": "7065:21:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																			"typeString": "type(contract AggregatorV3Interface)"
																		}
																	},
																	"id": 1479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7065:27:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																		"typeString": "contract AggregatorV3Interface"
																	}
																},
																"src": "7038:54:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																	"typeString": "contract AggregatorV3Interface"
																}
															},
															"id": 1481,
															"nodeType": "ExpressionStatement",
															"src": "7038:54:13"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1483,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1428,
																		"src": "7125:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1484,
																		"name": "feed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1430,
																		"src": "7132:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1482,
																	"name": "PriceFeedSet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1316,
																	"src": "7112:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address)"
																	}
																},
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7112:25:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1486,
															"nodeType": "EmitStatement",
															"src": "7107:30:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1426,
										"nodeType": "StructuredDocumentation",
										"src": "6605:47:13",
										"text": "@notice Agrega soporte para un token ERC20 "
									},
									"functionSelector": "92b9f8f5",
									"id": 1490,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1433,
													"name": "BANK_MANAGER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1235,
													"src": "6727:17:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1434,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1432,
												"name": "onlyRole",
												"nameLocations": [
													"6718:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 87,
												"src": "6718:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "6718:27:13"
										}
									],
									"name": "supportToken",
									"nameLocation": "6667:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6688:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "6680:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6680:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "feed",
												"nameLocation": "6703:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "6695:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6695:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6679:29:13"
									},
									"returnParameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6746:0:13"
									},
									"scope": 2120,
									"src": "6658:498:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1563,
										"nodeType": "Block",
										"src": "7427:531:13",
										"statements": [
											{
												"condition": {
													"id": 1502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7442:24:13",
													"subExpression": {
														"baseExpression": {
															"id": 1499,
															"name": "isTokenSupported",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "7443:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1501,
														"indexExpression": {
															"id": 1500,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "7460:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7443:23:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1506,
												"nodeType": "IfStatement",
												"src": "7438:56:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1503,
															"name": "TokenNotSupported",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1346,
															"src": "7475:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1504,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7475:19:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1505,
													"nodeType": "RevertStatement",
													"src": "7468:26:13"
												}
											},
											{
												"expression": {
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1507,
															"name": "isTokenSupported",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "7505:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1509,
														"indexExpression": {
															"id": 1508,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "7522:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7505:23:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1510,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7531:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "7505:31:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1512,
												"nodeType": "ExpressionStatement",
												"src": "7505:31:13"
											},
											{
												"body": {
													"id": 1548,
													"nodeType": "Block",
													"src": "7609:222:13",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1524,
																		"name": "supportedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1270,
																		"src": "7628:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1526,
																	"indexExpression": {
																		"id": 1525,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1514,
																		"src": "7644:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7628:18:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1527,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "7650:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7628:27:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1547,
															"nodeType": "IfStatement",
															"src": "7624:196:13",
															"trueBody": {
																"id": 1546,
																"nodeType": "Block",
																"src": "7657:163:13",
																"statements": [
																	{
																		"expression": {
																			"id": 1538,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1529,
																					"name": "supportedTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1270,
																					"src": "7676:15:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1531,
																				"indexExpression": {
																					"id": 1530,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1514,
																					"src": "7692:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "7676:18:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1532,
																					"name": "supportedTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1270,
																					"src": "7697:15:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1537,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1536,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1533,
																							"name": "supportedTokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1270,
																							"src": "7713:15:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_storage",
																								"typeString": "address[] storage ref"
																							}
																						},
																						"id": 1534,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "7729:6:13",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "7713:22:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1535,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "7738:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "7713:26:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7697:43:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "7676:64:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1539,
																		"nodeType": "ExpressionStatement",
																		"src": "7676:64:13"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 1540,
																					"name": "supportedTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1270,
																					"src": "7759:15:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1542,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7775:3:13",
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "7759:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																					"typeString": "function (address[] storage pointer)"
																				}
																			},
																			"id": 1543,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7759:21:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1544,
																		"nodeType": "ExpressionStatement",
																		"src": "7759:21:13"
																	},
																	{
																		"id": 1545,
																		"nodeType": "Break",
																		"src": "7799:5:13"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1517,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1514,
														"src": "7576:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1518,
															"name": "supportedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "7580:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7596:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7580:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7576:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1549,
												"initializationExpression": {
													"assignments": [
														1514
													],
													"declarations": [
														{
															"constant": false,
															"id": 1514,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7569:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 1549,
															"src": "7561:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1513,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7561:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1516,
													"initialValue": {
														"hexValue": "30",
														"id": 1515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7573:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7561:13:13"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7604:3:13",
														"subExpression": {
															"id": 1521,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1514,
															"src": "7604:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1523,
													"nodeType": "ExpressionStatement",
													"src": "7604:3:13"
												},
												"nodeType": "ForStatement",
												"src": "7556:275:13"
											},
											{
												"expression": {
													"id": 1553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "7841:31:13",
													"subExpression": {
														"baseExpression": {
															"id": 1550,
															"name": "priceFeedForToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "7848:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "mapping(address => contract AggregatorV3Interface)"
															}
														},
														"id": 1552,
														"indexExpression": {
															"id": 1551,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "7866:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7848:24:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1554,
												"nodeType": "ExpressionStatement",
												"src": "7841:31:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1556,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "7905:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1555,
														"name": "TokenUnsupported",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "7888:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7888:23:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1558,
												"nodeType": "EmitStatement",
												"src": "7883:28:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1560,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "7944:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1559,
														"name": "PriceFeedRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1321,
														"src": "7927:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7927:23:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1562,
												"nodeType": "EmitStatement",
												"src": "7922:28:13"
											}
										]
									},
									"documentation": {
										"id": 1491,
										"nodeType": "StructuredDocumentation",
										"src": "7168:177:13",
										"text": "@notice The function marks a token as unsupported and can only be executed by a user with the BANK_MANAGER_ROLE role, preventing any user from disabling support for a token."
									},
									"functionSelector": "ee3d6866",
									"id": 1564,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1496,
													"name": "BANK_MANAGER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1235,
													"src": "7408:17:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1497,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1495,
												"name": "onlyRole",
												"nameLocations": [
													"7399:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 87,
												"src": "7399:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "7399:27:13"
										}
									],
									"name": "unsupportToken",
									"nameLocation": "7360:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7383:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "7375:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7375:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7374:15:13"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7427:0:13"
									},
									"scope": 2120,
									"src": "7351:607:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1597,
										"nodeType": "Block",
										"src": "8054:215:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1574,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1566,
														"src": "8069:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8086:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8078:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1575,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8078:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 1578,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8078:10:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8069:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1583,
												"nodeType": "IfStatement",
												"src": "8065:47:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1580,
															"name": "InvalidOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "8097:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1581,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8097:15:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1582,
													"nodeType": "RevertStatement",
													"src": "8090:22:13"
												}
											},
											{
												"expression": {
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1584,
															"name": "priceFeedForToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "8166:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "mapping(address => contract AggregatorV3Interface)"
															}
														},
														"id": 1586,
														"indexExpression": {
															"id": 1585,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "8184:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8166:24:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1588,
																"name": "feed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1568,
																"src": "8215:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1587,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "8193:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 1589,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8193:27:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "8166:54:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 1591,
												"nodeType": "ExpressionStatement",
												"src": "8166:54:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1593,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "8249:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1594,
															"name": "feed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1568,
															"src": "8256:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1592,
														"name": "PriceFeedSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1316,
														"src": "8236:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8236:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1596,
												"nodeType": "EmitStatement",
												"src": "8231:30:13"
											}
										]
									},
									"functionSelector": "76e11286",
									"id": 1598,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1571,
													"name": "BANK_MANAGER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1235,
													"src": "8035:17:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1572,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1570,
												"name": "onlyRole",
												"nameLocations": [
													"8026:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 87,
												"src": "8026:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "8026:27:13"
										}
									],
									"name": "setPriceFeed",
									"nameLocation": "7975:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7996:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "7988:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7988:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "feed",
												"nameLocation": "8011:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "8003:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8003:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7987:29:13"
									},
									"returnParameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8054:0:13"
									},
									"scope": 2120,
									"src": "7966:303:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1732,
										"nodeType": "Block",
										"src": "8731:931:13",
										"statements": [
											{
												"assignments": [
													1609
												],
												"declarations": [
													{
														"constant": false,
														"id": 1609,
														"mutability": "mutable",
														"name": "usdValue6",
														"nameLocation": "8750:9:13",
														"nodeType": "VariableDeclaration",
														"scope": 1732,
														"src": "8742:17:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1608,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8742:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1610,
												"nodeType": "VariableDeclarationStatement",
												"src": "8742:17:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1611,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1601,
														"src": "8774:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1614,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8791:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8783:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1612,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8783:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 1615,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8783:10:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8774:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1690,
													"nodeType": "Block",
													"src": "8993:337:13",
													"statements": [
														{
															"condition": {
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "9011:24:13",
																"subExpression": {
																	"baseExpression": {
																		"id": 1646,
																		"name": "isTokenSupported",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1274,
																		"src": "9012:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1648,
																	"indexExpression": {
																		"id": 1647,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1601,
																		"src": "9029:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9012:23:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1653,
															"nodeType": "IfStatement",
															"src": "9007:56:13",
															"trueBody": {
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1650,
																		"name": "TokenNotSupported",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1346,
																		"src": "9044:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																			"typeString": "function () pure returns (error)"
																		}
																	},
																	"id": 1651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9044:19:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1652,
																"nodeType": "RevertStatement",
																"src": "9037:26:13"
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1654,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1603,
																	"src": "9081:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9091:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9081:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1660,
															"nodeType": "IfStatement",
															"src": "9077:47:13",
															"trueBody": {
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1657,
																		"name": "ZeroDepositNotAllowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1337,
																		"src": "9101:21:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																			"typeString": "function () pure returns (error)"
																		}
																	},
																	"id": 1658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9101:23:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1659,
																"nodeType": "RevertStatement",
																"src": "9094:30:13"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1665,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "9169:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9173:6:13",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "9169:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1669,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "9189:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_KipuBank_$2120",
																					"typeString": "contract KipuBank"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_KipuBank_$2120",
																					"typeString": "contract KipuBank"
																				}
																			],
																			"id": 1668,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9181:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1667,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9181:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9181:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1671,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1603,
																		"src": "9196:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1662,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1601,
																				"src": "9145:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1661,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 658,
																			"src": "9138:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$658_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9138:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$658",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9152:16:13",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 756,
																	"src": "9138:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$658_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9138:65:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1673,
															"nodeType": "ExpressionStatement",
															"src": "9138:65:13"
														},
														{
															"expression": {
																"id": 1679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1674,
																	"name": "usdValue6",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1609,
																	"src": "9217:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1676,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1601,
																			"src": "9248:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1677,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1603,
																			"src": "9255:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1675,
																		"name": "_convertTokenToUSD",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2061,
																		"src": "9229:18:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 1678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9229:33:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9217:45:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1680,
															"nodeType": "ExpressionStatement",
															"src": "9217:45:13"
														},
														{
															"expression": {
																"id": 1688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1681,
																			"name": "vaultBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1257,
																			"src": "9276:12:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1685,
																		"indexExpression": {
																			"expression": {
																				"id": 1682,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "9289:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9293:6:13",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "9289:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9276:24:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1686,
																	"indexExpression": {
																		"id": 1684,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1601,
																		"src": "9301:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9276:31:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1687,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1603,
																	"src": "9311:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9276:41:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1689,
															"nodeType": "ExpressionStatement",
															"src": "9276:41:13"
														}
													]
												},
												"id": 1691,
												"nodeType": "IfStatement",
												"src": "8770:560:13",
												"trueBody": {
													"id": 1645,
													"nodeType": "Block",
													"src": "8795:194:13",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1617,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8813:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8817:5:13",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "8813:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8826:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8813:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1624,
															"nodeType": "IfStatement",
															"src": "8809:50:13",
															"trueBody": {
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1621,
																		"name": "ZeroDepositNotAllowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1337,
																		"src": "8836:21:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																			"typeString": "function () pure returns (error)"
																		}
																	},
																	"id": 1622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8836:23:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1623,
																"nodeType": "RevertStatement",
																"src": "8829:30:13"
															}
														},
														{
															"expression": {
																"id": 1630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1625,
																	"name": "usdValue6",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1609,
																	"src": "8874:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1627,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "8903:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8907:5:13",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "8903:9:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1626,
																		"name": "_convertEthToUSD",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2000,
																		"src": "8886:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 1629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8886:27:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8874:39:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1631,
															"nodeType": "ExpressionStatement",
															"src": "8874:39:13"
														},
														{
															"expression": {
																"id": 1643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1632,
																			"name": "vaultBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1257,
																			"src": "8928:12:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1639,
																		"indexExpression": {
																			"expression": {
																				"id": 1633,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "8941:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1634,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8945:6:13",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "8941:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8928:24:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1640,
																	"indexExpression": {
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1637,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8961:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8953:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1635,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8953:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8953:10:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8928:36:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 1641,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8968:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8972:5:13",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "8968:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8928:49:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1644,
															"nodeType": "ExpressionStatement",
															"src": "8928:49:13"
														}
													]
												}
											},
											{
												"assignments": [
													1693
												],
												"declarations": [
													{
														"constant": false,
														"id": 1693,
														"mutability": "mutable",
														"name": "newTotalUSD",
														"nameLocation": "9358:11:13",
														"nodeType": "VariableDeclaration",
														"scope": 1732,
														"src": "9350:19:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1692,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9350:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1697,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1694,
														"name": "totalDepositsUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "9372:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1695,
														"name": "usdValue6",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1609,
														"src": "9391:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9372:28:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9350:50:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1698,
														"name": "newTotalUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1693,
														"src": "9415:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1699,
														"name": "totalBankCapacityUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "9429:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9415:34:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1704,
												"nodeType": "IfStatement",
												"src": "9411:64:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1701,
															"name": "BankCapExceeded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "9458:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1702,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9458:17:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1703,
													"nodeType": "RevertStatement",
													"src": "9451:24:13"
												}
											},
											{
												"expression": {
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1705,
														"name": "totalDepositsUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "9486:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1706,
														"name": "newTotalUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1693,
														"src": "9505:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9486:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1708,
												"nodeType": "ExpressionStatement",
												"src": "9486:30:13"
											},
											{
												"expression": {
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "9527:26:13",
													"subExpression": {
														"baseExpression": {
															"id": 1709,
															"name": "depositCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1262,
															"src": "9527:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1712,
														"indexExpression": {
															"expression": {
																"id": 1710,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9540:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9544:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9540:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9527:24:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1714,
												"nodeType": "ExpressionStatement",
												"src": "9527:26:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1716,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9583:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9587:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9583:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1718,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1601,
															"src": "9595:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1724,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1719,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1601,
																	"src": "9602:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1722,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9619:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9611:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1720,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "9611:7:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9611:10:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "9602:19:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"id": 1727,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1603,
																"src": "9636:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "9602:40:13",
															"trueExpression": {
																"expression": {
																	"id": 1725,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "9624:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9628:5:13",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "9624:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1729,
															"name": "usdValue6",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1609,
															"src": "9644:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1715,
														"name": "DepositMade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1288,
														"src": "9571:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9571:83:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1731,
												"nodeType": "EmitStatement",
												"src": "9566:88:13"
											}
										]
									},
									"documentation": {
										"id": 1599,
										"nodeType": "StructuredDocumentation",
										"src": "8386:255:13",
										"text": "@notice Deposits ETH into the user's personal vault.\n @dev Check global limit and record deposit.\n @dev allows a user to deposit ETH or a token.\n @dev updates their balance and total in USD.\n @dev emits a deposit event."
									},
									"functionSelector": "47e7ef24",
									"id": 1733,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1606,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1605,
												"name": "nonReentrant",
												"nameLocations": [
													"8718:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 545,
												"src": "8718:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "8718:12:13"
										}
									],
									"name": "deposit",
									"nameLocation": "8662:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8678:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "8670:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8670:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8693:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "8685:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8685:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8669:31:13"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8731:0:13"
									},
									"scope": 2120,
									"src": "8653:1009:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1853,
										"nodeType": "Block",
										"src": "10233:858:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1743,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1738,
														"src": "10257:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1744,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10267:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10257:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1749,
												"nodeType": "IfStatement",
												"src": "10254:38:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1746,
															"name": "InvalidAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1358,
															"src": "10277:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10277:15:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1748,
													"nodeType": "RevertStatement",
													"src": "10270:22:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1750,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1738,
														"src": "10306:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1751,
														"name": "maxWithdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "10315:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10306:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1756,
												"nodeType": "IfStatement",
												"src": "10303:57:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1753,
															"name": "MaxWithdrawalExceeded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1331,
															"src": "10337:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1754,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10337:23:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1755,
													"nodeType": "RevertStatement",
													"src": "10330:30:13"
												}
											},
											{
												"assignments": [
													1758
												],
												"declarations": [
													{
														"constant": false,
														"id": 1758,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "10389:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 1853,
														"src": "10381:15:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1757,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10381:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1765,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1759,
															"name": "vaultBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1257,
															"src": "10399:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1762,
														"indexExpression": {
															"expression": {
																"id": 1760,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10412:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10416:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10412:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10399:24:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1764,
													"indexExpression": {
														"id": 1763,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1736,
														"src": "10424:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10399:31:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10381:49:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1766,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1758,
														"src": "10445:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1767,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1738,
														"src": "10455:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10445:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1772,
												"nodeType": "IfStatement",
												"src": "10441:50:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1769,
															"name": "InsufficientBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "10470:19:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1770,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10470:21:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1771,
													"nodeType": "RevertStatement",
													"src": "10463:28:13"
												}
											},
											{
												"assignments": [
													1774
												],
												"declarations": [
													{
														"constant": false,
														"id": 1774,
														"mutability": "mutable",
														"name": "usdValue6",
														"nameLocation": "10520:9:13",
														"nodeType": "VariableDeclaration",
														"scope": 1853,
														"src": "10512:17:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1773,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10512:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1789,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1780,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1775,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1736,
															"src": "10532:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10549:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1777,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10541:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1776,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10541:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1779,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10541:10:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "10532:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"id": 1785,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1736,
																"src": "10600:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1786,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1738,
																"src": "10607:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1784,
															"name": "_convertTokenToUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2061,
															"src": "10581:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (address,uint256) view returns (uint256)"
															}
														},
														"id": 1787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10581:33:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "10532:82:13",
													"trueExpression": {
														"arguments": [
															{
																"id": 1782,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1738,
																"src": "10571:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1781,
															"name": "_convertEthToUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2000,
															"src": "10554:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1783,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10554:24:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10512:102:13"
											},
											{
												"expression": {
													"id": 1799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1790,
																"name": "vaultBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1257,
																"src": "10627:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1794,
															"indexExpression": {
																"expression": {
																	"id": 1791,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "10640:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1792,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10644:6:13",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "10640:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10627:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1795,
														"indexExpression": {
															"id": 1793,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1736,
															"src": "10652:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10627:31:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1798,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1796,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1758,
															"src": "10661:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1797,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1738,
															"src": "10671:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10661:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10627:50:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1800,
												"nodeType": "ExpressionStatement",
												"src": "10627:50:13"
											},
											{
												"expression": {
													"id": 1803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1801,
														"name": "totalDepositsUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "10688:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1802,
														"name": "usdValue6",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1774,
														"src": "10708:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10688:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1804,
												"nodeType": "ExpressionStatement",
												"src": "10688:29:13"
											},
											{
												"expression": {
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "10728:29:13",
													"subExpression": {
														"baseExpression": {
															"id": 1805,
															"name": "withdrawalCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "10728:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1808,
														"indexExpression": {
															"expression": {
																"id": 1806,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10744:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10748:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10744:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10728:27:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1810,
												"nodeType": "ExpressionStatement",
												"src": "10728:29:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1811,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1736,
														"src": "10782:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10799:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1813,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10791:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1812,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10791:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 1815,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10791:10:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10782:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1843,
													"nodeType": "Block",
													"src": "10941:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1838,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "10983:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10987:6:13",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "10983:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1840,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1738,
																		"src": "10995:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1835,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1736,
																				"src": "10963:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1834,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 658,
																			"src": "10956:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$658_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10956:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$658",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10970:12:13",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 729,
																	"src": "10956:26:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$658_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10956:46:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1842,
															"nodeType": "ExpressionStatement",
															"src": "10956:46:13"
														}
													]
												},
												"id": 1844,
												"nodeType": "IfStatement",
												"src": "10778:236:13",
												"trueBody": {
													"id": 1833,
													"nodeType": "Block",
													"src": "10803:132:13",
													"statements": [
														{
															"assignments": [
																1818,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1818,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "10824:7:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 1833,
																	"src": "10819:12:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1817,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "10819:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1826,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10868:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1819,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "10837:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1820,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10841:6:13",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "10837:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10848:4:13",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "10837:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1822,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1738,
																			"src": "10860:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "10837:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10837:34:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10818:53:13"
														},
														{
															"condition": {
																"id": 1828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "10890:8:13",
																"subExpression": {
																	"id": 1827,
																	"name": "success",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1818,
																	"src": "10891:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1832,
															"nodeType": "IfStatement",
															"src": "10886:37:13",
															"trueBody": {
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1829,
																		"name": "TransferFailed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1352,
																		"src": "10907:14:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																			"typeString": "function () pure returns (error)"
																		}
																	},
																	"id": 1830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10907:16:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1831,
																"nodeType": "RevertStatement",
																"src": "10900:23:13"
															}
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1846,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11046:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11050:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11046:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1848,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1736,
															"src": "11058:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1849,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1738,
															"src": "11065:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1850,
															"name": "usdValue6",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1774,
															"src": "11073:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1845,
														"name": "WithdrawalMade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1299,
														"src": "11031:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11031:52:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1852,
												"nodeType": "EmitStatement",
												"src": "11026:57:13"
											}
										]
									},
									"documentation": {
										"id": 1734,
										"nodeType": "StructuredDocumentation",
										"src": "9777:374:13",
										"text": "@notice Withdraws a specified amount of ETH from the user's vault.\n @param amount The amount of ETH to withdraw and uses secure transfers and custom errors.\n @dev user to withdraw ETH or token.\n @dev check limits and balance. \n @dev update balances and total in USD and perform the secure transfer.\n @dev issue a withdrawal event."
									},
									"functionSelector": "f3fef3a3",
									"id": 1854,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1741,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1740,
												"name": "nonReentrant",
												"nameLocations": [
													"10220:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 545,
												"src": "10220:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "10220:12:13"
										}
									],
									"name": "withdraw",
									"nameLocation": "10171:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "10188:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "10180:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10180:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10203:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "10195:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10195:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10179:31:13"
									},
									"returnParameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10233:0:13"
									},
									"scope": 2120,
									"src": "10162:929:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1870,
										"nodeType": "Block",
										"src": "11478:51:13",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1864,
															"name": "vaultBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1257,
															"src": "11496:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1866,
														"indexExpression": {
															"id": 1865,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1857,
															"src": "11509:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11496:18:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1868,
													"indexExpression": {
														"id": 1867,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1859,
														"src": "11515:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11496:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1863,
												"id": 1869,
												"nodeType": "Return",
												"src": "11489:32:13"
											}
										]
									},
									"documentation": {
										"id": 1855,
										"nodeType": "StructuredDocumentation",
										"src": "11205:174:13",
										"text": "@notice Returns the current vault balance of a given user.\n @param user Address of the user to query.\n @return The ETH balance of the user in the vault."
									},
									"functionSelector": "6805d6ad",
									"id": 1871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserBalance",
									"nameLocation": "11402:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "11425:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "11417:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11417:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "11439:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "11431:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11431:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11416:29:13"
									},
									"returnParameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "11469:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11469:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11468:9:13"
									},
									"scope": 2120,
									"src": "11393:136:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1879,
										"nodeType": "Block",
										"src": "11611:41:13",
										"statements": [
											{
												"expression": {
													"id": 1877,
													"name": "supportedTokens",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1270,
													"src": "11629:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 1876,
												"id": 1878,
												"nodeType": "Return",
												"src": "11622:22:13"
											}
										]
									},
									"functionSelector": "d3c7c2c7",
									"id": 1880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSupportedTokens",
									"nameLocation": "11550:18:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11568:2:13"
									},
									"returnParameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "11594:16:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1873,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "11594:7:13",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1874,
													"nodeType": "ArrayTypeName",
													"src": "11594:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11593:18:13"
									},
									"scope": 2120,
									"src": "11541:111:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1903,
										"nodeType": "Block",
										"src": "11975:104:13",
										"statements": [
											{
												"assignments": [
													1889,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1889,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "11992:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 1903,
														"src": "11987:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1888,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "11987:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1896,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1894,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12035:2:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1890,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1883,
																"src": "12005:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12015:4:13",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "12005:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1893,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1892,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1885,
																"src": "12027:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "12005:29:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12005:33:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11986:52:13"
											},
											{
												"condition": {
													"id": 1898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "12053:8:13",
													"subExpression": {
														"id": 1897,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1889,
														"src": "12054:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1902,
												"nodeType": "IfStatement",
												"src": "12049:22:13",
												"trueBody": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1899,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967277,
																4294967277
															],
															"referencedDeclaration": 4294967277,
															"src": "12063:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1900,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12063:8:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1901,
													"nodeType": "ExpressionStatement",
													"src": "12063:8:13"
												}
											}
										]
									},
									"documentation": {
										"id": 1881,
										"nodeType": "StructuredDocumentation",
										"src": "11744:159:13",
										"text": "@dev Handles secure ETH transfer.\n @param recipient Address to which the ETH will be sent \n@param amount Amount of ETH to be transferred."
									},
									"id": 1904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "11918:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "11940:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "11932:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11932:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11959:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "11951:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11951:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11931:35:13"
									},
									"returnParameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11975:0:13"
									},
									"scope": 2120,
									"src": "11909:170:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1920,
										"nodeType": "Block",
										"src": "12259:144:13",
										"statements": [
											{
												"assignments": [
													null,
													1910,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1910,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "12280:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 1920,
														"src": "12273:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1909,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "12273:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1914,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1911,
															"name": "ethUsdFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "12295:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 1912,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12306:15:13",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "12295:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 1913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12295:28:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12270:53:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1917,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1910,
															"src": "12389:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1916,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12381:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1915,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12381:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 1918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12381:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1908,
												"id": 1919,
												"nodeType": "Return",
												"src": "12374:21:13"
											}
										]
									},
									"functionSelector": "30c0b9ec",
									"id": 1921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLatestEthPrice",
									"nameLocation": "12209:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12226:2:13"
									},
									"returnParameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "12250:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12250:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12249:9:13"
									},
									"scope": 2120,
									"src": "12200:203:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1979,
										"nodeType": "Block",
										"src": "12574:341:13",
										"statements": [
											{
												"body": {
													"id": 1964,
													"nodeType": "Block",
													"src": "12638:197:13",
													"statements": [
														{
															"assignments": [
																1940
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1940,
																	"mutability": "mutable",
																	"name": "token",
																	"nameLocation": "12661:5:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 1964,
																	"src": "12653:13:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1939,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12653:7:13",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1944,
															"initialValue": {
																"baseExpression": {
																	"id": 1941,
																	"name": "supportedTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1270,
																	"src": "12669:15:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 1943,
																"indexExpression": {
																	"id": 1942,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1929,
																	"src": "12685:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12669:18:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12653:34:13"
														},
														{
															"assignments": [
																1946
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1946,
																	"mutability": "mutable",
																	"name": "balance",
																	"nameLocation": "12710:7:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 1964,
																	"src": "12702:15:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1945,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12702:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1952,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1947,
																		"name": "vaultBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1257,
																		"src": "12720:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 1949,
																	"indexExpression": {
																		"id": 1948,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1923,
																		"src": "12733:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12720:18:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1951,
																"indexExpression": {
																	"id": 1950,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1940,
																	"src": "12739:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12720:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12702:43:13"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1953,
																	"name": "balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1946,
																	"src": "12764:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12774:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "12764:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1963,
															"nodeType": "IfStatement",
															"src": "12760:63:13",
															"trueBody": {
																"expression": {
																	"id": 1961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1956,
																		"name": "totalUSD",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1926,
																		"src": "12777:8:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "+=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 1958,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1940,
																				"src": "12808:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1959,
																				"name": "balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1946,
																				"src": "12815:7:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1957,
																			"name": "_convertTokenToUSD",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2061,
																			"src": "12789:18:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (address,uint256) view returns (uint256)"
																			}
																		},
																		"id": 1960,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12789:34:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12777:46:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1962,
																"nodeType": "ExpressionStatement",
																"src": "12777:46:13"
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1932,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1929,
														"src": "12605:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1933,
															"name": "supportedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "12609:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1934,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12625:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12609:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12605:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1965,
												"initializationExpression": {
													"assignments": [
														1929
													],
													"declarations": [
														{
															"constant": false,
															"id": 1929,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12598:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 1965,
															"src": "12590:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1928,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12590:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1931,
													"initialValue": {
														"hexValue": "30",
														"id": 1930,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12602:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12590:13:13"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1937,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "12633:3:13",
														"subExpression": {
															"id": 1936,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1929,
															"src": "12633:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1938,
													"nodeType": "ExpressionStatement",
													"src": "12633:3:13"
												},
												"nodeType": "ForStatement",
												"src": "12585:250:13"
											},
											{
												"expression": {
													"id": 1977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1966,
														"name": "totalUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1926,
														"src": "12847:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"baseExpression": {
																		"id": 1968,
																		"name": "vaultBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1257,
																		"src": "12876:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 1970,
																	"indexExpression": {
																		"id": 1969,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1923,
																		"src": "12889:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12876:18:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1975,
																"indexExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12903:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12895:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1971,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12895:7:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12895:10:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12876:30:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1967,
															"name": "_convertEthToUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2000,
															"src": "12859:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1976,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12859:48:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12847:60:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1978,
												"nodeType": "ExpressionStatement",
												"src": "12847:60:13"
											}
										]
									},
									"functionSelector": "1e604ea3",
									"id": 1980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalDepositsInUSD",
									"nameLocation": "12498:21:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "12528:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "12520:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12520:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12519:14:13"
									},
									"returnParameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "totalUSD",
												"nameLocation": "12565:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "12557:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12557:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12556:18:13"
									},
									"scope": 2120,
									"src": "12489:426:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1999,
										"nodeType": "Block",
										"src": "13104:128:13",
										"statements": [
											{
												"assignments": [
													1988
												],
												"declarations": [
													{
														"constant": false,
														"id": 1988,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "13123:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 1999,
														"src": "13115:13:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1987,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13115:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1991,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1989,
														"name": "getLatestEthPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1921,
														"src": "13131:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13131:19:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13115:35:13"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1992,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1982,
																	"src": "13184:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1993,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1988,
																	"src": "13193:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13184:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1995,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "13183:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "316538",
														"id": 1996,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13202:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000_by_1",
															"typeString": "int_const 100000000"
														},
														"value": "1e8"
													},
													"src": "13183:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1986,
												"id": 1998,
												"nodeType": "Return",
												"src": "13176:29:13"
											}
										]
									},
									"id": 2000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_convertEthToUSD",
									"nameLocation": "13039:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13064:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "13056:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13056:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13055:16:13"
									},
									"returnParameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "13095:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13095:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13094:9:13"
									},
									"scope": 2120,
									"src": "13030:202:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2060,
										"nodeType": "Block",
										"src": "13331:383:13",
										"statements": [
											{
												"assignments": [
													2011
												],
												"declarations": [
													{
														"constant": false,
														"id": 2011,
														"mutability": "mutable",
														"name": "feed",
														"nameLocation": "13364:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 2060,
														"src": "13342:26:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														},
														"typeName": {
															"id": 2010,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2009,
																"name": "AggregatorV3Interface",
																"nameLocations": [
																	"13342:21:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 45,
																"src": "13342:21:13"
															},
															"referencedDeclaration": 45,
															"src": "13342:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2015,
												"initialValue": {
													"baseExpression": {
														"id": 2012,
														"name": "priceFeedForToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1250,
														"src": "13371:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$45_$",
															"typeString": "mapping(address => contract AggregatorV3Interface)"
														}
													},
													"id": 2014,
													"indexExpression": {
														"id": 2013,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2002,
														"src": "13389:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13371:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13342:53:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2018,
																"name": "feed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2011,
																"src": "13418:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																	"typeString": "contract AggregatorV3Interface"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																	"typeString": "contract AggregatorV3Interface"
																}
															],
															"id": 2017,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13410:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2016,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13410:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 2019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13410:13:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2022,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13435:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2021,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13427:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2020,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13427:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 2023,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13427:10:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13410:27:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2028,
												"nodeType": "IfStatement",
												"src": "13406:55:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2025,
															"name": "InvalidOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "13446:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 2026,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13446:15:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2027,
													"nodeType": "RevertStatement",
													"src": "13439:22:13"
												}
											},
											{
												"assignments": [
													null,
													2030,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 2030,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "13482:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 2060,
														"src": "13475:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2029,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "13475:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 2034,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2031,
															"name": "feed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2011,
															"src": "13497:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 2032,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13502:15:13",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "13497:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 2033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13497:22:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13472:47:13"
											},
											{
												"assignments": [
													2036
												],
												"declarations": [
													{
														"constant": false,
														"id": 2036,
														"mutability": "mutable",
														"name": "decimals",
														"nameLocation": "13536:8:13",
														"nodeType": "VariableDeclaration",
														"scope": 2060,
														"src": "13530:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 2035,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "13530:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2042,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 2038,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2002,
																	"src": "13562:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2037,
																"name": "IERC20Metadata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 684,
																"src": "13547:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$684_$",
																	"typeString": "type(contract IERC20Metadata)"
																}
															},
															"id": 2039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13547:21:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Metadata_$684",
																"typeString": "contract IERC20Metadata"
															}
														},
														"id": 2040,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13569:8:13",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 683,
														"src": "13547:30:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
															"typeString": "function () view external returns (uint8)"
														}
													},
													"id": 2041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13547:32:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13530:49:13"
											},
											{
												"assignments": [
													2044
												],
												"declarations": [
													{
														"constant": false,
														"id": 2044,
														"mutability": "mutable",
														"name": "normalized",
														"nameLocation": "13598:10:13",
														"nodeType": "VariableDeclaration",
														"scope": 2060,
														"src": "13590:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2043,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13590:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2049,
												"initialValue": {
													"arguments": [
														{
															"id": 2046,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2004,
															"src": "13636:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2047,
															"name": "decimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2036,
															"src": "13644:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2045,
														"name": "_normalizeToUSDCDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2105,
														"src": "13611:24:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint8) pure returns (uint256)"
														}
													},
													"id": 2048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13611:42:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13590:63:13"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2050,
																	"name": "normalized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2044,
																	"src": "13672:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 2053,
																			"name": "price",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2030,
																			"src": "13693:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 2052,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "13685:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2051,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "13685:7:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13685:14:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13672:27:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2056,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "13671:29:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "316538",
														"id": 2057,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13703:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000_by_1",
															"typeString": "int_const 100000000"
														},
														"value": "1e8"
													},
													"src": "13671:35:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2008,
												"id": 2059,
												"nodeType": "Return",
												"src": "13664:42:13"
											}
										]
									},
									"id": 2061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_convertTokenToUSD",
									"nameLocation": "13249:18:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "13276:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "13268:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13268:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2004,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13291:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "13283:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13283:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13267:31:13"
									},
									"returnParameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2007,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "13322:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13322:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13321:9:13"
									},
									"scope": 2120,
									"src": "13240:474:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2104,
										"nodeType": "Block",
										"src": "14049:256:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2071,
														"name": "tokenDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2066,
														"src": "14064:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "36",
														"id": 2072,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14080:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"src": "14064:17:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2087,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2085,
															"name": "tokenDecimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2066,
															"src": "14163:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "36",
															"id": 2086,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14179:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"src": "14163:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 2101,
														"nodeType": "Block",
														"src": "14258:40:13",
														"statements": [
															{
																"expression": {
																	"id": 2099,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2064,
																	"src": "14280:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 2070,
																"id": 2100,
																"nodeType": "Return",
																"src": "14273:13:13"
															}
														]
													},
													"id": 2102,
													"nodeType": "IfStatement",
													"src": "14159:139:13",
													"trueBody": {
														"id": 2098,
														"nodeType": "Block",
														"src": "14182:70:13",
														"statements": [
															{
																"expression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2088,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2064,
																		"src": "14204:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2094,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 2089,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "14214:2:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							},
																							"id": 2092,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "36",
																								"id": 2090,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "14221:1:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_6_by_1",
																									"typeString": "int_const 6"
																								},
																								"value": "6"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"id": 2091,
																								"name": "tokenDecimals",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2066,
																								"src": "14225:13:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"src": "14221:17:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						}
																					],
																					"id": 2093,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "14220:19:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "14214:25:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2095,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "14213:27:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14204:36:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 2070,
																"id": 2097,
																"nodeType": "Return",
																"src": "14197:43:13"
															}
														]
													}
												},
												"id": 2103,
												"nodeType": "IfStatement",
												"src": "14060:238:13",
												"trueBody": {
													"id": 2084,
													"nodeType": "Block",
													"src": "14083:70:13",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2074,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2064,
																	"src": "14105:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2080,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2075,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14115:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						},
																						"id": 2078,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2076,
																							"name": "tokenDecimals",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2066,
																							"src": "14122:13:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "36",
																							"id": 2077,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "14138:1:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_6_by_1",
																								"typeString": "int_const 6"
																							},
																							"value": "6"
																						},
																						"src": "14122:17:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					}
																				],
																				"id": 2079,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "14121:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "14115:25:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2081,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "14114:27:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14105:36:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2070,
															"id": 2083,
															"nodeType": "Return",
															"src": "14098:43:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2062,
										"nodeType": "StructuredDocumentation",
										"src": "13853:81:13",
										"text": "@notice Convierte montos con distintos decimales a los de USDC (6 decimales)."
									},
									"id": 2105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_normalizeToUSDCDecimals",
									"nameLocation": "13956:24:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13989:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2105,
												"src": "13981:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13981:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "tokenDecimals",
												"nameLocation": "14003:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 2105,
												"src": "13997:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2065,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13997:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13980:37:13"
									},
									"returnParameters": {
										"id": 2070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2069,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2105,
												"src": "14041:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14041:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14040:9:13"
									},
									"scope": 2120,
									"src": "13947:358:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2111,
										"nodeType": "Block",
										"src": "14458:52:13",
										"statements": [
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2108,
														"name": "DirectTransferNotAllowed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "14476:24:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
															"typeString": "function () pure returns (error)"
														}
													},
													"id": 2109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14476:26:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_error",
														"typeString": "error"
													}
												},
												"id": 2110,
												"nodeType": "RevertStatement",
												"src": "14469:33:13"
											}
										]
									},
									"id": 2112,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14438:2:13"
									},
									"returnParameters": {
										"id": 2107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14458:0:13"
									},
									"scope": 2120,
									"src": "14431:79:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2118,
										"nodeType": "Block",
										"src": "14546:48:13",
										"statements": [
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2115,
														"name": "DirectCallNotAllowed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1343,
														"src": "14564:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
															"typeString": "function () pure returns (error)"
														}
													},
													"id": 2116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14564:22:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_error",
														"typeString": "error"
													}
												},
												"id": 2117,
												"nodeType": "RevertStatement",
												"src": "14557:29:13"
											}
										]
									},
									"id": 2119,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14526:2:13"
									},
									"returnParameters": {
										"id": 2114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14546:0:13"
									},
									"scope": 2120,
									"src": "14518:76:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2121,
							"src": "814:13783:13",
							"usedErrors": [
								352,
								355,
								696,
								1331,
								1334,
								1337,
								1340,
								1343,
								1346,
								1349,
								1352,
								1355,
								1358,
								1361,
								1364
							],
							"usedEvents": [
								364,
								373,
								382,
								1288,
								1299,
								1304,
								1309,
								1316,
								1321,
								1328
							]
						}
					],
					"src": "33:14564:13"
				},
				"id": 13
			}
		}
	}
}